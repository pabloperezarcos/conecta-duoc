var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.119,1,0.758]],["body/components/AppComponent.html",[0,0.194,1,1.317,2,1.103,3,0.226,4,0.193,5,0.953,6,0.953,7,0.953,8,0.193,9,3.131,10,0.953,11,1.782,12,1.782,13,2.021,14,1.263,15,5.506,16,1.317,17,1.317,18,1.263,19,4.909,20,3.279,21,4.909,22,0.226,23,0.391,24,6.1,25,6.1,26,1.283,27,3.807,28,2.105,29,2.619,30,0.89,31,4.909,32,5.506,33,0.996,34,4.909,35,4.909,36,4.187,37,3.703,38,0.891,39,0.027,40,0.665,41,0.345,42,0.776,43,0.672,44,1.026,45,1.107,46,1.144,47,3.703,48,3.703,49,3.279,50,1.763,51,3.703,52,0.447,53,3.652,54,2.981,55,3.703,56,0.805,57,0.723,58,0.447,59,5.506,60,4.909,61,0.953,62,3.703,63,3.703,64,3.703,65,1.637,66,0.226,67,0.489,68,3.703,69,3.703,70,3.703,71,3.703,72,2.473,73,1.181,74,3.703,75,3.703,76,3.703,77,3.703,78,3.703,79,1.542,80,3.703,81,3.703,82,4.909,83,0.776,84,0.953,85,1.263,86,1.263,87,0.953,88,1.509,89,0.953,90,0.953,91,0.832,92,0.953,93,0.832,94,1.263,95,1.263,96,0.832,97,0.832,98,0.953,99,0.832,100,0.953,101,0.832,102,0.953,103,0.953,104,0.832,105,0.953,106,0.832,107,0.953,108,0.832,109,0.953,110,0.953,111,0.953,112,0.832,113,0.953,114,0.832,115,0.623,116,0.953,117,0.832,118,0.953,119,0.832,120,0.832,121,0.193,122,0.193,123,0.953,124,0.832,125,0.832,126,0.891,127,0.953,128,0.018,129,0.018]],["title/guards/AuthGuard.html",[130,2.253,131,2.51]],["body/guards/AuthGuard.html",[3,0.252,4,0.215,8,0.215,13,1.699,22,0.252,23,0.329,26,1.192,28,2.083,30,0.955,33,0.642,39,0.026,43,0.955,46,1.132,50,1.481,56,0.765,57,0.805,58,0.498,61,1.062,66,0.252,67,0.544,73,0.992,79,1.823,83,1.103,121,0.35,122,0.329,128,0.02,129,0.02,130,3.874,131,3.917,132,3.069,133,3.489,134,1.135,135,2.267,136,5.801,137,4.905,138,3.917,139,5.801,140,4.453,141,5.266,142,5.266,143,5.266,144,3.874,145,5.459,146,4.126,147,3.517,148,2.791,149,1.375,150,1.929,151,4.453,152,1.706,153,3.315,154,3.522,155,5.266,156,5.266,157,3.917,158,5.266,159,3.198,160,3.229,161,5.338,162,4.453,163,4.453,164,4.905,165,2.907,166,4.546,167,1.449,168,5.266,169,1.355,170,2.505,171,2.119,172,1.824,173,1.385,174,2.756,175,3.517,176,3.069,177,4.126,178,3.489,179,4.126,180,2.389,181,4.126,182,3.489,183,4.126,184,2.297,185,3.489,186,3.489,187,1.481,188,4.126,189,3.489,190,4.126]],["title/components/BreadcrumbComponent.html",[0,0.119,91,0.758]],["body/components/BreadcrumbComponent.html",[0,0.183,1,0.742,2,1.021,3,0.202,4,0.172,5,0.85,6,0.85,7,0.85,8,0.172,10,0.85,11,1.761,12,1.761,14,1.169,16,0.742,17,0.742,18,1.169,22,0.317,23,0.362,26,1.253,27,3.154,28,2.009,30,0.824,33,0.913,36,2.206,38,0.795,39,0.027,40,0.627,41,0.365,42,0.692,43,0.824,44,0.874,45,0.942,46,0.887,49,3.035,50,1.632,52,0.75,56,0.599,57,0.645,58,0.399,61,0.85,66,0.202,67,0.436,73,1.346,83,0.952,84,0.85,85,1.169,86,1.169,87,0.85,88,1.44,89,0.85,90,0.85,91,1.257,92,0.85,93,0.742,94,1.169,95,1.169,96,0.742,97,0.742,98,0.85,99,0.742,100,0.85,101,0.742,102,0.85,103,0.85,104,0.742,105,0.85,106,0.742,107,0.85,108,0.742,109,0.85,110,0.85,111,0.85,112,0.742,113,0.85,114,0.742,115,0.556,116,0.85,117,0.742,118,0.85,119,0.742,120,0.742,121,0.172,122,0.172,123,0.85,124,0.742,125,0.742,126,0.795,127,0.85,128,0.017,129,0.017,165,1.571,166,3.864,167,0.909,173,1.526,191,1.526,192,2.793,193,1.996,194,3.918,195,1.336,196,2.471,197,1.526,198,5.194,199,4.544,200,3.562,201,2.15,202,4.544,203,3.303,204,1.526,205,4.544,206,3.303,207,2.457,208,2.793,209,3.303,210,3.303,211,3.303,212,3.864,213,5.194,214,3.303,215,3.303,216,3.303,217,3.303,218,5.194,219,3.303,220,3.303,221,5.194,222,3.864,223,2.457,224,4.544,225,3.303,226,0.909,227,3.303,228,3.303,229,2.006,230,2.457,231,3.303,232,3.303,233,3.303,234,3.303,235,2.793,236,2.793,237,2.006,238,3.38,239,3.035,240,2.457,241,3.035,242,3.035,243,3.303,244,3.303,245,3.303,246,4.364,247,2.333,248,5.349,249,5.595,250,5.595,251,1.428,252,1.109,253,2.006,254,1.632,255,2.009,256,3.035,257,1.46,258,0.85,259,1.632,260,1.186,261,2.206,262,1.269,263,2.333,264,4.544,265,1.696,266,1.571,267,3.303,268,3.303,269,1.696,270,1.269,271,1.839]],["title/components/CategoriasAdminComponent.html",[0,0.119,93,0.758]],["body/components/CategoriasAdminComponent.html",[0,0.169,1,0.641,2,0.92,3,0.174,4,0.149,5,0.734,6,0.734,7,0.734,8,0.149,10,0.734,11,1.732,12,1.732,14,1.055,16,0.641,17,0.641,18,1.055,22,0.174,23,0.326,26,1.128,30,0.743,33,1.012,38,0.986,39,0.027,40,0.67,41,0.406,42,0.859,43,1.049,44,0.934,45,1.007,46,0.8,52,0.495,56,0.786,57,0.556,58,0.344,61,0.734,66,0.174,67,0.376,73,0.986,83,1.099,84,0.734,85,1.055,86,1.055,87,0.734,88,1.349,89,0.734,90,0.734,91,1.178,92,0.734,93,1.178,94,1.349,95,1.055,96,0.641,97,0.641,98,0.734,99,0.641,100,0.734,101,0.641,102,0.734,103,0.734,104,0.641,105,0.734,106,0.641,107,0.734,108,0.641,109,0.734,110,0.734,111,0.734,112,0.641,113,0.734,114,0.641,115,0.48,116,0.734,117,0.641,118,0.734,119,0.641,120,0.641,121,0.25,122,0.25,123,0.734,124,0.641,125,0.641,126,0.686,127,0.734,128,0.015,129,0.015,134,0.785,154,3.184,173,1.376,191,1.376,193,1.843,195,1.205,196,2.281,197,1.376,201,2.015,204,2.164,226,1.32,230,3.048,251,1.287,252,0.957,254,1.024,255,1.471,258,0.734,259,1.471,260,1.024,262,1.096,270,1.096,271,1.587,272,5.54,273,5.54,274,2.411,275,5.327,276,2.281,277,2.912,278,2.912,279,4.796,280,4.097,281,4.796,282,4.796,283,4.696,284,2.912,285,4.796,286,3.862,287,4.433,288,2.488,289,1.949,290,3.502,291,3.048,292,4.796,293,2.851,294,2.851,295,4.097,296,3.338,297,2.851,298,4.055,299,4.097,300,2.851,301,2.851,302,2.851,303,2.912,304,2.851,305,2.851,306,2.737,307,2.851,308,2.134,309,2.851,310,2.488,311,2.851,312,2.851,313,2.851,314,2.851,315,1.26,316,1.731,317,1.731,318,1.356,319,1.464,320,1.904,321,1.904,322,1.904,323,1.587,324,2.851,325,1.731,326,2.912,327,3.203,328,5.243,329,2.851,330,4.097,331,2.411,332,2.851,333,2.851,334,2.851,335,2.851,336,2.851,337,4.055,338,2.851,339,4.097,340,2.851,341,1.464,342,2.851,343,2.851,344,2.411,345,2.851,346,2.851,347,2.411,348,1.174,349,2.851,350,3.502,351,3.048,352,1.575,353,1.811,354,4.433,355,3.048,356,1.949,357,3.048,358,2.488,359,4.097,360,4.097,361,4.097,362,1.174,363,1.904,364,1.174,365,1.096,366,1.731,367,1.904,368,0.957,369,1.26,370,1.904,371,1.174,372,1.904,373,1.174,374,1.587,375,1.356,376,1.904,377,1.731,378,1.096,379,1.174,380,1.356]],["title/components/CategoriasComponent.html",[0,0.119,96,0.758]],["body/components/CategoriasComponent.html",[0,0.129,1,0.413,2,0.66,3,0.112,4,0.096,5,0.473,6,0.473,7,0.473,8,0.096,10,0.473,11,1.621,12,1.621,14,0.756,16,0.413,17,0.413,18,0.756,22,0.224,23,0.234,26,1.264,27,2.226,28,1.503,29,1.397,30,0.533,33,1.025,36,1.228,38,0.882,39,0.027,40,0.589,41,0.416,42,0.768,43,0.928,44,1.067,45,1.142,46,0.892,49,1.961,50,1.054,52,0.661,56,0.757,57,0.359,58,0.222,61,0.473,66,0.112,67,0.243,72,1.228,73,1.231,79,1.315,83,1.242,84,0.473,85,0.756,86,0.756,87,0.473,88,1.077,89,0.473,90,0.473,91,0.94,92,0.473,93,0.413,94,0.756,95,0.756,96,0.94,97,0.413,98,0.473,99,0.413,100,0.473,101,0.413,102,0.473,103,0.473,104,0.413,105,0.473,106,0.413,107,0.473,108,0.413,109,0.473,110,0.473,111,0.473,112,0.413,113,0.473,114,0.413,115,0.922,116,0.473,117,0.413,118,0.473,119,0.413,120,0.413,121,0.267,122,0.239,123,0.473,124,0.413,125,0.413,126,0.442,127,0.473,128,0.011,129,0.011,149,0.768,150,0.541,152,0.863,165,1.397,167,1.008,173,0.986,180,0.757,191,0.986,193,1.408,194,1.228,195,0.863,196,1.743,197,0.986,201,1.608,204,1.961,207,2.727,212,1.368,223,3.402,226,1.008,235,4.122,236,1.555,237,1.117,238,1.368,239,1.961,240,1.368,241,1.961,242,1.961,251,0.923,252,0.618,253,1.117,254,1.503,255,1.642,257,1.85,258,1.546,259,1.503,260,1.054,262,0.707,263,1.508,266,0.875,269,0.944,270,1.128,275,2.483,276,1.743,277,2.226,278,2.226,284,2.226,286,1.961,291,2.184,303,2.226,306,1.961,308,1.608,310,1.783,315,0.813,316,1.117,317,1.117,318,0.875,319,2.149,320,1.228,321,1.228,323,1.024,325,1.117,326,1.783,348,1.209,352,1.608,357,2.184,362,0.757,364,1.509,365,0.707,366,2.777,367,2.448,368,1.231,371,1.209,373,1.209,374,2.041,375,1.397,378,1.966,379,2.008,380,1.397,381,1.555,382,3.665,383,2.937,384,3.665,385,3.665,386,3.665,387,3.113,388,2.727,389,3.665,390,5.117,391,5.117,392,3.665,393,2.149,394,3.665,395,2.33,396,2.541,397,1.405,398,2.483,399,3.538,400,2.937,401,4.185,402,2.483,403,4.185,404,3.665,405,2.937,406,2.158,407,2.348,408,1.177,409,1.839,410,2.483,411,1.839,412,2.937,413,1.839,414,1.839,415,1.839,416,2.937,417,1.839,418,1.839,419,1.839,420,1.839,421,1.839,422,1.839,423,1.839,424,1.839,425,1.839,426,1.839,427,1.839,428,1.839,429,1.839,430,1.961,431,1.839,432,1.839,433,1.839,434,2.184,435,1.839,436,1.839,437,1.839,438,2.483,439,1.839,440,1.839,441,1.209,442,1.839,443,1.839,444,1.839,445,1.368,446,1.024,447,1.368,448,1.228,449,0.813,450,1.368,451,1.555,452,1.839,453,2.937,454,1.555,455,1.555,456,1.839,457,1.839,458,1.228,459,4.573,460,1.839,461,1.839,462,2.937,463,1.839,464,2.937,465,2.184,466,1.839,467,2.937,468,1.555,469,1.839,470,1.635,471,1.839,472,1.555,473,1.839,474,1.839,475,1.839,476,1.555,477,2.256,478,3.099,479,1.839,480,1.839,481,1.839,482,1.839,483,1.839,484,1.839,485,1.839,486,1.839,487,1.555,488,1.839,489,1.839,490,1.839,491,1.839,492,4.185,493,2.937,494,1.839,495,1.839,496,1.839,497,1.117,498,0.541,499,0.473,500,1.368,501,1.839,502,1.839,503,0.944,504,1.024,505,1.555,506,1.839,507,1.024,508,1.839,509,1.368,510,1.62,511,1.839,512,1.024,513,2.483,514,1.228,515,1.117,516,1.054,517,1.839,518,4.573,519,1.839,520,0.875,521,1.555,522,1.555,523,1.368,524,1.555,525,1.555,526,3.867,527,1.555,528,1.368,529,1.555,530,1.555,531,1.555,532,1.555,533,1.555,534,0.707,535,1.839,536,0.813,537,1.839,538,1.839,539,1.839,540,1.555,541,2.483,542,2.937,543,4.185,544,2.937,545,2.937,546,2.937,547,1.508,548,2.937,549,2.937,550,2.729,551,2.483,552,1.99,553,2.937,554,2.937,555,2.937,556,2.937,557,2.937,558,2.184,559,2.483,560,2.937,561,4.185,562,2.483,563,1.783,564,0.759,565,1.961,566,2.483,567,1.783,568,2.483,569,0.923,570,2.937,571,2.483,572,2.937,573,1.555,574,2.937,575,2.483,576,2.483,577,2.937,578,2.937,579,1.555,580,1.508,581,1.555,582,1.555,583,1.839,584,2.319,585,1.839,586,1.555,587,1.228,588,1.743,589,1.743,590,1.839,591,2.041,592,1.839,593,1.508,594,1.555,595,1.228,596,2.483,597,2.937,598,1.783,599,1.555,600,1.555,601,1.839,602,0.944,603,1.368,604,1.024,605,1.555,606,1.839,607,2.448,608,1.228,609,1.024,610,1.839,611,1.117,612,1.783,613,1.839,614,1.783,615,1.117,616,2.483,617,1.368,618,1.228,619,1.839,620,1.555,621,1.839,622,1.839,623,1.839,624,1.961,625,2.483,626,1.024,627,1.839,628,1.228,629,1.368,630,1.555,631,1.555]],["title/interfaces/Comment.html",[632,0.992,633,1.605]],["body/interfaces/Comment.html",[3,0.226,4,0.193,8,0.193,22,0.226,23,0.391,29,1.758,39,0.027,41,0.428,52,0.825,66,0.358,121,0.355,122,0.359,128,0.018,129,0.018,134,1.017,149,1.313,150,1.88,152,1.793,180,2.019,187,2.402,226,1.017,348,1.522,368,2.047,406,1.42,407,1.898,408,1.759,477,2.58,498,1.98,499,1.671,503,1.898,504,2.058,516,2.455,520,2.616,534,2.457,536,2.431,564,1.063,567,2.244,569,1.728,580,1.898,632,1.723,633,2.332,634,1.758,635,2.244,636,3.008,637,2.047,638,2.977,639,3.274,640,2.786,641,3.008,642,2.616,643,3.274,644,3.34,645,2.824,646,3.274,647,3.274,648,2.468,649,2.468,650,2.468,651,2.468,652,3.274,653,3.34,654,2.977,655,3.274,656,2.977,657,3.34,658,2.468,659,2.468,660,2.468,661,2.244,662,2.244,663,2.468,664,2.058,665,2.468,666,2.468]],["title/injectables/CommentService.html",[169,0.868,667,1.878]],["body/injectables/CommentService.html",[3,0.209,4,0.179,8,0.179,13,1.411,22,0.209,23,0.371,26,1.196,30,0.845,33,0.954,38,1.367,39,0.027,40,0.686,41,0.417,42,1.191,43,1.138,44,0.784,45,0.845,52,0.686,56,0.75,57,0.669,58,0.414,65,1.515,66,0.209,67,0.452,83,1.191,115,0.784,121,0.341,122,0.243,128,0.017,129,0.017,134,1.635,135,1.673,149,1.191,152,1.671,167,1.282,169,1.199,172,1.515,187,1.673,288,2.83,289,2.703,352,1.791,368,1.996,408,1.665,446,1.908,497,2.83,498,1.877,499,1.642,515,2.83,516,2.201,520,2.703,534,1.791,564,1.031,569,1.785,633,2.916,637,2.059,638,3.006,640,2.217,641,3.148,667,2.595,668,1.63,669,2.898,670,2.217,671,3.113,672,2.393,673,1.908,674,3.643,675,1.37,676,2.83,677,2.948,678,2.948,679,3.941,680,3.467,681,4.66,682,3.941,683,4.66,684,3.537,685,3.428,686,3.467,687,4.227,688,2.83,689,3.113,690,3.941,691,3.467,692,4.66,693,3.113,694,3.602,695,3.941,696,4.66,697,3.428,698,3.113,699,2.393,700,4.66,701,4.66,702,4.66,703,4.66,704,3.428,705,2.393,706,2.393,707,4.66,708,3.113,709,4.66,710,3.428,711,2.83,712,3.941,713,3.941,714,4.66,715,3.428,716,2.595,717,2.595,718,2.595,719,2.595,720,3.428,721,1.908,722,1.908,723,3.052,724,3.428,725,2.289,726,3.428,727,3.428]],["title/components/ConfiguracionComponent.html",[0,0.119,97,0.758]],["body/components/ConfiguracionComponent.html",[0,0.206,1,0.943,2,1.196,3,0.256,4,0.219,5,1.081,6,1.081,7,1.081,8,0.219,10,1.081,11,1.803,12,1.803,14,1.371,16,0.943,17,0.943,18,1.371,20,3.557,39,0.026,40,0.643,46,1.039,56,0.811,58,0.507,61,1.081,66,0.256,67,0.554,84,1.081,85,1.371,86,1.371,87,1.081,88,1.583,89,1.081,90,1.081,91,1.382,92,1.081,93,0.943,94,1.371,95,1.371,96,0.943,97,1.382,98,1.081,99,0.943,100,1.081,101,0.943,102,1.081,103,1.081,104,0.943,105,1.081,106,0.943,107,1.081,108,0.943,109,1.081,110,1.081,111,1.081,112,0.943,113,1.081,114,0.943,115,0.984,116,1.081,117,0.943,118,1.081,119,0.943,120,0.943,121,0.351,122,0.331,123,1.081,124,0.943,125,1.426,126,1.01,127,1.081,128,0.02,129,0.02,195,1.566,196,2.782,276,2.782,315,1.856,323,2.338,350,4.108,351,3.961,353,2.719,363,3.557,672,2.735,673,1.788,728,3.551,729,5.325,730,5.325,731,5.325,732,3.961,733,5.325,734,5.325,735,5.325]],["title/components/DashboardComponent.html",[0,0.119,99,0.758]],["body/components/DashboardComponent.html",[0,0.161,1,0.592,2,0.869,3,0.161,4,0.137,5,0.678,6,0.678,7,0.678,8,0.137,10,0.678,11,1.714,12,1.714,14,0.996,16,0.592,17,0.592,18,0.996,22,0.161,23,0.308,26,1.098,29,1.253,30,0.702,33,0.928,38,0.931,39,0.027,40,0.679,41,0.378,42,0.811,43,0.832,44,0.978,45,0.976,46,0.895,52,0.796,54,2.35,56,0.742,57,0.514,58,0.318,61,0.678,66,0.161,67,0.348,73,0.634,79,0.828,83,1.396,84,0.678,85,0.996,86,0.996,87,0.678,88,1.3,89,0.678,90,0.678,91,0.592,92,0.678,93,0.592,94,0.996,95,0.996,96,0.592,97,0.592,98,0.678,99,1.135,100,0.678,101,0.592,102,0.678,103,0.678,104,0.592,105,0.678,106,0.592,107,0.678,108,0.592,109,0.678,110,0.678,111,0.678,112,0.592,113,0.678,114,0.592,115,0.443,116,0.678,117,0.592,118,0.678,119,0.592,120,0.592,121,0.264,122,0.281,123,0.678,124,0.592,125,0.592,126,0.634,127,0.678,128,0.014,129,0.014,135,1.389,152,1.138,157,2.878,159,1.6,167,1.39,173,1.299,191,1.299,193,1.762,195,1.138,196,2.181,197,1.299,201,1.942,204,1.299,222,3.411,223,1.96,226,0.725,237,2.35,239,2.584,240,2.878,241,2.584,242,2.584,247,1.987,251,1.216,252,0.885,254,0.946,255,2.185,257,1.165,258,1.448,259,1.646,260,0.946,262,1.762,263,2.354,266,1.253,269,1.353,270,1.013,276,2.181,296,1.987,298,4.551,306,2.584,308,2.292,315,1.165,319,2.594,320,1.76,321,1.76,322,1.76,350,2.584,352,1.487,356,2.181,362,1.085,363,3.062,364,1.593,365,1.762,375,1.253,378,1.487,380,1.253,397,1.697,441,1.593,449,1.165,455,2.228,524,3.272,525,3.272,526,5.466,527,3.272,528,2.878,529,3.272,530,3.272,531,3.272,552,2.403,564,0.702,584,1.84,588,1.84,589,2.181,591,2.154,593,1.353,595,1.76,602,1.353,608,3.062,609,1.467,614,3.068,615,1.6,616,4.551,618,3.062,628,1.76,732,3.411,736,2.228,737,4.585,738,3.869,739,4.757,740,2.996,741,3.877,742,3.869,743,3.869,744,3.869,745,2.635,746,3.869,747,2.635,748,2.635,749,2.635,750,2.635,751,2.635,752,2.635,753,2.635,754,3.869,755,2.635,756,2.635,757,2.228,758,1.96,759,2.228,760,1.6,761,2.228,762,3.869,763,2.228,764,2.228,765,2.635,766,2.635,767,2.635,768,3.062,769,2.784,770,2.635,771,2.635,772,2.635,773,5.964,774,5.964,775,2.635,776,2.228,777,2.635,778,2.635,779,2.635,780,2.635,781,2.635,782,2.635,783,2.635,784,2.635,785,2.635,786,2.635,787,2.635,788,2.635,789,2.635,790,2.635,791,2.635,792,2.635,793,2.635,794,3.869,795,3.869,796,3.272,797,3.869,798,3.869,799,3.272,800,3.272,801,2.35,802,3.869,803,3.869,804,3.869,805,3.869,806,3.869,807,3.869,808,3.272,809,2.635,810,1.6,811,2.635,812,2.635,813,1.6,814,2.878,815,2.635,816,2.635,817,2.635,818,2.635,819,2.635,820,2.228,821,2.635,822,2.635,823,3.869,824,2.635,825,2.635,826,2.635,827,3.869,828,2.635,829,2.635,830,2.635,831,2.635,832,2.635]],["title/components/DetalleComponent.html",[0,0.119,101,0.758]],["body/components/DetalleComponent.html",[0,0.135,1,0.443,2,0.697,3,0.189,4,0.103,5,0.507,6,0.507,7,0.507,8,0.103,10,0.507,11,1.641,12,1.641,14,0.798,16,0.443,17,0.443,18,0.798,22,0.12,23,0.247,26,1.277,27,2.329,28,1.562,30,0.563,33,1.014,36,1.317,38,0.746,39,0.027,40,0.525,41,0.393,42,0.65,43,0.911,44,1.038,45,1.119,46,0.923,49,2.072,50,1.114,52,0.375,56,0.771,57,0.385,58,0.238,61,0.507,66,0.12,67,0.26,72,1.317,73,1.138,79,1.486,83,0.912,84,0.507,85,0.798,86,0.798,87,0.507,88,1.12,89,0.507,90,0.507,91,0.977,92,0.507,93,0.443,94,0.798,95,0.798,96,0.443,97,0.443,98,0.507,99,0.443,100,0.507,101,0.977,102,0.507,103,0.507,104,0.443,105,0.507,106,0.443,107,0.507,108,0.443,109,0.507,110,0.507,111,0.507,112,0.443,113,0.507,114,0.443,115,0.332,116,0.507,117,0.443,118,0.507,119,0.443,120,0.443,121,0.103,122,0.103,123,0.507,124,0.443,125,0.443,126,0.474,127,0.507,128,0.012,129,0.012,149,0.65,173,1.042,191,1.042,193,1.474,194,1.317,195,0.912,196,1.825,197,1.042,200,1.197,201,1.672,204,1.996,207,2.308,222,1.466,226,1.197,229,1.884,247,1.593,251,0.975,252,0.662,254,1.887,255,2.165,256,1.317,257,2.091,258,1.641,259,2.099,260,1.804,261,1.317,262,0.758,263,1.593,265,2.429,270,1.818,271,1.098,276,1.825,277,2.329,284,2.329,303,2.329,308,1.818,310,1.884,315,0.871,316,1.197,317,1.197,318,0.938,323,1.098,325,1.197,326,1.197,362,0.812,364,1.277,365,0.758,366,1.884,367,1.317,368,1.461,369,0.871,371,1.277,372,1.317,373,1.58,374,2.136,375,1.825,376,1.317,378,2.371,379,2.164,380,0.938,387,2.308,388,2.853,393,2.234,395,2.422,396,2.642,397,1.461,398,2.623,402,3.678,406,2.247,407,1.97,408,1.293,430,2.072,434,2.308,438,2.623,441,1.277,445,1.466,446,1.098,447,1.466,448,1.317,449,0.871,450,1.466,451,1.667,454,1.667,458,2.072,465,1.466,476,1.667,477,2.069,478,2.623,498,0.912,507,2.136,512,2.136,520,1.476,521,2.623,522,1.667,523,1.466,533,1.667,534,1.192,536,1.371,540,2.623,550,2.234,563,1.884,564,0.563,566,2.623,573,1.667,575,2.623,576,2.623,579,1.667,580,1.593,584,1.476,588,1.825,589,1.825,591,1.727,593,2.234,594,1.667,595,1.317,596,1.667,598,1.197,603,1.466,604,2.136,607,3.637,608,2.906,609,2.422,612,2.329,614,3.051,626,1.098,628,1.317,629,2.308,630,1.667,631,1.667,633,2.39,638,1.696,640,1.476,642,0.938,662,2.329,667,2.422,674,2.634,675,0.58,684,1.317,760,1.197,761,3.244,813,1.197,833,1.667,834,3.102,835,3.836,836,3.102,837,3.836,838,5.445,839,4.731,840,4.731,841,3.836,842,4.445,843,4.35,844,3.102,845,4.248,846,3.102,847,1.971,848,1.971,849,1.971,850,3.102,851,1.971,852,4.731,853,1.971,854,1.971,855,1.971,856,1.971,857,2.308,858,1.971,859,2.308,860,2.623,861,1.971,862,1.971,863,1.971,864,1.971,865,4.35,866,1.971,867,1.971,868,1.971,869,1.971,870,1.971,871,1.971,872,1.971,873,1.971,874,1.971,875,1.971,876,1.466,877,1.971,878,1.971,879,1.971,880,1.971,881,1.971,882,4.35,883,1.971,884,1.971,885,1.971,886,3.102,887,1.971,888,1.971,889,3.102,890,1.971,891,1.971,892,0.812,893,3.102,894,1.971,895,1.971,896,1.971,897,4.35,898,1.971,899,3.102,900,1.971,901,1.971,902,1.971,903,1.971,904,1.971,905,1.971,906,1.971,907,1.971,908,1.667,909,1.971,910,1.971,911,3.102,912,3.102,913,3.102,914,3.102,915,3.102,916,3.102,917,3.102,918,3.102,919,3.102,920,3.102,921,3.102,922,2.623,923,3.102,924,1.466,925,2.623,926,2.853,927,3.102,928,1.971,929,1.667,930,1.667,931,1.971,932,2.308,933,1.971,934,1.971,935,2.623,936,1.971,937,1.667,938,3.102,939,1.197,940,1.197,941,1.593,942,1.197,943,1.971,944,1.971,945,1.466,946,1.667,947,1.971,948,1.971,949,1.971,950,1.971,951,1.971,952,1.971,953,1.971,954,1.971,955,1.971,956,1.971]],["title/components/FooterComponent.html",[0,0.119,17,0.758]],["body/components/FooterComponent.html",[0,0.199,1,0.877,2,1.141,3,0.238,4,0.204,5,1.005,6,1.005,7,1.005,8,0.204,10,1.005,11,1.791,12,1.791,14,1.308,16,0.877,17,1.344,18,1.308,20,3.394,22,0.238,23,0.405,33,0.608,39,0.026,40,0.613,41,0.274,44,0.657,45,0.708,46,0.992,53,3.78,54,3.086,56,0.67,58,0.471,61,1.005,66,0.238,67,0.515,84,1.005,85,1.308,86,1.308,87,1.005,88,1.54,89,1.005,90,1.005,91,0.877,92,1.005,93,0.877,94,1.308,95,1.308,96,0.877,97,0.877,98,1.005,99,0.877,100,1.005,101,0.877,102,1.005,103,1.005,104,0.877,105,1.005,106,0.877,107,1.005,108,0.877,109,1.005,110,1.005,111,1.005,112,0.877,113,1.005,114,0.877,115,0.657,116,1.005,117,0.877,118,1.005,119,0.877,120,1.269,121,0.346,122,0.295,123,1.005,124,0.877,125,0.877,126,0.939,127,1.005,128,0.019,129,0.019,195,1.494,408,1.308,470,2.829,510,2.246,532,4.297,552,2.417,569,1.597,673,1.706,706,2.609,932,3.78,957,3.3,958,4.777,959,5.081,960,5.081,961,5.65,962,5.081,963,3.903,964,5.081,965,6.789,966,5.081,967,6.361,968,4.297,969,5.081,970,5.081,971,5.081,972,5.081,973,5.081,974,3.78,975,5.081,976,4.297,977,5.081,978,5.081,979,5.081,980,5.081,981,5.081,982,5.081,983,4.297,984,4.297,985,4.297,986,4.297,987,5.081,988,4.297,989,4.297,990,5.081]],["title/components/ForbiddenComponent.html",[0,0.119,104,0.758]],["body/components/ForbiddenComponent.html",[0,0.213,1,1.022,2,1.258,3,0.278,4,0.237,5,1.171,6,1.171,7,1.171,8,0.237,10,1.171,11,1.816,12,1.816,14,1.171,16,1.022,17,1.022,18,1.441,20,3.739,39,0.026,40,0.676,56,0.6,58,0.549,66,0.278,67,0.6,84,1.171,85,1.441,86,1.441,87,1.171,88,1.629,89,1.171,90,1.171,91,1.022,92,1.171,93,1.022,94,1.441,95,1.441,96,1.022,97,1.022,98,1.171,99,1.022,100,1.171,101,1.022,102,1.171,103,1.171,104,1.422,105,1.171,106,1.022,107,1.171,108,1.022,109,1.171,110,1.171,111,1.171,112,1.022,113,1.171,114,1.022,115,0.765,116,1.171,117,1.022,118,1.171,119,1.022,120,1.022,121,0.237,122,0.237,123,1.171,124,1.022,125,1.022,126,1.094,127,1.171,128,0.021,129,0.021,991,3.847,992,6.329,993,5.599,994,5.599,995,5.599]],["title/components/LoginComponent.html",[0,0.119,106,0.758]],["body/components/LoginComponent.html",[0,0.159,1,0.58,2,0.856,3,0.158,4,0.135,5,0.664,6,0.664,7,0.664,8,0.135,10,0.664,11,1.709,12,1.709,14,0.664,16,0.58,17,0.58,18,0.981,22,0.158,23,0.304,26,1.233,28,1.796,29,2.155,30,0.691,33,0.942,38,0.621,39,0.027,40,0.547,41,0.268,42,0.541,43,0.907,44,0.898,45,0.968,46,0.884,50,1.368,52,0.604,53,3.721,54,3.391,56,0.704,57,0.504,58,0.312,61,0.664,66,0.158,67,0.341,73,0.917,79,1.677,84,0.664,85,0.981,86,0.981,87,0.664,88,1.287,89,0.664,90,0.664,91,0.58,92,0.664,93,0.58,94,0.981,95,0.981,96,0.58,97,0.58,98,0.664,99,0.58,100,0.664,101,0.58,102,0.664,103,0.664,104,0.58,105,0.664,106,1.124,107,0.664,108,0.58,109,0.664,110,0.664,111,0.664,112,0.58,113,0.664,114,0.58,115,0.434,116,0.664,117,0.58,118,0.664,119,0.58,120,0.58,121,0.261,122,0.261,123,0.664,124,0.58,125,0.58,126,0.621,127,0.664,128,0.014,129,0.014,135,1.368,144,3.341,147,2.545,148,2.621,149,0.799,150,1.569,153,2.569,162,3.223,165,1.228,167,1.049,170,1.568,171,1.326,173,1.28,174,2.545,175,3.564,176,1.92,178,5.207,184,1.437,191,1.28,193,1.741,195,1.121,197,1.28,201,1.922,204,1.792,226,0.71,229,1.568,251,1.197,252,0.867,253,1.568,254,2.174,255,2.331,256,1.724,257,2.469,258,1.287,259,2.005,260,1.627,262,1.741,265,1.326,266,1.813,269,2.326,270,1.741,271,2.122,308,0.992,353,1.685,362,1.569,364,1.866,365,1.741,369,1.141,370,1.724,371,2.06,373,1.569,374,1.437,375,1.228,377,2.314,378,1.922,379,1.569,380,1.228,397,1.68,441,1.569,449,1.141,458,1.724,507,2.785,512,3.428,513,4.23,514,2.545,552,1.228,564,0.691,569,1.197,581,2.183,584,2.379,587,3.341,588,1.228,589,1.228,591,1.437,602,2.326,604,1.437,607,1.724,611,1.568,614,3.038,624,1.724,626,2.122,628,1.724,673,1.28,675,1.121,706,1.957,810,1.568,813,1.568,814,1.92,892,1.866,924,1.92,932,1.92,945,1.92,974,2.835,983,3.223,984,3.223,985,3.223,986,3.223,988,3.223,989,3.223,996,2.183,997,4.53,998,3.811,999,5.776,1000,3.811,1001,4.23,1002,3.811,1003,2.581,1004,4.722,1005,3.811,1006,3.811,1007,3.811,1008,3.811,1009,3.811,1010,3.811,1011,3.811,1012,3.811,1013,1.326,1014,2.581,1015,2.581,1016,2.581,1017,2.581,1018,2.581,1019,2.581,1020,2.581,1021,2.581,1022,1.568,1023,5.336,1024,3.811,1025,2.581,1026,2.581,1027,2.581,1028,2.581,1029,2.581,1030,2.183,1031,2.581,1032,2.581,1033,4.53,1034,2.581,1035,2.581,1036,2.581,1037,1.437,1038,2.581,1039,2.835,1040,2.581,1041,2.581,1042,2.183,1043,2.581,1044,2.581,1045,2.183,1046,2.581,1047,2.581,1048,2.581,1049,3.811,1050,3.223,1051,3.223,1052,2.835,1053,2.581,1054,1.724,1055,1.92,1056,2.581,1057,2.581,1058,3.37,1059,1.724,1060,1.724,1061,2.183,1062,2.581,1063,2.581,1064,1.724,1065,1.568,1066,2.183,1067,2.581,1068,2.581,1069,2.183,1070,2.581,1071,2.183,1072,2.581,1073,2.581,1074,2.581]],["title/components/ModalConfirmacionComponent.html",[0,0.119,108,0.758]],["body/components/ModalConfirmacionComponent.html",[0,0.188,1,0.788,2,1.063,3,0.214,4,0.183,5,0.902,6,0.902,7,0.902,8,0.183,10,0.902,11,1.773,12,1.773,14,0.902,16,0.788,17,0.788,18,1.218,22,0.289,33,0.932,39,0.026,40,0.571,41,0.421,44,0.901,45,0.972,46,0.923,52,0.571,56,0.462,58,0.423,66,0.214,67,0.462,79,1.487,84,0.902,85,1.218,86,1.218,87,0.902,88,1.476,89,0.902,90,0.902,91,0.788,92,0.902,93,0.788,94,1.218,95,1.218,96,0.788,97,0.788,98,0.902,99,0.788,100,0.902,101,0.788,102,0.902,103,0.902,104,0.788,105,0.902,106,0.788,107,0.902,108,1.288,109,1.691,110,0.902,111,0.902,112,0.788,113,0.902,114,0.788,115,0.59,116,0.902,117,0.788,118,0.902,119,0.788,120,0.788,121,0.183,122,0.183,123,0.902,124,0.788,125,0.788,126,0.843,127,0.902,128,0.018,129,0.018,153,2.43,159,2.129,191,1.589,195,1.391,197,1.589,200,2.129,251,1.487,252,1.177,254,1.699,255,2.059,257,1.55,258,1.651,259,1.699,260,1.699,263,1.8,269,1.8,286,4,362,2.466,364,1.948,365,1.347,366,2.129,368,1.589,369,2.092,371,2.362,373,1.443,375,2.251,378,1.347,379,1.443,470,2.634,550,2.43,584,2.548,587,2.341,588,2.251,589,1.667,591,2.634,593,2.43,598,2.129,602,1.8,605,4.849,612,2.129,620,2.964,624,3.16,625,2.964,626,1.952,814,2.608,939,3.253,940,2.873,941,2.945,942,2.873,1052,3.52,1054,2.341,1055,2.608,1075,5.218,1076,4.122,1077,2.964,1078,4.732,1079,5.356,1080,4.732,1081,4.732,1082,5.064,1083,5.989,1084,4.732,1085,4.529,1086,3.506,1087,4.732,1088,4.001,1089,3.506,1090,3.506,1091,5.989,1092,3.506,1093,3.506,1094,5.356,1095,3.506,1096,3.506,1097,3.506,1098,3.506,1099,2.964,1100,3.506,1101,3.506,1102,3.506,1103,2.964,1104,2.964,1105,4.001,1106,2.608,1107,3.506]],["title/components/NavbarComponent.html",[0,0.119,16,0.758]],["body/components/NavbarComponent.html",[0,0.179,1,0.714,2,0.994,3,0.194,4,0.166,5,0.818,6,0.818,7,0.818,8,0.166,10,0.818,11,1.754,12,1.754,14,1.139,16,1.236,17,0.714,18,1.139,22,0.194,23,0.353,26,1.242,28,1.976,30,0.803,33,0.991,39,0.027,40,0.534,41,0.223,43,0.998,44,0.973,45,1.049,46,0.993,50,1.589,52,0.534,56,0.79,57,0.62,58,0.384,61,1.139,66,0.194,67,0.419,73,0.765,79,1.599,84,0.818,85,1.139,86,1.139,87,0.818,88,1.416,89,0.818,90,0.818,91,0.714,92,0.818,93,0.714,94,1.139,95,1.139,96,0.714,97,0.714,98,0.818,99,0.714,100,0.818,101,0.714,102,0.818,103,0.818,104,0.714,105,0.818,106,0.714,107,0.818,108,1.236,109,0.818,110,0.818,111,0.818,112,0.714,113,0.818,114,0.714,115,0.535,116,0.818,117,0.714,118,0.818,119,0.714,120,0.714,121,0.266,122,0.166,123,0.818,124,0.714,125,0.714,126,0.765,127,0.818,128,0.016,129,0.016,140,4.304,144,2.123,148,1.405,149,0.927,150,1.497,153,2.272,170,1.93,171,1.632,173,1.486,174,2.955,175,3.4,184,1.77,191,1.486,193,1.956,195,1.301,197,1.486,201,2.115,204,1.943,251,1.39,252,1.067,254,1.976,255,2.25,257,1.956,258,0.818,259,1.976,260,1.589,261,2.123,262,1.7,265,1.632,266,1.512,270,1.7,271,2.463,308,2.223,341,2.272,356,1.512,362,1.309,364,1.309,365,1.7,369,1.405,370,2.123,371,1.309,373,1.309,374,1.77,377,1.93,378,1.7,379,1.309,380,1.512,397,1.943,441,1.822,449,1.405,497,1.93,499,0.818,507,1.77,541,2.688,564,0.803,584,1.512,588,1.512,589,1.512,602,2.614,611,1.93,670,1.512,673,1.067,675,1.301,706,1.632,741,4.892,757,2.688,758,2.364,759,2.688,760,1.93,810,1.93,926,2.364,958,4.304,1001,4.892,1030,2.688,1052,3.291,1058,3.291,1059,2.123,1060,2.123,1061,2.688,1064,2.123,1065,1.93,1076,2.123,1108,2.688,1109,5.09,1110,5.09,1111,4.425,1112,5.09,1113,5.503,1114,5.503,1115,3.179,1116,3.179,1117,3.179,1118,3.179,1119,3.179,1120,3.179,1121,3.179,1122,3.179,1123,3.179,1124,2.688,1125,2.688,1126,2.688,1127,3.179,1128,2.364,1129,2.688,1130,2.688,1131,3.179,1132,3.179,1133,3.179,1134,3.179,1135,3.179,1136,3.179,1137,2.688,1138,4.425,1139,3.179,1140,3.179,1141,3.179,1142,3.179,1143,3.741,1144,3.291,1145,3.179,1146,3.179,1147,4.425,1148,3.179,1149,3.179]],["title/components/PerfilComponent.html",[0,0.119,112,0.758]],["body/components/PerfilComponent.html",[0,0.143,1,0.486,2,0.749,3,0.132,4,0.113,5,0.557,6,0.557,7,0.557,8,0.113,10,0.557,11,1.666,12,1.666,14,0.858,16,0.486,17,0.486,18,0.858,22,0.132,23,0.266,26,1.227,28,1.642,30,0.605,33,0.994,38,0.802,39,0.027,40,0.552,41,0.405,42,0.699,43,0.896,44,1.023,45,1.103,46,0.651,50,1.197,52,0.596,56,0.812,57,0.422,58,0.261,61,0.557,65,0.956,66,0.132,67,0.285,73,0.979,83,0.699,84,0.557,85,0.858,86,0.858,87,0.557,88,1.177,89,0.557,90,0.557,91,1.027,92,0.557,93,0.486,94,0.858,95,0.858,96,0.486,97,0.486,98,0.557,99,0.486,100,0.557,101,0.486,102,0.557,103,0.557,104,0.486,105,0.557,106,0.486,107,0.557,108,0.486,109,0.557,110,0.557,111,0.557,112,1.027,113,0.557,114,0.486,115,0.831,116,0.557,117,0.486,118,0.557,119,0.486,120,0.486,121,0.284,122,0.113,123,0.557,124,0.486,125,0.486,126,0.52,127,0.557,128,0.012,129,0.012,173,1.12,184,1.204,191,1.12,193,1.564,194,1.444,195,0.98,196,1.936,197,1.12,200,1.313,201,1.757,204,1.886,229,1.313,246,2.48,247,2.348,248,2.819,251,1.048,252,0.726,254,1.774,255,1.874,258,1.542,259,1.642,260,1.461,262,0.831,265,2.348,266,1.029,270,0.831,276,1.936,278,2.471,288,3.303,296,2.09,306,2.227,308,1.757,315,0.956,318,1.029,319,2.348,320,1.444,321,1.444,322,1.444,323,1.204,364,0.89,365,0.831,368,0.726,369,0.956,371,0.89,373,0.89,378,2.336,379,1.676,393,2.348,397,1.536,399,2.819,406,2.158,408,1.271,410,3.867,430,2.227,441,1.373,445,1.609,446,1.204,447,1.609,448,1.444,449,0.956,468,4.178,472,1.829,477,1.373,499,0.858,550,2.68,562,2.819,568,2.819,584,1.029,586,3.441,588,1.586,589,1.029,593,2.348,598,1.313,599,2.819,600,1.829,604,1.204,608,3.055,609,2.751,611,1.313,615,1.313,617,1.609,618,1.444,626,1.204,667,2.546,674,1.856,739,3.441,758,1.609,760,1.313,764,1.829,813,1.313,857,2.48,876,1.609,892,2.24,925,1.829,935,2.819,937,1.829,939,1.313,940,1.313,941,2.09,942,1.313,945,1.609,946,1.829,1013,1.712,1022,1.313,1039,1.609,1060,1.444,1071,1.829,1143,2.819,1144,4.178,1150,1.829,1151,4.069,1152,3.334,1153,4.583,1154,4.178,1155,4.941,1156,4.941,1157,5.22,1158,4.573,1159,3.334,1160,2.163,1161,3.334,1162,2.163,1163,2.163,1164,2.163,1165,2.163,1166,2.163,1167,2.163,1168,2.163,1169,2.163,1170,2.163,1171,2.163,1172,2.163,1173,2.819,1174,2.819,1175,4.75,1176,2.819,1177,2.819,1178,2.819,1179,2.819,1180,2.819,1181,2.819,1182,2.819,1183,2.819,1184,2.819,1185,2.48,1186,2.819,1187,4.414,1188,2.819,1189,2.819,1190,2.819,1191,2.819,1192,2.819,1193,4.178,1194,2.819,1195,2.819,1196,2.819,1197,2.48,1198,2.819,1199,2.819,1200,2.819,1201,2.819,1202,2.819,1203,2.819,1204,2.819,1205,2.819,1206,2.819,1207,2.819,1208,2.163,1209,2.163,1210,2.163,1211,2.163,1212,2.163,1213,2.163,1214,2.163,1215,2.163,1216,1.829,1217,4.069,1218,3.334,1219,2.163,1220,2.163,1221,2.163,1222,2.163,1223,2.163,1224,2.163,1225,2.163,1226,2.163,1227,2.163,1228,2.163,1229,2.163,1230,2.163,1231,3.334,1232,2.163,1233,2.163,1234,2.163,1235,2.163,1236,2.163,1237,2.163,1238,1.829,1239,1.829,1240,2.163,1241,2.163,1242,2.163,1243,3.334,1244,2.48,1245,3.334,1246,1.856,1247,3.334,1248,3.334,1249,2.819,1250,3.334,1251,3.334,1252,3.334,1253,3.334,1254,4.573,1255,3.334,1256,3.334,1257,2.163,1258,1.829,1259,3.334,1260,3.334,1261,2.819,1262,3.334,1263,3.334,1264,3.334,1265,2.163,1266,2.163,1267,2.163,1268,2.163]],["title/interfaces/Post.html",[406,1.296,632,0.992]],["body/interfaces/Post.html",[3,0.22,4,0.188,8,0.188,22,0.22,23,0.384,29,2.757,39,0.027,41,0.446,52,0.823,66,0.354,121,0.362,122,0.364,128,0.018,129,0.018,134,0.99,149,1.137,150,1.867,152,1.777,180,1.482,187,2.371,226,0.99,348,1.983,368,2.029,406,1.85,407,1.848,408,1.777,477,2.56,498,1.972,499,1.6,503,2.976,504,3.227,516,2.492,520,2.582,534,2.44,536,2.399,564,0.873,567,2.924,569,1.705,580,1.848,632,1.704,633,1.711,634,1.711,635,2.185,636,2.976,637,1.946,638,2.749,639,2.403,640,1.711,641,1.848,642,2.582,643,2.403,644,3.296,645,2.787,646,2.403,647,2.403,648,3.216,649,3.216,650,3.216,651,3.216,652,3.625,653,3.52,654,3.296,655,3.625,656,3.669,657,3.296,658,2.403,659,2.403,660,2.403,661,2.185,662,2.185,663,2.403,664,2.003,665,2.403,666,2.403,675,1.058,1269,3.598,1270,2.676]],["title/interfaces/PostCategory.html",[296,1.732,632,0.992]],["body/interfaces/PostCategory.html",[3,0.281,4,0.24,8,0.24,22,0.281,23,0.45,39,0.026,40,0.768,41,0.446,52,0.801,66,0.281,115,0.775,121,0.357,122,0.357,128,0.021,129,0.021,134,1.795,152,1.355,154,3.427,187,1.655,226,1.553,237,3.427,238,4.198,242,3.769,258,1.452,296,2.898,327,4.246,348,2.816,352,1.771,354,4.772,356,2.684,357,4.198,358,3.427,408,1.708,498,1.659,503,3.264,558,3.428,564,0.836,632,1.355,634,2.192,636,2.366,645,2.898,675,1.355,1270,3.428,1271,3.897,1272,4.608,1273,5.643,1274,3.427,1275,4.198]],["title/injectables/PostCategoryService.html",[169,0.868,319,1.732]],["body/injectables/PostCategoryService.html",[3,0.214,4,0.183,8,0.183,13,1.443,22,0.214,23,0.377,26,1.204,30,0.858,33,0.961,38,1.289,39,0.027,40,0.647,41,0.403,42,1.122,43,1.144,44,0.796,45,0.858,52,0.423,56,0.757,57,0.684,58,0.423,65,1.55,66,0.214,67,0.462,83,1.202,115,0.965,121,0.346,122,0.299,128,0.018,129,0.018,134,1.578,135,2.059,149,0.991,152,1.815,167,1.302,169,1.218,172,1.55,187,1.699,289,2.728,296,3.294,319,2.43,322,2.341,348,2.783,350,4.285,352,2.204,355,4.266,408,1.588,497,2.873,498,1.932,499,1.218,500,3.52,503,2.43,509,3.52,510,2.092,515,2.873,564,0.858,569,1.802,668,1.667,670,2.251,672,2.43,673,1.589,675,1.391,676,2.873,677,2.982,678,2.982,679,4.001,680,3.52,682,4.001,684,3.578,686,3.52,688,3.483,689,3.16,693,3.16,694,3.619,698,3.16,699,2.43,705,2.43,708,3.16,711,2.873,712,4.001,716,2.634,717,2.634,718,2.634,719,2.634,721,1.952,722,1.952,723,2.945,725,2.341,796,4.001,801,2.873,1276,5.334,1277,2.964,1278,4.266,1279,4.732,1280,3.506,1281,6.571,1282,4.001,1283,4.001,1284,4.732,1285,3.506,1286,3.506,1287,3.52,1288,3.52,1289,4.732,1290,3.506,1291,4.001,1292,4.732,1293,4.732,1294,4.001,1295,3.506,1296,3.506,1297,2.608,1298,2.964,1299,2.964,1300,2.964,1301,2.964]],["title/injectables/PostService.html",[169,0.868,393,1.732]],["body/injectables/PostService.html",[3,0.191,4,0.163,8,0.163,13,1.289,22,0.191,23,0.349,26,1.163,30,0.794,33,0.953,38,1.384,39,0.027,40,0.695,41,0.419,42,1.206,43,1.133,44,0.737,45,0.794,52,0.378,56,0.721,57,0.611,58,0.378,65,1.384,66,0.191,67,0.413,83,1.249,115,1.103,120,0.984,121,0.351,122,0.342,128,0.016,129,0.016,134,1.64,135,2.141,148,2.417,149,1.146,152,1.89,160,2.438,167,1.504,169,1.127,172,1.384,180,1.803,289,2.601,341,2.807,348,2.251,352,2.101,393,2.248,406,2.291,408,1.687,446,1.743,497,2.659,498,1.955,499,1.407,500,4.067,504,2.438,509,3.257,510,1.935,515,2.659,516,2.434,534,2.399,547,2.248,564,0.992,565,2.924,569,2.019,642,2.083,653,3.32,656,2.659,668,1.489,670,2.083,671,2.924,672,2.248,673,1.47,675,1.287,676,2.659,677,2.811,678,2.811,680,3.257,684,3.372,686,3.257,688,3.32,689,2.924,690,3.702,691,3.257,693,2.924,694,3.616,698,2.924,699,2.807,705,2.807,708,2.924,716,2.438,717,3.044,718,2.438,719,2.438,721,1.743,722,1.743,723,2.954,725,2.091,1278,3.257,1287,3.257,1294,3.702,1297,2.329,1302,2.647,1303,3.257,1304,4.378,1305,4.378,1306,4.378,1307,4.378,1308,3.131,1309,4.378,1310,4.378,1311,4.378,1312,3.131,1313,3.702,1314,4.378,1315,4.378,1316,3.257,1317,4.378,1318,3.131,1319,4.378,1320,4.378,1321,5.049,1322,2.647,1323,3.702,1324,3.702,1325,4.378,1326,3.131,1327,3.257,1328,4.378,1329,3.131,1330,3.257,1331,4.378,1332,4.378,1333,3.131,1334,3.131,1335,3.131,1336,3.131,1337,3.131,1338,3.131]],["title/interfaces/PostView.html",[632,0.992,664,1.878]],["body/interfaces/PostView.html",[3,0.237,4,0.202,8,0.202,22,0.237,23,0.403,29,1.842,39,0.027,41,0.355,52,0.792,66,0.364,121,0.36,122,0.361,128,0.019,129,0.019,134,1.066,149,1.179,150,1.82,152,1.82,180,1.595,187,2.381,226,1.066,348,1.595,368,1.698,406,1.488,407,1.989,408,1.769,477,2.318,498,1.967,499,1.593,503,1.989,504,2.156,516,2.469,520,2.405,534,2.485,536,2.488,564,0.917,567,2.352,569,1.589,580,1.989,632,1.754,633,1.842,634,1.842,635,2.352,636,3.064,637,1.89,638,2.806,639,2.587,640,1.842,641,1.989,642,2.405,643,2.587,644,3.07,645,2.596,646,2.587,647,2.587,648,2.587,649,2.587,650,2.587,651,2.587,652,3.759,653,3.759,654,3.418,655,3.759,656,3.759,657,3.418,658,2.587,659,2.587,660,2.587,661,2.352,662,2.352,663,3.377,664,2.815,665,3.377,666,3.377]],["title/components/PublicacionesReportadasComponent.html",[0,0.119,114,0.758]],["body/components/PublicacionesReportadasComponent.html",[0,0.162,1,0.598,2,0.876,3,0.163,4,0.139,5,0.685,6,0.685,7,0.685,8,0.139,10,0.685,11,1.716,12,1.716,14,1.003,16,0.598,17,0.598,18,1.003,22,0.163,23,0.311,26,1.191,30,0.707,33,0.979,38,1.222,39,0.027,40,0.682,41,0.397,42,1.064,43,0.98,44,0.95,45,1.024,46,0.991,56,0.745,57,0.52,58,0.321,66,0.163,67,0.351,79,1.225,83,1.064,84,0.685,85,1.003,86,1.003,87,0.685,88,1.307,89,0.685,90,0.685,91,0.598,92,0.685,93,0.598,94,1.003,95,1.003,96,0.598,97,0.598,98,0.685,99,0.598,100,0.685,101,0.598,102,0.685,103,0.685,104,0.598,105,0.685,106,0.598,107,0.685,108,0.598,109,0.685,110,0.685,111,0.685,112,0.598,113,0.685,114,1.141,115,1.058,116,0.685,117,0.598,118,0.685,119,0.598,120,0.598,121,0.282,122,0.241,123,0.685,124,0.598,125,0.598,126,0.641,127,0.685,128,0.014,129,0.014,165,1.267,167,1.397,173,1.309,191,1.309,193,1.773,195,1.147,197,1.309,201,1.951,204,2.083,247,2.607,251,1.225,252,0.894,276,2.194,287,2.252,289,2.415,315,1.177,388,4.339,393,2.607,395,2.827,430,2.604,434,2.9,448,1.779,450,1.981,465,2.9,507,1.483,512,2.568,514,1.779,516,1.4,552,1.855,563,2.368,571,4.294,638,1.724,642,2.415,667,2.827,674,2.568,768,4.076,857,2.9,876,1.981,1085,4.294,1339,5.377,1340,5.377,1341,2.252,1342,5.078,1343,4.613,1344,3.899,1345,5.405,1346,5.405,1347,3.899,1348,3.899,1349,3.899,1350,3.899,1351,3.899,1352,4.031,1353,2.663,1354,3.777,1355,3.899,1356,2.663,1357,3.899,1358,2.663,1359,3.899,1360,2.663,1361,2.663,1362,2.663,1363,2.663,1364,2.663,1365,2.663,1366,2.663,1367,2.663,1368,2.252,1369,2.663,1370,2.663,1371,4.613,1372,3.899,1373,2.663,1374,3.899,1375,4.613,1376,5.982,1377,2.663,1378,2.663,1379,5.078,1380,5.078,1381,3.899,1382,5.078,1383,2.663,1384,2.663,1385,3.899,1386,5.078,1387,5.078,1388,3.899,1389,5.982,1390,3.899,1391,5.982,1392,5.078,1393,3.391,1394,5.078,1395,5.078,1396,3.899,1397,5.078,1398,3.899,1399,3.899,1400,3.899]],["title/components/RegisterComponent.html",[0,0.119,117,0.758]],["body/components/RegisterComponent.html",[0,0.161,1,0.593,2,0.871,3,0.161,4,0.138,5,0.68,6,0.68,7,0.68,8,0.138,10,0.68,11,1.715,12,1.715,14,0.997,16,0.593,17,0.593,18,0.997,22,0.161,23,0.309,26,1.188,28,1.816,30,0.703,33,0.948,39,0.027,40,0.68,41,0.355,43,0.703,44,0.947,45,1.021,46,0.756,50,1.392,52,0.611,56,0.711,57,0.515,58,0.319,61,0.68,66,0.161,67,0.348,73,0.932,83,0.812,84,0.68,85,0.997,86,0.997,87,0.68,88,1.302,89,0.68,90,0.68,91,0.593,92,0.68,93,0.593,94,0.997,95,0.997,96,0.593,97,0.593,98,0.68,99,0.593,100,0.68,101,0.593,102,0.68,103,0.68,104,0.593,105,0.68,106,0.593,107,0.68,108,0.593,109,0.68,110,0.68,111,0.68,112,0.593,113,0.68,114,0.593,115,0.444,116,0.68,117,1.136,118,0.68,119,0.593,120,0.871,121,0.34,122,0.294,123,0.68,124,0.593,125,0.593,126,0.635,127,0.68,128,0.014,129,0.014,149,0.812,150,1.487,153,1.99,164,2.233,165,2.562,166,2.883,167,1.066,173,1.301,184,1.47,191,1.301,193,1.764,195,1.14,197,1.301,200,1.604,201,1.944,204,1.698,212,1.965,247,1.99,251,1.218,252,0.887,253,1.604,254,2.022,255,2.143,257,1.167,258,0.997,259,1.649,260,0.948,261,1.764,262,1.764,263,1.356,265,1.99,266,1.256,269,1.99,270,1.015,277,2.788,284,2.788,290,2.589,303,2.788,310,2.353,316,1.604,317,1.604,318,1.256,325,1.604,326,1.604,356,1.843,362,1.088,365,1.764,368,0.887,369,1.167,371,1.088,372,1.764,373,1.596,378,1.944,379,1.088,387,1.965,397,1.698,441,1.596,449,1.167,499,0.997,507,1.47,512,2.158,514,1.764,550,2.891,552,2.406,564,0.479,593,1.356,602,1.99,604,1.47,609,1.47,612,1.604,614,1.604,615,1.604,617,1.965,637,0.887,675,1.14,699,1.99,740,1.47,810,1.604,845,3.277,892,1.89,926,1.965,939,1.604,940,1.604,941,2.766,942,1.604,1013,2.891,1022,1.604,1037,1.47,1042,2.233,1045,4.92,1054,1.764,1055,1.965,1058,1.965,1059,1.764,1064,1.764,1065,1.604,1082,2.233,1106,1.965,1126,2.233,1153,4.646,1154,4.555,1173,3.277,1174,3.277,1175,5.047,1176,3.277,1177,3.277,1178,3.277,1179,3.277,1180,3.277,1181,3.277,1182,3.277,1183,3.277,1184,3.277,1185,2.883,1186,3.277,1187,4.761,1188,3.277,1189,3.277,1190,3.277,1191,3.277,1192,3.277,1193,4.439,1194,3.277,1195,3.277,1196,3.277,1197,2.883,1198,3.277,1199,3.277,1200,3.277,1201,3.277,1202,3.277,1203,3.277,1204,3.277,1205,3.277,1206,3.277,1207,3.277,1258,2.233,1303,2.883,1401,2.233,1402,3.876,1403,4.591,1404,3.876,1405,4.591,1406,5.058,1407,2.641,1408,2.641,1409,2.641,1410,2.641,1411,2.641,1412,2.641,1413,2.641,1414,2.641,1415,2.641,1416,3.876,1417,2.641,1418,3.876,1419,2.641,1420,3.876,1421,2.641,1422,2.641,1423,2.641,1424,2.641,1425,1.764,1426,2.233,1427,2.641,1428,2.641,1429,2.641,1430,2.641,1431,2.641,1432,2.641,1433,2.641,1434,3.876,1435,2.883,1436,3.876,1437,3.876,1438,2.641,1439,5.968,1440,2.641,1441,2.641,1442,2.641,1443,2.641,1444,2.233,1445,2.233,1446,2.641]],["title/components/ReglasDeLaComunidadComponent.html",[0,0.119,119,0.758]],["body/components/ReglasDeLaComunidadComponent.html",[0,0.12,1,0.372,2,0.606,3,0.101,4,0.086,5,0.426,6,0.426,7,0.426,8,0.086,10,0.426,11,1.589,12,1.589,14,0.694,16,0.372,17,0.372,18,0.694,22,0.101,23,0.215,26,0.907,28,1.414,30,0.489,33,0.795,39,0.026,40,0.326,41,0.116,43,0.714,44,0.662,45,0.714,46,0.907,50,0.969,54,1.639,56,0.572,57,0.323,58,0.2,61,0.426,66,0.101,67,0.219,73,0.947,79,1.073,84,0.426,85,0.694,86,0.694,87,0.426,88,1.013,89,0.426,90,0.426,91,0.372,92,0.426,93,0.372,94,0.694,95,0.694,96,0.372,97,0.372,98,0.426,99,0.372,100,0.426,101,0.372,102,0.426,103,0.426,104,0.372,105,0.426,106,0.372,107,0.426,108,0.884,109,0.426,110,0.426,111,0.426,112,0.372,113,0.426,114,0.372,115,0.729,116,0.426,117,0.372,118,0.426,119,0.884,120,1.407,121,0.362,122,0.351,123,0.426,124,0.372,125,1.101,126,0.398,127,0.426,128,0.01,129,0.01,135,1.898,138,2.007,148,0.732,149,1.107,152,1.367,153,2.022,154,1.639,160,2.192,165,0.788,167,1.724,180,1.914,182,2.282,187,1.835,191,0.906,195,0.793,197,0.906,204,1.322,226,1.083,237,1.639,239,1.802,241,1.802,246,2.929,247,1.386,251,0.848,252,0.556,253,1.006,254,2.037,255,2.289,256,1.802,257,1.916,258,1.116,259,2.037,260,1.669,262,1.666,263,0.85,265,1.386,266,1.873,269,1.753,270,1.666,278,2.074,288,1.639,289,1.284,318,0.788,341,2.387,352,1.964,353,2.259,362,2.626,364,1.406,365,2.137,368,0.556,369,0.732,371,1.111,373,1.111,375,2.211,376,1.106,377,1.006,378,2.031,379,1.621,380,1.284,397,1.322,441,1.111,449,0.732,458,1.802,487,1.401,499,0.694,510,2.402,512,0.922,515,1.639,516,0.969,520,2.431,528,3.458,547,3.008,550,0.85,551,2.282,552,2.431,558,2.929,559,3.931,563,1.006,564,1.047,565,2.63,569,1.54,580,1.386,584,1.624,587,2.281,588,0.788,589,0.788,591,0.922,593,1.753,595,1.106,598,1.639,602,2.022,603,1.232,604,1.901,607,1.802,609,1.901,611,1.006,612,1.639,615,2.074,618,1.802,626,2.192,629,2.007,637,1.716,673,1.825,674,1.502,675,1.367,676,1.639,689,2.63,691,2.007,693,1.106,699,1.386,706,1.386,760,1.639,768,1.802,799,3.329,800,2.282,801,2.391,808,2.887,810,1.639,813,1.006,820,1.401,859,2.007,860,2.282,892,1.111,922,2.282,929,2.282,930,1.401,939,2.074,940,1.006,941,1.386,942,1.006,968,2.282,974,3.458,976,2.282,1013,2.226,1050,2.282,1051,2.282,1054,1.106,1059,1.106,1064,1.802,1065,2.074,1066,2.282,1076,1.106,1088,2.282,1099,1.401,1103,1.401,1104,1.401,1105,2.282,1106,1.232,1124,1.401,1125,1.401,1144,2.007,1216,2.282,1238,2.282,1239,2.282,1249,3.329,1270,2.007,1275,2.007,1287,2.007,1313,1.401,1316,2.007,1393,1.106,1425,2.281,1426,2.282,1444,1.401,1445,1.401,1447,4.469,1448,4.469,1449,1.401,1450,3.415,1451,2.698,1452,3.415,1453,3.937,1454,3.937,1455,3.937,1456,3.937,1457,1.656,1458,1.656,1459,1.656,1460,1.656,1461,1.656,1462,4.648,1463,2.698,1464,2.698,1465,6.305,1466,2.698,1467,2.698,1468,2.698,1469,2.698,1470,2.698,1471,3.937,1472,2.698,1473,2.698,1474,2.698,1475,2.698,1476,2.698,1477,2.698,1478,2.698,1479,3.937,1480,2.698,1481,2.698,1482,2.698,1483,2.698,1484,2.698,1485,2.698,1486,2.698,1487,2.698,1488,4.648,1489,2.698,1490,2.698,1491,2.698,1492,2.698,1493,2.698,1494,2.698,1495,2.698,1496,2.698,1497,2.698,1498,2.698,1499,2.698,1500,3.937,1501,2.698,1502,2.698,1503,3.937,1504,2.698,1505,2.698,1506,2.698,1507,2.698,1508,2.698,1509,2.698,1510,2.698,1511,2.698,1512,2.698,1513,2.698,1514,2.698,1515,2.698,1516,3.937,1517,2.698,1518,2.698,1519,2.698,1520,2.698,1521,2.698,1522,2.698,1523,2.698,1524,2.698,1525,2.887,1526,2.282,1527,2.698,1528,2.698,1529,2.698,1530,2.282,1531,2.698,1532,2.698,1533,2.698,1534,2.698,1535,2.698,1536,2.698,1537,2.698,1538,2.698,1539,2.698,1540,2.698,1541,2.698,1542,2.887,1543,2.698,1544,2.698,1545,2.698,1546,2.698,1547,2.698,1548,2.698,1549,2.698,1550,2.698,1551,2.698,1552,2.698,1553,2.698,1554,2.698,1555,2.698,1556,2.698,1557,2.698,1558,2.698,1559,2.698,1560,2.698,1561,3.329,1562,2.698,1563,2.698,1564,2.698,1565,2.698,1566,2.007,1567,2.698,1568,2.698,1569,2.698,1570,1.656,1571,1.656,1572,1.656,1573,1.656,1574,1.656,1575,1.106,1576,2.698,1577,1.656,1578,1.232,1579,1.656,1580,2.698,1581,1.656,1582,1.656,1583,1.656,1584,2.698,1585,2.698,1586,2.282,1587,2.698,1588,2.698,1589,2.698,1590,1.656,1591,1.656,1592,2.698,1593,2.698,1594,2.698,1595,2.698,1596,2.698,1597,2.698,1598,2.698,1599,2.698,1600,2.698,1601,2.698,1602,2.698,1603,2.698,1604,2.698,1605,2.698,1606,2.698,1607,2.698,1608,2.698,1609,2.698,1610,2.698,1611,2.282,1612,2.698,1613,2.698,1614,2.698,1615,2.698,1616,2.698,1617,2.698,1618,2.698,1619,3.937,1620,3.937,1621,1.656,1622,2.698,1623,1.656,1624,1.656,1625,1.656,1626,1.656,1627,3.415,1628,1.656,1629,1.656,1630,1.656,1631,1.656,1632,2.698,1633,3.415,1634,1.656,1635,1.656,1636,2.698,1637,1.656,1638,1.656,1639,1.656,1640,2.698,1641,1.656,1642,1.656,1643,1.656,1644,1.656]],["title/interfaces/Report.html",[632,0.992,1352,2.049]],["body/interfaces/Report.html",[3,0.265,4,0.226,8,0.226,22,0.265,23,0.433,39,0.026,41,0.459,42,1.37,52,0.81,66,0.265,121,0.283,122,0.283,128,0.02,129,0.02,134,1.192,148,2.75,149,1.138,150,1.274,152,1.274,180,2.237,187,1.95,226,1.494,258,1.398,327,4.155,358,3.298,408,1.773,498,1.922,499,1.726,516,2.13,523,4.04,534,2.39,547,3.047,564,0.985,569,1.361,632,1.274,634,2.061,636,2.225,637,1.824,638,2.623,640,2.959,641,3.194,642,2.584,644,3.298,645,2.789,908,4.593,1128,4.04,1283,3.663,1352,3.298,1354,5.034,1393,3.628,1645,3.663,1646,2.894,1647,5.26,1648,5.26,1649,5.432,1650,6.221,1651,5.432,1652,4.593]],["title/injectables/ReportService.html",[169,0.868,395,1.878]],["body/injectables/ReportService.html",[3,0.196,4,0.168,8,0.168,13,1.322,22,0.196,23,0.355,26,1.173,30,0.808,33,0.935,38,1.231,39,0.027,40,0.618,41,0.388,42,1.072,43,1.14,44,0.75,45,0.808,52,0.744,56,0.729,57,0.626,58,0.388,65,1.419,66,0.196,67,0.424,73,1.072,83,1.158,115,0.75,121,0.328,122,0.288,128,0.017,129,0.017,134,1.521,135,2.158,149,1.353,152,1.31,167,1.521,169,1.147,172,1.419,226,1.521,258,1.147,327,4.116,353,1.969,358,3.356,395,2.48,408,1.694,470,2.48,498,1.767,499,1.662,505,3.767,510,2.443,516,1.985,534,1.966,564,1.003,569,1.737,637,2.11,638,2.443,640,2.119,641,2.627,661,2.705,668,1.527,670,2.119,671,2.976,672,2.288,673,1.496,674,2.48,675,1.31,677,2.849,678,2.849,687,3.314,694,3.692,695,4.674,705,2.288,706,2.288,708,2.976,711,2.705,713,3.767,716,2.48,717,2.48,718,2.48,719,2.48,721,1.787,722,1.787,723,3.085,768,4.013,1128,3.314,1288,3.314,1316,3.314,1327,3.314,1352,3.874,1354,5.058,1368,2.715,1393,3.692,1526,4.674,1530,3.767,1575,2.976,1646,4.013,1647,3.767,1648,5.462,1652,3.767,1653,2.715,1654,5.527,1655,4.455,1656,4.455,1657,4.455,1658,3.21,1659,3.767,1660,4.455,1661,4.455,1662,3.767,1663,4.455,1664,3.767,1665,4.455,1666,3.21,1667,5.527,1668,4.455,1669,4.455,1670,3.21,1671,4.455,1672,3.21,1673,4.455,1674,4.455,1675,3.767,1676,4.455,1677,3.21,1678,3.21,1679,3.21,1680,3.21,1681,3.21,1682,3.21]],["title/guards/RoleGuard.html",[130,2.253,1683,2.51]],["body/guards/RoleGuard.html",[3,0.293,4,0.25,8,0.25,13,1.975,22,0.293,23,0.382,26,1.257,27,2.912,28,2.229,30,1.049,33,0.746,38,1.154,39,0.026,40,0.579,41,0.337,42,1.005,43,0.87,46,0.936,50,1.722,52,0.579,56,0.819,57,0.936,58,0.579,61,1.234,66,0.293,67,0.633,73,1.391,79,1.507,83,1.211,128,0.021,129,0.021,132,3.567,135,1.722,145,5.449,157,3.567,159,3.511,160,2.67,169,1.488,172,2.12,173,1.61,184,2.67,397,2.084,441,1.975,565,3.203,763,4.055,1246,2.67,1683,4.301,1684,4.055,1685,5.781,1686,6.444,1687,4.796,1688,4.796,1689,4.796,1690,4.796,1691,6.207,1692,4.796,1693,4.796,1694,4.796,1695,4.796]],["title/injectables/RoleService.html",[169,0.868,1696,2.51]],["body/injectables/RoleService.html",[3,0.227,4,0.194,8,0.194,13,1.53,22,0.227,30,0.892,33,0.914,38,0.894,39,0.026,40,0.449,41,0.261,42,0.778,43,1.179,46,1.224,52,0.773,56,0.49,58,0.449,66,0.227,67,0.49,73,0.894,79,1.972,83,1.23,121,0.306,122,0.306,128,0.018,129,0.018,134,1.353,135,2.108,147,4.191,148,3.011,149,1.427,150,1.726,151,4.159,159,3.81,160,2.739,163,5.306,167,1.353,169,1.266,172,1.642,180,2.026,186,4.159,187,1.766,308,2.256,547,2.526,564,1.205,637,1.971,668,1.767,670,2.34,705,2.526,723,1.908,740,2.739,769,3.708,801,3.565,1037,3.4,1246,3.823,1274,2.987,1542,5.306,1575,3.285,1578,4.367,1662,4.159,1664,4.159,1696,3.659,1697,3.141,1698,4.919,1699,4.159,1700,4.919,1701,5.87,1702,6.499,1703,4.964,1704,4.919,1705,5.87,1706,5.87,1707,3.715,1708,4.159,1709,4.919,1710,4.919,1711,3.715,1712,4.919,1713,5.515,1714,4.919,1715,4.919,1716,3.715,1717,5.87,1718,3.715,1719,4.919,1720,3.141,1721,5.515]],["title/interfaces/Score.html",[536,1.491,632,0.992]],["body/interfaces/Score.html",[3,0.232,4,0.198,8,0.198,22,0.232,23,0.397,29,1.805,39,0.027,41,0.391,52,0.788,66,0.361,121,0.358,122,0.361,128,0.019,129,0.019,134,1.044,149,1.168,150,1.892,152,1.856,180,1.562,187,2.394,226,1.372,348,1.562,368,1.675,406,1.458,407,2.561,408,1.777,477,2.599,498,1.975,499,1.624,503,1.948,504,2.113,516,2.463,520,2.373,534,2.472,536,2.886,564,0.905,567,2.304,569,1.751,580,2.561,632,1.741,633,1.805,634,1.805,635,2.304,636,3.04,637,1.988,638,2.79,639,2.534,640,1.805,641,1.948,642,2.373,643,2.534,644,3.029,645,2.561,646,2.534,647,2.534,648,2.534,649,2.534,650,2.534,651,2.534,652,3.332,653,3.384,654,3.029,655,3.332,656,3.029,657,3.833,658,3.332,659,3.332,660,3.332,661,3.029,662,3.029,663,2.534,664,2.113,665,2.534,666,2.534]],["title/injectables/ScoreService.html",[169,0.868,396,2.049]],["body/injectables/ScoreService.html",[3,0.192,4,0.164,8,0.164,13,1.293,22,0.192,23,0.35,26,1.164,30,0.796,33,0.929,38,1.317,39,0.026,40,0.661,41,0.404,42,1.147,43,1.111,44,0.738,45,0.796,52,0.379,56,0.722,57,0.613,58,0.379,65,1.388,66,0.192,67,0.414,83,1.147,115,0.921,121,0.358,122,0.342,125,0.985,128,0.016,129,0.016,134,1.585,148,1.939,149,1.147,150,1.928,152,1.754,167,1.719,169,1.129,172,1.388,187,1.575,189,3.709,229,1.906,290,2.93,308,1.686,341,2.252,348,1.806,352,2.103,353,1.939,396,2.664,406,1.686,407,2.252,408,1.722,446,1.748,477,2.457,498,1.928,499,1.655,510,2.42,516,2.355,534,2.103,536,2.873,547,2.811,564,0.993,582,3.709,637,2.004,654,2.664,657,3.905,668,1.493,670,2.086,671,2.93,672,2.252,673,1.473,675,1.29,676,2.664,677,2.815,678,2.815,688,3.324,694,3.534,699,2.252,705,3.064,711,2.664,716,3.047,717,2.442,718,2.442,719,2.442,721,1.748,722,1.748,723,3.064,842,5.283,1274,2.664,1288,3.263,1303,3.263,1322,2.654,1323,3.709,1324,3.709,1327,3.263,1330,3.263,1646,2.93,1722,2.654,1723,5.967,1724,4.386,1725,4.386,1726,4.386,1727,4.386,1728,3.709,1729,4.386,1730,4.386,1731,4.386,1732,4.386,1733,4.386,1734,3.139,1735,4.386,1736,4.386,1737,5.759,1738,3.139,1739,4.386,1740,3.709,1741,4.386,1742,4.386,1743,4.386,1744,4.386,1745,4.386,1746,3.139,1747,4.386,1748,4.386,1749,4.386,1750,3.139,1751,4.386,1752,3.139,1753,3.139,1754,3.139,1755,3.139,1756,3.139,1757,3.139,1758,3.139,1759,3.139]],["title/interfaces/User.html",[632,0.992,892,1.389]],["body/interfaces/User.html",[3,0.271,4,0.232,8,0.232,22,0.271,23,0.44,39,0.026,40,0.758,41,0.462,42,1.315,52,0.834,66,0.271,120,1.239,121,0.288,122,0.232,128,0.02,129,0.02,134,1.222,150,2.023,226,1.222,258,1.143,352,2.12,353,1.963,356,2.624,358,3.35,408,1.693,477,2.584,498,1.622,499,1.761,550,2.28,564,0.806,632,1.306,634,2.112,636,2.28,637,1.491,645,2.832,675,1.306,740,3.494,769,3.35,892,2.271,941,3.222,1013,3.222,1037,3.071,1153,3.684,1185,4.103,1193,4.103,1197,4.103,1244,4.103,1246,3.071,1274,3.811,1275,4.103,1425,4.192,1435,4.103,1566,4.103,1760,3.755,1761,3.755,1762,5.516]],["title/injectables/UserService.html",[169,0.868,397,1.133]],["body/injectables/UserService.html",[3,0.134,4,0.115,8,0.115,13,0.905,22,0.134,23,0.269,26,1.153,30,0.612,33,1.004,38,1.393,39,0.027,40,0.737,41,0.422,42,1.213,43,1.162,44,0.692,45,0.746,46,0.659,52,0.783,56,0.657,57,0.429,58,0.265,65,0.971,66,0.134,67,0.29,73,0.989,79,1.061,83,1.279,121,0.339,122,0.326,125,1.18,128,0.013,129,0.013,134,1.626,135,1.656,138,2.511,144,3.08,147,2.255,148,2.496,149,1.367,150,2.038,153,1.733,154,2.05,160,1.879,161,3.9,167,1.269,169,0.869,170,1.334,171,1.128,172,0.971,174,2.255,175,2.255,176,1.635,204,1.549,208,1.858,289,1.606,308,2.345,341,3.265,353,1.492,356,2.686,397,1.134,408,1.608,477,1.899,498,1.918,499,1.76,510,2.496,547,1.733,563,2.05,564,1.107,569,1.449,637,1.985,668,1.045,670,1.606,672,1.733,673,1.985,675,0.993,677,2.568,678,2.288,687,3.431,688,2.801,694,3.511,698,3.08,699,2.368,705,3.207,706,1.733,711,2.05,716,1.879,717,3.291,718,1.879,719,1.879,721,1.223,722,1.223,723,3.035,725,1.468,740,2.288,769,2.05,892,2.638,1004,2.854,1013,2.899,1022,1.334,1037,1.879,1129,3.9,1130,3.9,1137,4.442,1244,4.2,1246,3.143,1274,2.05,1278,3.431,1282,2.854,1291,2.854,1297,1.635,1298,1.858,1299,1.858,1300,1.858,1301,1.858,1330,2.511,1435,3.908,1561,2.854,1566,2.511,1578,3.908,1586,1.858,1611,2.854,1646,2.255,1659,2.854,1675,2.854,1703,3.9,1708,4.442,1720,1.858,1728,2.854,1740,2.854,1761,2.854,1763,1.858,1764,3.376,1765,3.376,1766,3.376,1767,3.376,1768,3.376,1769,4.612,1770,3.376,1771,4.612,1772,4.612,1773,4.612,1774,3.376,1775,3.376,1776,3.376,1777,3.376,1778,3.376,1779,3.376,1780,3.376,1781,3.376,1782,2.197,1783,3.376,1784,2.197,1785,3.376,1786,2.197,1787,2.197,1788,2.197,1789,3.376,1790,2.197,1791,2.197,1792,2.197,1793,3.376,1794,2.197,1795,3.376,1796,2.197,1797,4.612,1798,3.376,1799,2.197,1800,3.376,1801,3.376,1802,2.197,1803,5.253,1804,3.376,1805,2.197,1806,3.376,1807,3.376,1808,3.376,1809,2.197,1810,3.376,1811,3.376,1812,2.197,1813,3.376,1814,2.197,1815,2.197,1816,2.197,1817,2.197,1818,2.197,1819,2.197,1820,2.197,1821,3.376,1822,2.197,1823,2.197,1824,2.197,1825,2.197,1826,2.197,1827,2.197,1828,2.197,1829,2.197,1830,2.197,1831,2.197,1832,2.197,1833,3.376,1834,2.197,1835,2.197,1836,2.197]],["title/components/UsuariosComponent.html",[0,0.119,124,0.758]],["body/components/UsuariosComponent.html",[0,0.17,1,0.651,2,0.931,3,0.177,4,0.151,5,0.746,6,0.746,7,0.746,8,0.151,10,0.746,11,1.735,12,1.735,14,1.067,16,0.651,17,0.651,18,1.067,22,0.177,23,0.33,26,1.134,30,0.752,33,1.015,38,0.997,39,0.027,40,0.675,41,0.408,42,0.869,43,1.055,44,0.94,45,1.014,46,0.809,52,0.5,56,0.79,57,0.565,58,0.35,61,0.746,66,0.177,67,0.382,72,1.936,73,0.997,83,1.171,84,0.746,85,1.067,86,1.067,87,0.746,88,1.359,89,0.746,90,0.746,91,1.187,92,0.746,93,0.651,94,1.359,95,1.067,96,0.651,97,0.651,98,0.746,99,0.651,100,0.746,101,0.651,102,0.746,103,0.746,104,0.651,105,0.746,106,0.651,107,0.746,108,0.651,109,0.746,110,0.746,111,0.746,112,0.651,113,0.746,114,0.651,115,0.488,116,0.746,117,0.651,118,0.746,119,0.651,120,0.651,121,0.253,122,0.253,123,0.746,124,1.187,125,1.345,126,0.697,127,0.746,128,0.015,129,0.015,150,0.852,173,1.392,191,1.392,193,1.86,195,1.219,196,2.302,197,1.392,201,2.03,204,2.171,226,0.797,230,3.084,251,1.302,252,0.973,254,1.041,255,1.488,258,0.746,259,1.488,260,1.041,262,1.114,270,1.114,271,1.613,276,2.302,277,2.939,278,2.939,283,4.726,284,2.939,286,2.769,288,2.517,289,1.972,290,3.528,291,3.084,303,2.939,308,2.148,310,2.517,315,1.281,316,1.76,317,1.76,318,1.378,323,1.613,325,1.76,326,3.207,331,2.45,337,4.092,341,2.129,344,2.45,347,2.45,351,3.084,353,1.832,355,3.084,356,1.972,362,1.193,363,1.936,364,1.193,365,1.114,366,1.76,367,1.936,368,0.973,369,1.281,370,1.936,371,1.193,372,1.936,373,1.193,374,1.613,375,1.378,376,1.936,377,1.76,378,1.114,379,1.193,380,1.378,397,1.774,441,1.707,449,1.281,673,1.392,740,2.694,769,2.517,892,2.738,941,1.488,1013,2.485,1022,1.76,1037,3.111,1039,2.156,1153,2.769,1246,2.308,1425,1.936,1837,2.45,1838,4.84,1839,4.145,1840,4.84,1841,4.84,1842,5.282,1843,5.282,1844,5.282,1845,4.84,1846,2.898,1847,2.898,1848,4.145,1849,2.898,1850,4.145,1851,2.898,1852,2.898,1853,2.898,1854,2.898,1855,2.898,1856,2.898,1857,2.898,1858,2.898,1859,2.898,1860,2.898,1861,2.898,1862,2.898,1863,2.898,1864,5.282,1865,2.898,1866,4.145,1867,2.898,1868,2.898,1869,2.898,1870,2.898,1871,2.898,1872,4.145,1873,2.898,1874,2.898,1875,2.898,1876,2.898,1877,2.898,1878,2.898,1879,2.898,1880,4.145,1881,4.145,1882,4.145,1883,4.145]],["title/coverage.html",[1884,3.898]],["body/coverage.html",[0,0.244,1,0.914,8,0.212,9,3.441,16,0.914,17,0.914,39,0.026,41,0.286,91,0.914,93,0.914,96,0.914,97,0.914,99,0.914,101,0.914,104,0.914,106,0.914,108,0.914,112,0.914,114,0.914,117,0.914,119,0.914,121,0.272,122,0.272,124,0.914,128,0.019,129,0.019,130,3.486,131,3.027,133,3.441,169,1.683,192,3.441,258,1.794,272,3.441,273,3.441,274,3.441,296,2.089,319,2.089,381,3.441,393,2.089,395,2.265,396,2.471,397,1.366,406,1.564,470,2.265,536,1.799,624,4.469,632,1.923,633,1.935,635,3.692,664,2.265,667,2.265,669,3.441,728,3.441,736,3.441,833,3.441,892,1.675,957,3.441,991,3.441,996,3.441,1060,2.718,1065,2.471,1075,3.441,1076,2.718,1077,3.441,1108,3.441,1150,3.441,1271,3.441,1276,3.441,1277,3.441,1302,3.441,1339,3.441,1340,3.441,1341,3.441,1352,2.471,1401,3.441,1447,3.441,1448,3.441,1449,3.441,1645,3.441,1653,3.441,1683,3.027,1684,3.441,1696,3.027,1697,3.441,1722,3.441,1760,3.441,1763,3.441,1837,3.441,1884,3.441,1885,4.069,1886,4.069,1887,4.069,1888,4.069,1889,3.441,1890,5.22,1891,3.441,1892,4.069,1893,3.441,1894,3.441,1895,5.763,1896,5.22,1897,4.069,1898,4.069,1899,5.22,1900,5.22,1901,4.069,1902,4.069,1903,5.22,1904,4.069,1905,4.069,1906,4.069,1907,4.069,1908,6.079,1909,6.079,1910,4.069,1911,4.069,1912,5.22,1913,4.069,1914,4.069,1915,4.069,1916,4.069,1917,4.069,1918,4.069,1919,5.22,1920,4.069,1921,4.069]],["title/dependencies.html",[1922,2.38,1923,3.433]],["body/dependencies.html",[39,0.026,58,0.62,61,1.322,65,2.27,128,0.022,129,0.022,170,3.119,171,2.637,315,2.27,318,2.443,1923,4.343,1924,5.136,1925,6.917,1926,5.136,1927,5.136,1928,5.136,1929,6.022,1930,5.092,1931,5.136,1932,5.136,1933,5.136,1934,5.136,1935,5.136,1936,5.136,1937,5.136,1938,5.136,1939,5.136,1940,5.136,1941,5.136,1942,5.136]],["title/index.html",[22,0.172,1943,2.815,1944,2.815]],["body/index.html",[0,0.213,2,1.025,4,0.238,39,0.021,44,0.943,126,1.097,128,0.021,129,0.021,171,3.253,251,1.433,470,2.539,675,1.341,776,3.857,1261,3.857,1930,3.857,1945,6.072,1946,4.561,1947,5.608,1948,6.503,1949,3.857,1950,4.561,1951,5.608,1952,6.072,1953,4.561,1954,4.561,1955,6.503,1956,6.621,1957,6.621,1958,4.561,1959,5.608,1960,4.561,1961,4.561,1962,5.608,1963,4.561,1964,4.561,1965,4.561,1966,4.561,1967,4.561,1968,5.608,1969,5.608,1970,4.561,1971,4.561,1972,4.561,1973,6.072,1974,4.561,1975,4.561,1976,4.561,1977,4.561,1978,4.561,1979,4.561,1980,4.561,1981,6.072,1982,4.561,1983,4.561,1984,4.561,1985,4.561,1986,4.561,1987,4.561,1988,4.561,1989,4.561,1990,4.561,1991,4.561,1992,5.608,1993,6.072,1994,4.561,1995,4.561,1996,4.561,1997,4.561,1998,4.561,1999,6.072,2000,4.561,2001,6.621,2002,4.561,2003,5.608,2004,4.561,2005,4.561,2006,4.561,2007,4.561,2008,4.561,2009,4.561,2010,4.561,2011,4.561,2012,4.561,2013,4.561,2014,4.561,2015,4.561,2016,4.561,2017,4.561,2018,4.561,2019,3.393,2020,4.561,2021,4.561]],["title/modules.html",[2022,3.898]],["body/modules.html",[39,0.023,128,0.023,129,0.023,2022,4.682]],["title/overview.html",[2019,3.43]],["body/overview.html",[2,1.229,39,0.023,128,0.023,129,0.023,132,4.068,634,2.601,668,2.601,859,4.068,1525,5.281,2019,4.068,2023,5.469]],["title/properties.html",[23,0.323,1922,2.38]],["body/properties.html",[23,0.439,39,0.024,128,0.023,129,0.023,1949,4.66,2024,5.511]],["title/miscellaneous/variables.html",[2025,2.38,2026,3.433]],["body/miscellaneous/variables.html",[22,0.276,28,1.623,39,0.026,41,0.317,44,0.938,45,1.012,46,1.232,50,1.623,73,1.342,79,1.42,83,1.169,121,0.353,122,0.338,128,0.021,129,0.021,135,2.172,137,3.822,149,1.323,165,2.15,167,1.534,171,3.106,185,3.822,352,1.737,510,1.998,552,2.15,564,0.82,673,1.873,732,3.363,801,2.745,924,3.363,1069,3.822,1575,3.019,1699,4.716,1889,3.822,1891,4.716,1893,3.822,1894,4.716,2025,3.822,2026,3.822,2027,4.52,2028,4.52,2029,4.52,2030,4.52,2031,4.52,2032,5.577,2033,5.577,2034,4.52,2035,5.577,2036,5.577,2037,4.52,2038,4.52,2039,4.52,2040,4.52,2041,4.52,2042,4.52,2043,4.52,2044,4.52,2045,4.52,2046,4.52,2047,5.577,2048,4.52,2049,5.577,2050,5.577,2051,4.52,2052,4.52,2053,4.52,2054,4.52,2055,4.52,2056,4.52,2057,4.52,2058,4.52,2059,4.52,2060,4.52,2061,4.52,2062,4.52,2063,4.52,2064,4.52,2065,4.52,2066,5.577,2067,4.52,2068,4.52]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["0).subscribe",{"_index":1380,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["0.0.0",{"_index":2024,"title":{},"body":{"properties.html":{}}}],["0.04",{"_index":936,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.05",{"_index":592,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["0.06",{"_index":603,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.08",{"_index":621,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["0.1",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["0.15",{"_index":1148,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.15.0",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":950,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.2s",{"_index":617,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["0.35rem",{"_index":1145,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.3s",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.5rem",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.6",{"_index":1097,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["0.6s",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.75rem",{"_index":607,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.7rem",{"_index":1638,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["0.85rem",{"_index":1264,"title":{},"body":{"components/PerfilComponent.html":{}}}],["0.875rem",{"_index":933,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.8rem",{"_index":948,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.95rem",{"_index":261,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["0/1",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["098",{"_index":979,"title":{},"body":{"components/FooterComponent.html":{}}}],["0d6efd",{"_index":1265,"title":{},"body":{"components/PerfilComponent.html":{}}}],["1",{"_index":226,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["1.05rem",{"_index":1629,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.125rem",{"_index":928,"title":{},"body":{"components/DetalleComponent.html":{}}}],["1.15rem",{"_index":1625,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.25rem",{"_index":926,"title":{},"body":{"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["1.2rem",{"_index":1628,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.4rem",{"_index":1639,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.5rem",{"_index":587,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.6",{"_index":1630,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.7",{"_index":1626,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.75rem",{"_index":930,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.amazonaws.com/api/usuarios",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{}}}],["1/1",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["100",{"_index":624,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1098,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["100vh",{"_index":1438,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":597,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["11",{"_index":1560,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["120",{"_index":981,"title":{},"body":{"components/FooterComponent.html":{}}}],["12px",{"_index":1633,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["140px",{"_index":1107,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["14px",{"_index":1623,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["16px",{"_index":1099,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["17",{"_index":2023,"title":{},"body":{"overview.html":{}}}],["17/19",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1644,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["19.0.6",{"_index":1950,"title":{},"body":{"index.html":{}}}],["1px",{"_index":608,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["1rem",{"_index":584,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["2",{"_index":859,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"overview.html":{}}}],["2.25rem",{"_index":594,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["2.3.0",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["2/4",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["20.0.3",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["20.0.4",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":978,"title":{},"body":{"components/FooterComponent.html":{}}}],["2025",{"_index":983,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["20px",{"_index":620,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["212529",{"_index":1266,"title":{},"body":{"components/PerfilComponent.html":{}}}],["227",{"_index":980,"title":{},"body":{"components/FooterComponent.html":{}}}],["245",{"_index":982,"title":{},"body":{"components/FooterComponent.html":{}}}],["24px",{"_index":927,"title":{},"body":{"components/DetalleComponent.html":{}}}],["25",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["255",{"_index":1147,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2px",{"_index":380,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["2rem",{"_index":364,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["3",{"_index":629,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["3/3",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":947,"title":{},"body":{"components/DetalleComponent.html":{}}}],["3663",{"_index":969,"title":{},"body":{"components/FooterComponent.html":{}}}],["36px",{"_index":938,"title":{},"body":{"components/DetalleComponent.html":{}}}],["3px",{"_index":600,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["3rem",{"_index":1622,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["4",{"_index":860,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["4.0.12",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":1735,"title":{},"body":{"injectables/ScoreService.html":{}}}],["4/4",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{}}}],["442",{"_index":977,"title":{},"body":{"components/FooterComponent.html":{}}}],["444",{"_index":931,"title":{},"body":{"components/DetalleComponent.html":{}}}],["45px",{"_index":1149,"title":{},"body":{"components/NavbarComponent.html":{}}}],["48px",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["4px",{"_index":374,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsuariosComponent.html":{}}}],["5",{"_index":580,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["5.3.6",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["500",{"_index":1637,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["555",{"_index":953,"title":{},"body":{"components/DetalleComponent.html":{}}}],["56",{"_index":967,"title":{},"body":{"components/FooterComponent.html":{}}}],["5px",{"_index":1258,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1515,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["6.7.2",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":604,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["60px",{"_index":372,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["6px",{"_index":590,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["7",{"_index":1525,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"overview.html":{}}}],["7.8.0",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":595,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["8",{"_index":1532,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["8/8",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":599,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["85",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":934,"title":{},"body":{"components/DetalleComponent.html":{}}}],["89",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":376,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["9",{"_index":968,"title":{},"body":{"components/FooterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["90",{"_index":1100,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["90px",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{}}}],["920px",{"_index":1621,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["9565",{"_index":970,"title":{},"body":{"components/FooterComponent.html":{}}}],["999",{"_index":949,"title":{},"body":{"components/DetalleComponent.html":{}}}],["absolute",{"_index":596,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["académicas",{"_index":527,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["académico",{"_index":1533,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["académicos",{"_index":971,"title":{},"body":{"components/FooterComponent.html":{}}}],["acc",{"_index":1234,"title":{},"body":{"components/PerfilComponent.html":{}}}],["acceso",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accessors",{"_index":291,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/UsuariosComponent.html":{}}}],["acciones",{"_index":1103,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["acción",{"_index":1314,"title":{},"body":{"injectables/PostService.html":{}}}],["account",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["account.idtokenclaims",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["account.name",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{}}}],["account.username",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{}}}],["acept",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["aceptación",{"_index":1426,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptadas",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aceptarreglas",{"_index":1453,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["acosadores",{"_index":1469,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["activa",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["activatedroute",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["activatedroutesnapshot",{"_index":1686,"title":{},"body":{"guards/RoleGuard.html":{}}}],["active",{"_index":268,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["actividades",{"_index":528,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["activo",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["actual",{"_index":1702,"title":{},"body":{"injectables/RoleService.html":{}}}],["actual_component",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["actualiza",{"_index":711,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["actualizada",{"_index":1293,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["actualizado",{"_index":713,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{}}}],["actualizar",{"_index":355,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/PostCategoryService.html":{},"components/UsuariosComponent.html":{}}}],["actualmente",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["actuar",{"_index":1547,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["acuerdo",{"_index":1620,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ad",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["additional",{"_index":2011,"title":{},"body":{"index.html":{}}}],["adecuado",{"_index":1485,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["adecuados",{"_index":702,"title":{},"body":{"injectables/CommentService.html":{}}}],["admin",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["admin.component.html",{"_index":280,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.scss",{"_index":279,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts",{"_index":274,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["admin.component.ts:17",{"_index":311,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:18",{"_index":307,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:20",{"_index":305,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:21",{"_index":304,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:22",{"_index":309,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:23",{"_index":312,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:25",{"_index":302,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:35",{"_index":314,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:42",{"_index":294,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:46",{"_index":297,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:51",{"_index":293,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:56",{"_index":301,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:72",{"_index":300,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin/categorias",{"_index":273,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["administra",{"_index":351,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/UsuariosComponent.html":{}}}],["administrador",{"_index":1662,"title":{},"body":{"injectables/ReportService.html":{},"injectables/RoleService.html":{}}}],["administradores",{"_index":1509,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["administrar",{"_index":735,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["adminonly",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["agregar",{"_index":230,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["ahora",{"_index":1581,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["al",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["alameda",{"_index":1177,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["alert",{"_index":951,"title":{},"body":{"components/DetalleComponent.html":{}}}],["alert('comentario",{"_index":907,"title":{},"body":{"components/DetalleComponent.html":{}}}],["alert('error",{"_index":517,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alert('no",{"_index":495,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alert('publicación",{"_index":522,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["alert('¡publicación",{"_index":508,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["algún",{"_index":1590,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["align",{"_index":940,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["all.reduce((acc",{"_index":1232,"title":{},"body":{"components/PerfilComponent.html":{}}}],["almacenado",{"_index":1708,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["almacenar",{"_index":1700,"title":{},"body":{"injectables/RoleService.html":{}}}],["alonso",{"_index":1179,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["alt",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["alto",{"_index":1192,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["amarillo",{"_index":262,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["andrés",{"_index":1203,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["angular",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":315,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":722,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":318,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["anidadas",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["animation",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ante",{"_index":1463,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["antonio",{"_index":1181,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["anónimo",{"_index":900,"title":{},"body":{"components/DetalleComponent.html":{}}}],["api",{"_index":718,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["api.us",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{}}}],["apiurl",{"_index":677,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["aplica",{"_index":1650,"title":{},"body":{"interfaces/Report.html":{}}}],["aplicación",{"_index":1699,"title":{},"body":{"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["apología",{"_index":1492,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["apoquindo",{"_index":1196,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["apoyo",{"_index":1616,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.ts",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1962,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apuestas",{"_index":1494,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aqu",{"_index":541,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NavbarComponent.html":{}}}],["arauco",{"_index":1201,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["archivo",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr",{"_index":1233,"title":{},"body":{"components/PerfilComponent.html":{}}}],["arr.length",{"_index":1235,"title":{},"body":{"components/PerfilComponent.html":{}}}],["arreglo",{"_index":1743,"title":{},"body":{"injectables/ScoreService.html":{}}}],["artifacts",{"_index":1985,"title":{},"body":{"index.html":{}}}],["asegura",{"_index":1567,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["asociada",{"_index":649,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["asociados",{"_index":707,"title":{},"body":{"injectables/CommentService.html":{}}}],["aspectos",{"_index":733,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["asterisk",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["autenticación",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["autenticado",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":131,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["auto",{"_index":377,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["automatically",{"_index":1963,"title":{},"body":{"index.html":{}}}],["automáticamente",{"_index":1310,"title":{},"body":{"injectables/PostService.html":{}}}],["autor",{"_index":865,"title":{},"body":{"components/DetalleComponent.html":{}}}],["autorizado",{"_index":1695,"title":{},"body":{"guards/RoleGuard.html":{}}}],["available",{"_index":1976,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":937,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["avg",{"_index":540,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["ayudantias",{"_index":236,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{}}}],["ayudantías",{"_index":237,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["azul",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["azure",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["azure/msal",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["azureuser",{"_index":1416,"title":{},"body":{"components/RegisterComponent.html":{}}}],["azureuser.email",{"_index":1419,"title":{},"body":{"components/RegisterComponent.html":{}}}],["azureuser.fullname",{"_index":1421,"title":{},"body":{"components/RegisterComponent.html":{}}}],["aún",{"_index":562,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["backend",{"_index":693,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["background",{"_index":254,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["badge",{"_index":627,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["bar",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["base",{"_index":717,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["bd",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["bernardo",{"_index":1194,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["bg",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["bienvenido/a",{"_index":1434,"title":{},"body":{"components/RegisterComponent.html":{}}}],["blanco",{"_index":602,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["block",{"_index":370,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsuariosComponent.html":{}}}],["body",{"_index":628,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{}}}],["bold",{"_index":271,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsuariosComponent.html":{}}}],["book",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["bootstrap",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":378,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["boton",{"_index":1446,"title":{},"body":{"components/RegisterComponent.html":{}}}],["botones",{"_index":1640,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["bottom",{"_index":593,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["botón",{"_index":1528,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["box",{"_index":588,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["breadcrumb",{"_index":194,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["breadcrumb'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["breadcrumb.component.html",{"_index":199,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":198,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":323,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["breadcrumbcomponent",{"_index":91,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["breve",{"_index":1273,"title":{},"body":{"interfaces/PostCategory.html":{}}}],["browser",{"_index":1930,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["btn",{"_index":626,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["build",{"_index":1981,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1982,"title":{},"body":{"index.html":{}}}],["button",{"_index":611,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["c",{"_index":336,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.description",{"_index":360,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.name",{"_index":359,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.name.tolowercase().includes(filtro",{"_index":334,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.status",{"_index":361,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["cabecera",{"_index":585,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cada",{"_index":1742,"title":{},"body":{"injectables/ScoreService.html":{}}}],["calcular",{"_index":1726,"title":{},"body":{"injectables/ScoreService.html":{}}}],["calificación",{"_index":1251,"title":{},"body":{"components/PerfilComponent.html":{}}}],["calificar",{"_index":398,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["calificar(pub",{"_index":405,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["calificar(valor",{"_index":846,"title":{},"body":{"components/DetalleComponent.html":{}}}],["cambio",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cambios",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["campo",{"_index":1440,"title":{},"body":{"components/RegisterComponent.html":{}}}],["campus",{"_index":1175,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["canactivate",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":1685,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cancelar",{"_index":286,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/UsuariosComponent.html":{}}}],["cancelaredicion",{"_index":1843,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cancelarlogout",{"_index":1113,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cancelarrechazo",{"_index":1454,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cantidad",{"_index":663,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["card",{"_index":614,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cargando",{"_index":571,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["cargar",{"_index":287,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["cargarpublicaciones",{"_index":399,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["cargarpublicaciones(iduser",{"_index":1159,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cargarusuarios",{"_index":1844,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cariño",{"_index":987,"title":{},"body":{"components/FooterComponent.html":{}}}],["carlos",{"_index":1195,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["case",{"_index":526,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["caso",{"_index":1542,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/RoleService.html":{}}}],["cat",{"_index":298,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{}}}],["cat.adminonly",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.description",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.name",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.name.tolowercase",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.status",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria",{"_index":223,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["categoria.idcategory",{"_index":460,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoria.name",{"_index":462,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoria/ayudantias",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria/culturales",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria/deportes",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria/trueques",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria/voluntariado",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoriaform",{"_index":281,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categoriaid",{"_index":384,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorianombre",{"_index":385,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorias",{"_index":275,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{}}}],["categorias'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["categorias.component.html",{"_index":383,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorias.component.scss",{"_index":382,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoriasadmincomponent",{"_index":93,"title":{"components/CategoriasAdminComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["categoriascomponent",{"_index":96,"title":{"components/CategoriasComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["categoriasfiltradas",{"_index":292,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categories",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["categories.find(cat",{"_index":456,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["category",{"_index":1281,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service",{"_index":321,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["category.service.ts",{"_index":1277,"title":{},"body":{"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:15",{"_index":1295,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:16",{"_index":1296,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:22",{"_index":1286,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:35",{"_index":1280,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:45",{"_index":1290,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:53",{"_index":1285,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["categoryid",{"_index":1321,"title":{},"body":{"injectables/PostService.html":{}}}],["categoryservice",{"_index":282,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categoría",{"_index":348,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["categorías",{"_index":350,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"injectables/PostCategoryService.html":{}}}],["cats",{"_index":1215,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ced4da",{"_index":610,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["center",{"_index":941,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["cerrar",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{}}}],["chart",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["checkandredirect",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkandredirect(email",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkuserexists",{"_index":1768,"title":{},"body":{"injectables/UserService.html":{}}}],["checkuserexists(email",{"_index":1781,"title":{},"body":{"injectables/UserService.html":{}}}],["child",{"_index":1263,"title":{},"body":{"components/PerfilComponent.html":{}}}],["choose",{"_index":2007,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":1584,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cl",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claims",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["claro",{"_index":1519,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["clases",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["clasificarse",{"_index":1272,"title":{},"body":{"interfaces/PostCategory.html":{}}}],["class",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["clave",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["clearrole",{"_index":1769,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":1948,"title":{},"body":{"index.html":{}}}],["code",{"_index":1968,"title":{},"body":{"index.html":{}}}],["cog",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coincide",{"_index":1715,"title":{},"body":{"injectables/RoleService.html":{}}}],["colaboración",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["colaborativa",{"_index":1593,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["colaborativo",{"_index":1480,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["color",{"_index":255,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["color.adjust($amarillo",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["color.adjust($gris",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["colorclass",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["com",{"_index":852,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.content",{"_index":920,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.date",{"_index":918,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.iduser",{"_index":917,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.iduser.charat(0).touppercase",{"_index":916,"title":{},"body":{"components/DetalleComponent.html":{}}}],["come",{"_index":2005,"title":{},"body":{"index.html":{}}}],["comentar",{"_index":843,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentario",{"_index":638,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["comentario:hover",{"_index":943,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentarioform",{"_index":837,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentarios",{"_index":674,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["comercial",{"_index":1484,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comienzo",{"_index":232,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["command",{"_index":1999,"title":{},"body":{"index.html":{}}}],["comment",{"_index":633,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["commentreports",{"_index":1345,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["commentreports.length",{"_index":1387,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["commentrequests",{"_index":1226,"title":{},"body":{"components/PerfilComponent.html":{}}}],["commentrequests.length",{"_index":1229,"title":{},"body":{"components/PerfilComponent.html":{}}}],["comments",{"_index":838,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comments.length",{"_index":915,"title":{},"body":{"components/DetalleComponent.html":{}}}],["commentservice",{"_index":667,"title":{"injectables/CommentService.html":{}},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"coverage.html":{}}}],["commonmodule",{"_index":276,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/UsuariosComponent.html":{}}}],["como",{"_index":1575,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["compartir",{"_index":543,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["compile",{"_index":1983,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1975,"title":{},"body":{"index.html":{}}}],["completo",{"_index":1435,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["components/navbar/navbar.component",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["comunidad",{"_index":552,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["comunidad'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["comunidad.component.html",{"_index":1451,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.scss",{"_index":1450,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts",{"_index":1449,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["comunidad.component.ts:113",{"_index":1458,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:16",{"_index":1461,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:17",{"_index":1572,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:18",{"_index":1571,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:20",{"_index":1570,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:67",{"_index":1457,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:85",{"_index":1460,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:89",{"_index":1459,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad/reglas",{"_index":1448,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["comunitarias",{"_index":1762,"title":{},"body":{"interfaces/User.html":{}}}],["con",{"_index":510,"title":{},"body":{"components/CategoriasComponent.html":{},"components/FooterComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["concepción",{"_index":1204,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["concretarse",{"_index":1543,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conecta",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["conectaduoc",{"_index":675,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["config",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["configura",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuracion",{"_index":729,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracion'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["configuracion.component.html",{"_index":730,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracion.component.scss",{"_index":731,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracioncomponent",{"_index":97,"title":{"components/ConfiguracionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["configuraciones",{"_index":1299,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["configuración",{"_index":732,"title":{},"body":{"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm('¿eliminar",{"_index":347,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["confirmacion",{"_index":1078,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["confirmacion.component",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmacion.component.html",{"_index":1080,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.scss",{"_index":1079,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts",{"_index":1077,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["confirmacion.component.ts:12",{"_index":1089,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:13",{"_index":1086,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:14",{"_index":1090,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:16",{"_index":1093,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:17",{"_index":1092,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion/modal",{"_index":1076,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["confirmar",{"_index":1085,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["confirmarcomentario",{"_index":1347,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["confirmarcomentario(reporte",{"_index":1351,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["confirmarlogout",{"_index":1114,"title":{},"body":{"components/NavbarComponent.html":{}}}],["confirmarpost",{"_index":1348,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["confirmarpost(reporte",{"_index":1355,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["confirmarrechazo",{"_index":1455,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["consentimiento",{"_index":1501,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["consola",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.error('error",{"_index":514,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{}}}],["console.error('login",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('logout",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('account",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('existe",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('id",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('redirijo",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.warn('no",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.warn(`acceso",{"_index":1693,"title":{},"body":{"guards/RoleGuard.html":{}}}],["const",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["construido",{"_index":1609,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["construir",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consultar",{"_index":1725,"title":{},"body":{"injectables/ScoreService.html":{}}}],["container",{"_index":253,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["contenedor",{"_index":581,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{}}}],["contenido",{"_index":520,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["content",{"_index":368,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{},"components/UsuariosComponent.html":{}}}],["continua",{"_index":1184,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["continuar",{"_index":1437,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contrario",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RoleService.html":{}}}],["control",{"_index":956,"title":{},"body":{"components/DetalleComponent.html":{}}}],["controlado",{"_index":1569,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conversación",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["convivencia",{"_index":1604,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["core/services/comment.service",{"_index":876,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["core/services/post",{"_index":320,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/post.service",{"_index":448,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["core/services/report.service",{"_index":450,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["core/services/score.service",{"_index":451,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["core/services/user.service",{"_index":449,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["correctamente",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["correcto",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correo",{"_index":1244,"title":{},"body":{"components/PerfilComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["correos",{"_index":1506,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["correspondan",{"_index":1559,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["corresponde",{"_index":1717,"title":{},"body":{"injectables/RoleService.html":{}}}],["correspondiente",{"_index":1529,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cortesía",{"_index":1476,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["coverage",{"_index":1884,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":650,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["crea",{"_index":686,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["creación",{"_index":651,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["creada",{"_index":509,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["creado",{"_index":695,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{}}}],["crear",{"_index":515,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["create",{"_index":679,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["create(category",{"_index":1279,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["create(comment",{"_index":683,"title":{},"body":{"injectables/CommentService.html":{}}}],["createddate",{"_index":504,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["createpost",{"_index":1304,"title":{},"body":{"injectables/PostService.html":{}}}],["createpost(post",{"_index":1307,"title":{},"body":{"injectables/PostService.html":{}}}],["creemos",{"_index":1592,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["creencias",{"_index":1524,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["crud",{"_index":1767,"title":{},"body":{"injectables/UserService.html":{}}}],["cualquier",{"_index":1495,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cuenta",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cuentas",{"_index":1563,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cuidar",{"_index":1548,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["culturales",{"_index":239,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cumulativepath",{"_index":218,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["currentroute",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.snapshot.data",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["currentyear",{"_index":961,"title":{},"body":{"components/FooterComponent.html":{}}}],["cursor",{"_index":1634,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dark",{"_index":1636,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dashboard",{"_index":222,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{}}}],["dashboard'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["dashboard.component.html",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/configuracion",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/reportes",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":99,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["data",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["data['showfooter",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["data['shownavbar",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":640,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["date().getfullyear",{"_index":962,"title":{},"body":{"components/FooterComponent.html":{}}}],["date().toisostring",{"_index":505,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ReportService.html":{}}}],["date:'dd/mm/yyyy",{"_index":573,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["date:'short",{"_index":1396,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":630,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["date:\\'short",{"_index":1400,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["datos",{"_index":341,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["datos).subscribe",{"_index":344,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["ddd",{"_index":955,"title":{},"body":{"components/DetalleComponent.html":{}}}],["de",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":1473,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["deben",{"_index":1545,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["debes",{"_index":1565,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["decoration",{"_index":264,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["default",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["definidas",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definido",{"_index":1709,"title":{},"body":{"injectables/RoleService.html":{}}}],["del",{"_index":499,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":680,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["delete(id",{"_index":1284,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["delete(idcomment",{"_index":696,"title":{},"body":{"injectables/CommentService.html":{}}}],["delete(idpost",{"_index":1311,"title":{},"body":{"injectables/PostService.html":{}}}],["deleteuser",{"_index":1770,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{}}}],["denegado",{"_index":1694,"title":{},"body":{"guards/RoleGuard.html":{}}}],["denegar",{"_index":1397,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["denegarcomentario",{"_index":1349,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["denegarcomentario(reporte",{"_index":1357,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["denegarpost",{"_index":1350,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["denegarpost(reporte",{"_index":1359,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["dentro",{"_index":1270,"title":{},"body":{"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["denuncias",{"_index":1530,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["dependencies",{"_index":1923,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deportes",{"_index":238,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{}}}],["deportivas",{"_index":529,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["derechos",{"_index":984,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["derivar",{"_index":1513,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["desarrollado",{"_index":986,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["desconocido",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{}}}],["descripcion",{"_index":1465,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["descripción",{"_index":357,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{}}}],["description",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasAdminComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["desde",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["desea",{"_index":1714,"title":{},"body":{"injectables/RoleService.html":{}}}],["después",{"_index":1428,"title":{},"body":{"components/RegisterComponent.html":{}}}],["detailed",{"_index":2016,"title":{},"body":{"index.html":{}}}],["detallado",{"_index":648,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["detalle",{"_index":834,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detalle'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["detalle.component.html",{"_index":836,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detalle.component.scss",{"_index":835,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detallecomponent",{"_index":101,"title":{"components/DetalleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["detecciones",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detección",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":989,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["development",{"_index":1951,"title":{},"body":{"index.html":{}}}],["dignidad",{"_index":1475,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dio",{"_index":1747,"title":{},"body":{"injectables/ScoreService.html":{}}}],["direcciones",{"_index":1507,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["directive",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["directives",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["directory",{"_index":1987,"title":{},"body":{"index.html":{}}}],["discriminatorios",{"_index":1468,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["display",{"_index":369,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["disponibles",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/PostCategoryService.html":{}}}],["dist",{"_index":1986,"title":{},"body":{"index.html":{}}}],["diversidad",{"_index":1521,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["document.title",{"_index":883,"title":{},"body":{"components/DetalleComponent.html":{}}}],["documentation",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["drogas",{"_index":1493,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dudas",{"_index":545,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["duoc",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["dynamic",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":1267,"title":{},"body":{"components/PerfilComponent.html":{}}}],["e2e",{"_index":2002,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":2004,"title":{},"body":{"index.html":{}}}],["ease",{"_index":618,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["east",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{}}}],["ecoduoc",{"_index":530,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["editar",{"_index":288,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["editar(cat",{"_index":295,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["editar(post",{"_index":1161,"title":{},"body":{"components/PerfilComponent.html":{}}}],["editar(user",{"_index":1848,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["editing",{"_index":283,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["educación",{"_index":1183,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["eee",{"_index":935,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["ej",{"_index":1274,"title":{},"body":{"interfaces/PostCategory.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ejemplo",{"_index":661,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["el",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["elimina",{"_index":698,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["eliminadas",{"_index":560,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["eliminar",{"_index":289,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["eliminar(cat",{"_index":299,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["eliminar(user",{"_index":1850,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["email",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["empático",{"_index":1517,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["en",{"_index":564,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["encargado",{"_index":671,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["encodedemail",{"_index":1824,"title":{},"body":{"injectables/UserService.html":{}}}],["encodeuricomponent(email",{"_index":1825,"title":{},"body":{"injectables/UserService.html":{}}}],["encontr",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["encuentros",{"_index":1540,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["end",{"_index":2001,"title":{},"body":{"index.html":{}}}],["enrutador",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entorno",{"_index":1568,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["entre",{"_index":1643,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["enviar",{"_index":923,"title":{},"body":{"components/DetalleComponent.html":{}}}],["envía",{"_index":1667,"title":{},"body":{"injectables/ReportService.html":{}}}],["err",{"_index":513,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":512,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["es",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/PostCategoryService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["escribi",{"_index":647,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["espacio",{"_index":1479,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["específica",{"_index":1327,"title":{},"body":{"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["específico",{"_index":1668,"title":{},"body":{"injectables/ReportService.html":{}}}],["espera",{"_index":1535,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["esperado",{"_index":1712,"title":{},"body":{"injectables/RoleService.html":{}}}],["est",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["esta",{"_index":565,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{}}}],["establece",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estado",{"_index":358,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/User.html":{}}}],["estadísticas",{"_index":1248,"title":{},"body":{"components/PerfilComponent.html":{}}}],["estas",{"_index":1606,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["este",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["esto",{"_index":1503,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estoy",{"_index":1619,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estrellas",{"_index":662,"title":{},"body":{"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["estrictamente",{"_index":1553,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiante",{"_index":1719,"title":{},"body":{"injectables/RoleService.html":{}}}],["estudiantes",{"_index":1610,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiantil",{"_index":974,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiantiles",{"_index":531,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["estás",{"_index":1087,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["estén",{"_index":1536,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["etc",{"_index":1275,"title":{},"body":{"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{}}}],["event",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1091,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["eventos",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evitar",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":1956,"title":{},"body":{"index.html":{}}}],["exchange",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exclusivo",{"_index":1562,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["execute",{"_index":1994,"title":{},"body":{"index.html":{}}}],["existe",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["existente",{"_index":712,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["exists",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["expectedrole",{"_index":1713,"title":{},"body":{"injectables/RoleService.html":{}}}],["expectedroles",{"_index":1689,"title":{},"body":{"guards/RoleGuard.html":{}}}],["expectedroles.includes(userrole",{"_index":1692,"title":{},"body":{"guards/RoleGuard.html":{}}}],["experiencia",{"_index":1597,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["explora",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explícito",{"_index":1502,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["f0f0f0",{"_index":946,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["f0f8ff",{"_index":952,"title":{},"body":{"components/DetalleComponent.html":{}}}],["f4b942",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{}}}],["f8f9fa",{"_index":1268,"title":{},"body":{"components/PerfilComponent.html":{}}}],["f9f9f9",{"_index":944,"title":{},"body":{"components/DetalleComponent.html":{}}}],["f9fafb",{"_index":1442,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fa",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fadeinup",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fafafa",{"_index":954,"title":{},"body":{"components/DetalleComponent.html":{}}}],["fallback",{"_index":1577,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["falsos",{"_index":1556,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["family",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["far",{"_index":575,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["fas",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fb",{"_index":284,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["fecha",{"_index":642,"title":{},"body":{"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["fechas",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":925,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["fff7e6",{"_index":1257,"title":{},"body":{"components/PerfilComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["files",{"_index":1967,"title":{},"body":{"index.html":{}}}],["filter",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(cat",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filtra",{"_index":1319,"title":{},"body":{"injectables/PostService.html":{}}}],["filtrar",{"_index":1324,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["filtro",{"_index":331,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["filtrobusqueda",{"_index":386,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["filtrocategoria",{"_index":285,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["filtronombre",{"_index":1840,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["final",{"_index":1631,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["financiamiento",{"_index":972,"title":{},"body":{"components/FooterComponent.html":{}}}],["fines",{"_index":1477,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fixed",{"_index":1096,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["flex",{"_index":939,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["flujo",{"_index":1429,"title":{},"body":{"components/RegisterComponent.html":{}}}],["following",{"_index":1998,"title":{},"body":{"index.html":{}}}],["fomentamos",{"_index":1518,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["font",{"_index":259,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["footer",{"_index":932,"title":{},"body":{"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["footer'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["footer.component.html",{"_index":959,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":960,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":17,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["forbidden",{"_index":992,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden'},{'name",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["forbidden.component.html",{"_index":993,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":994,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":104,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["forkjoin",{"_index":1213,"title":{},"body":{"components/PerfilComponent.html":{}}}],["forkjoin(commentrequests).subscribe(all",{"_index":1230,"title":{},"body":{"components/PerfilComponent.html":{}}}],["form",{"_index":387,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":316,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formgroup",{"_index":303,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formsmodule",{"_index":278,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["formulario",{"_index":601,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["foro",{"_index":583,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["fortalecer",{"_index":1614,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["framework",{"_index":2006,"title":{},"body":{"index.html":{}}}],["free",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["frontend",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["fuera",{"_index":1544,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fuerza",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["fulldate",{"_index":914,"title":{},"body":{"components/DetalleComponent.html":{}}}],["fullname",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["fullpath",{"_index":214,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["fullpath.split('/').filter(boolean",{"_index":217,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["funcionamiento",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futbol",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gap",{"_index":1104,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["garantizar",{"_index":1596,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["gener",{"_index":1649,"title":{},"body":{"interfaces/Report.html":{}}}],["generadas",{"_index":1309,"title":{},"body":{"injectables/PostService.html":{}}}],["generado",{"_index":1283,"title":{},"body":{"injectables/PostCategoryService.html":{},"interfaces/Report.html":{}}}],["generados",{"_index":692,"title":{},"body":{"injectables/CommentService.html":{}}}],["general",{"_index":582,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["generales",{"_index":734,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["generalmente",{"_index":1660,"title":{},"body":{"injectables/ReportService.html":{}}}],["generate",{"_index":1973,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1946,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":672,"title":{},"body":{"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["gestión",{"_index":1664,"title":{},"body":{"injectables/ReportService.html":{},"injectables/RoleService.html":{}}}],["getall",{"_index":1278,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["getall(categoryid",{"_index":1317,"title":{},"body":{"injectables/PostService.html":{}}}],["getallreports",{"_index":1654,"title":{},"body":{"injectables/ReportService.html":{}}}],["getaveragescore",{"_index":1729,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getaveragescore(idpost",{"_index":1733,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getazureuser",{"_index":1771,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid",{"_index":1305,"title":{},"body":{"injectables/PostService.html":{}}}],["getbyid(idpost",{"_index":1325,"title":{},"body":{"injectables/PostService.html":{}}}],["getbypostid",{"_index":681,"title":{},"body":{"injectables/CommentService.html":{}}}],["getbypostid(idpost",{"_index":703,"title":{},"body":{"injectables/CommentService.html":{}}}],["getcategoriasfiltradas",{"_index":313,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["getchild",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(route",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["geticonforcategory",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["geticonforcategory(name",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getiduser",{"_index":1772,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":1773,"title":{},"body":{"injectables/UserService.html":{}}}],["getpublicacionesfiltradas",{"_index":443,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["getresumenscores",{"_index":1730,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getresumenscores(iduser",{"_index":1736,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getrole",{"_index":1703,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["getrouteforcategory",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getrouteforcategory(name",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getslugfromname",{"_index":400,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["getslugfromname(name",{"_index":412,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["getting",{"_index":1943,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1774,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(email",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid",{"_index":1775,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(iduser",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserinitial",{"_index":1157,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getuserscore",{"_index":1731,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getuserscore(idpost",{"_index":1745,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getusuariosfiltrados",{"_index":1860,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["global",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["globales",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["gracias",{"_index":1618,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["gris",{"_index":269,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["group",{"_index":1262,"title":{},"body":{"components/PerfilComponent.html":{}}}],["gráfica",{"_index":1491,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["guard",{"_index":130,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guarda",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["guardar",{"_index":290,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/RegisterComponent.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["guardarregistro",{"_index":1406,"title":{},"body":{"components/RegisterComponent.html":{}}}],["guardarsede",{"_index":1158,"title":{},"body":{"components/PerfilComponent.html":{}}}],["guards",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["género",{"_index":1522,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["h2",{"_index":1101,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["h4",{"_index":1259,"title":{},"body":{"components/PerfilComponent.html":{}}}],["h5",{"_index":1260,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ha",{"_index":654,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["hasrole",{"_index":1704,"title":{},"body":{"injectables/RoleService.html":{}}}],["hasrole(expectedrole",{"_index":1710,"title":{},"body":{"injectables/RoleService.html":{}}}],["hay",{"_index":563,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["hazlo",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{}}}],["header",{"_index":945,"title":{},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["height",{"_index":373,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["helpbuilding",{"_index":1980,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":919,"title":{},"body":{"components/DetalleComponent.html":{}}}],["hidden",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["highlight",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hover",{"_index":266,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["html",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["http",{"_index":678,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1961,"title":{},"body":{"index.html":{}}}],["http://localhost:9090/api/comment",{"_index":714,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:9090/api/post",{"_index":1294,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["http://localhost:9090/api/reportes",{"_index":1676,"title":{},"body":{"injectables/ReportService.html":{}}}],["http://localhost:9090/api/score",{"_index":1751,"title":{},"body":{"injectables/ScoreService.html":{}}}],["http://localhost:9090/api/usuarios",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclient",{"_index":721,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["https://yr3rp1l7fd.execute",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["icono",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["id",{"_index":498,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idcategoria",{"_index":1737,"title":{},"body":{"injectables/ScoreService.html":{}}}],["idcategoria=${idcategoria",{"_index":1758,"title":{},"body":{"injectables/ScoreService.html":{}}}],["idcategory",{"_index":503,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["idcomment",{"_index":641,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["identidad",{"_index":1552,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["identifier",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idpost",{"_index":534,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["idreport",{"_index":1647,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["ids",{"_index":469,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["ids.foreach(id",{"_index":473,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["iduser",{"_index":477,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iduser).subscribe(score",{"_index":888,"title":{},"body":{"components/DetalleComponent.html":{}}}],["iduser.tostring",{"_index":1832,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":1591,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ilícito",{"_index":1496,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["impersonar",{"_index":1557,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["implements",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{}}}],["implica",{"_index":1605,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["important",{"_index":1439,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["inactiva",{"_index":354,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{}}}],["inactivo",{"_index":1652,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["inapropiadas",{"_index":557,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["inapropiado",{"_index":1527,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["inapropiado').subscribe",{"_index":521,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["includes",{"_index":1970,"title":{},"body":{"index.html":{}}}],["including",{"_index":2015,"title":{},"body":{"index.html":{}}}],["inclusiva",{"_index":1594,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["inclusivo",{"_index":1516,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["incluye",{"_index":1504,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["incluyendo",{"_index":1740,"title":{},"body":{"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":1320,"title":{},"body":{"injectables/PostService.html":{}}}],["indicado",{"_index":1783,"title":{},"body":{"injectables/UserService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["información",{"_index":1764,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":2014,"title":{},"body":{"index.html":{}}}],["infrinjan",{"_index":1511,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["iniciar",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["inicio",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/RegisterComponent.html":{}}}],["inject",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["inject(activatedroute",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["inject(commentservice",{"_index":857,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["inject(formbuilder",{"_index":310,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["inject(httpclient",{"_index":719,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["inject(msalservice",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["inject(postcategoryservice",{"_index":306,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(postservice",{"_index":430,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["inject(reportservice",{"_index":434,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["inject(router",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["inject(scoreservice",{"_index":438,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["inject(userservice",{"_index":441,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{}}}],["injectable",{"_index":169,"title":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":668,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["innecesarias",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":605,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["inputs",{"_index":1081,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["instanceof",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["institucional",{"_index":1566,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["institucionales",{"_index":1564,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["integración",{"_index":1765,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":632,"title":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":634,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["intro",{"_index":1624,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["invitamos",{"_index":1600,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["isadmin",{"_index":1705,"title":{},"body":{"injectables/RoleService.html":{}}}],["islast",{"_index":224,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isloggedin",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["iso",{"_index":644,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["isstudent",{"_index":1706,"title":{},"body":{"injectables/RoleService.html":{}}}],["italic",{"_index":1445,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["item",{"_index":246,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["item.descripcion",{"_index":1608,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["item.label",{"_index":250,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.path",{"_index":249,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.titulo",{"_index":1607,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["items",{"_index":200,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["joaquín",{"_index":1197,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["jp",{"_index":988,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["justify",{"_index":942,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["karma",{"_index":1995,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["la",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":212,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/RegisterComponent.html":{}}}],["las",{"_index":352,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":248,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/PerfilComponent.html":{}}}],["le",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ScoreService.html":{}}}],["leaf",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["left",{"_index":598,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["legend",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["lenguaje",{"_index":1488,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["library",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["light",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["lightness",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["limpia",{"_index":1582,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["limpias",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["line",{"_index":929,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["link",{"_index":623,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["list",{"_index":1261,"title":{},"body":{"components/PerfilComponent.html":{},"index.html":{}}}],["lista",{"_index":708,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{}}}],["literal",{"_index":208,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/UserService.html":{}}}],["llamamos",{"_index":1573,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["lo",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["loading",{"_index":388,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["local",{"_index":1954,"title":{},"body":{"index.html":{}}}],["locale_id",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localización",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1578,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('conectareglasaceptadas",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('iduser",{"_index":1834,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('name",{"_index":1830,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('userrole",{"_index":1720,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["localstorage.removeitem('conectareglasaceptadas",{"_index":1585,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.removeitem('name",{"_index":1587,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.removeitem('userrole",{"_index":1586,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('conectareglasaceptadas",{"_index":1576,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.setitem('iduser",{"_index":1831,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('name",{"_index":1829,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('userrole",{"_index":1828,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["login.component.html",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":106,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["logo",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["logout",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["los",{"_index":673,"title":{},"body":{"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["lucro",{"_index":1478,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["maip",{"_index":1185,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["manejo",{"_index":1432,"title":{},"body":{"components/RegisterComponent.html":{}}}],["manualmente",{"_index":231,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["map(cat",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mapa",{"_index":234,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["mapa[slug",{"_index":243,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["mar",{"_index":1200,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["marcar",{"_index":1574,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["marcarlo",{"_index":1673,"title":{},"body":{"injectables/ReportService.html":{}}}],["margin",{"_index":375,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["masks",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matching",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1487,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["max",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["mediante",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["melipilla",{"_index":1186,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["mensaje",{"_index":1082,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{}}}],["mesa",{"_index":964,"title":{},"body":{"components/FooterComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["mi",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["microsoft",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["min",{"_index":1106,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["mis",{"_index":1253,"title":{},"body":{"components/PerfilComponent.html":{}}}],["miscellaneous",{"_index":2025,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miscore",{"_index":839,"title":{},"body":{"components/DetalleComponent.html":{}}}],["misscores",{"_index":389,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["misscores[pub.idpost",{"_index":577,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["modal",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["modalconfirmacioncomponent",{"_index":108,"title":{"components/ModalConfirmacionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["modalidad",{"_index":1173,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["models",{"_index":445,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["models/post",{"_index":446,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["models/postcategory",{"_index":322,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{}}}],["models/report",{"_index":1368,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{},"injectables/ReportService.html":{}}}],["models/user",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["moderación",{"_index":1508,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["modern",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modificar",{"_index":1675,"title":{},"body":{"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["modify",{"_index":1966,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2022,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["montt",{"_index":1207,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["more",{"_index":2013,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["mostrarfooter",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["mostrarformulario",{"_index":390,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["mostrarlo",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["mostrarmodal",{"_index":1452,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["mostrarmodallogout",{"_index":1112,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mostrarnavbar",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["motivo",{"_index":1393,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["msal",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["msalservice",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["muted",{"_index":576,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["mutuo",{"_index":1617,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["más",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{}}}],["módulo",{"_index":1298,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["múltiples",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nacimiento",{"_index":1202,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["nada",{"_index":1256,"title":{},"body":{"components/PerfilComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["name.tolowercase",{"_index":525,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["namefor",{"_index":1974,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":1109,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["navbar.component.html",{"_index":1111,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1110,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":16,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1960,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["necesarios",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["needs",{"_index":2010,"title":{},"body":{"index.html":{}}}],["negro",{"_index":365,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["nete",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["new",{"_index":470,"title":{},"body":{"components/CategoriasComponent.html":{},"components/FooterComponent.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/ReportService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":507,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{}}}],["ng",{"_index":1957,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":201,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["ni",{"_index":690,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{}}}],["nico",{"_index":645,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}}}],["nombre",{"_index":356,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["nombreautor",{"_index":840,"title":{},"body":{"components/DetalleComponent.html":{}}}],["nombrecategoriamostrada",{"_index":391,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombresusuarios",{"_index":392,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombresusuarios[pub.iduser",{"_index":570,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["none",{"_index":265,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["normas",{"_index":556,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["norte",{"_index":1188,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["nos",{"_index":1613,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["nueva",{"_index":500,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["nuevapublicacion",{"_index":401,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nuevo",{"_index":687,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["nuevocomentario",{"_index":898,"title":{},"body":{"components/DetalleComponent.html":{}}}],["nuevos",{"_index":1291,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["null",{"_index":308,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["number",{"_index":408,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["number(raw",{"_index":1835,"title":{},"body":{"injectables/UserService.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":877,"title":{},"body":{"components/DetalleComponent.html":{}}}],["number:'1.1",{"_index":579,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["number:\\'1.1",{"_index":631,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["numérico",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["número",{"_index":652,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["o",{"_index":547,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["objeto",{"_index":688,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["objetos",{"_index":1288,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["observable",{"_index":694,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["obtener",{"_index":497,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["obtiene",{"_index":705,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["oeste",{"_index":1189,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["ofensivos",{"_index":1467,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["oferta",{"_index":1482,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["omit",{"_index":684,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["one",{"_index":2008,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":193,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["online",{"_index":1174,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["opcional",{"_index":1323,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["open",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["operaciones",{"_index":1766,"title":{},"body":{"injectables/UserService.html":{}}}],["optimiza",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizada",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1989,"title":{},"body":{"index.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["origen",{"_index":1523,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["otorg",{"_index":660,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["otorga",{"_index":658,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["otros",{"_index":532,"title":{},"body":{"components/CategoriasComponent.html":{},"components/FooterComponent.html":{}}}],["out",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["outline",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["output",{"_index":1094,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["outputs",{"_index":1084,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["ovalle",{"_index":1180,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["overflow",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["overlay",{"_index":1095,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["overview",{"_index":2019,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1102,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["p.iduser",{"_index":472,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["package",{"_index":1922,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":257,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["padre",{"_index":1178,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":2021,"title":{},"body":{"index.html":{}}}],["panel",{"_index":363,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/UsuariosComponent.html":{}}}],["pantalla",{"_index":1431,"title":{},"body":{"components/RegisterComponent.html":{}}}],["para",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":723,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["parte",{"_index":551,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["participa",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["participación",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["participar",{"_index":922,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["path",{"_index":213,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["pendientes",{"_index":1388,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["perfil",{"_index":1144,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["perfil'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["perfil.component.html",{"_index":1152,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.scss",{"_index":1151,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":112,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["perfiles",{"_index":1555,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["performance",{"_index":1990,"title":{},"body":{"index.html":{}}}],["permisos",{"_index":701,"title":{},"body":{"injectables/CommentService.html":{}}}],["permite",{"_index":676,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{}}}],["permitida",{"_index":1315,"title":{},"body":{"injectables/PostService.html":{}}}],["permitir",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["persona",{"_index":1472,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["personal",{"_index":1744,"title":{},"body":{"injectables/ScoreService.html":{}}}],["personales",{"_index":1249,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["pertenece",{"_index":646,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["pipe(filter(event",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1979,"title":{},"body":{"index.html":{}}}],["plataforma",{"_index":353,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["plaza",{"_index":1187,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["podrán",{"_index":1510,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["podrías",{"_index":1433,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pointer",{"_index":1635,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["policies",{"_index":1425,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["políticas",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["ponderada",{"_index":1252,"title":{},"body":{"components/PerfilComponent.html":{}}}],["poppins",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["por",{"_index":569,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/UserService.html":{}}}],["position",{"_index":366,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/UsuariosComponent.html":{}}}],["positiva",{"_index":1598,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["post",{"_index":406,"title":{"interfaces/Post.html":{}},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["post.content",{"_index":912,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post.createddate",{"_index":913,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post.idpost",{"_index":1241,"title":{},"body":{"components/PerfilComponent.html":{}}}],["post.title",{"_index":884,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post?.title",{"_index":911,"title":{},"body":{"components/DetalleComponent.html":{}}}],["postcategory",{"_index":296,"title":{"interfaces/PostCategory.html":{}},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["postcategoryservice",{"_index":319,"title":{"injectables/PostCategoryService.html":{}},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["postingcomment",{"_index":841,"title":{},"body":{"components/DetalleComponent.html":{}}}],["postreports",{"_index":1346,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["postreports.length",{"_index":1386,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["posts",{"_index":468,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["posts.filter(p",{"_index":1223,"title":{},"body":{"components/PerfilComponent.html":{}}}],["posts.length",{"_index":1254,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postservice",{"_index":393,"title":{"injectables/PostService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"coverage.html":{}}}],["postview",{"_index":664,"title":{"interfaces/PostView.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["powerful",{"_index":1971,"title":{},"body":{"index.html":{}}}],["preferente",{"_index":1534,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["preguntas",{"_index":546,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["presenciales",{"_index":1541,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["primero",{"_index":566,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["principal",{"_index":924,"title":{},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["principios",{"_index":1603,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["private",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["production",{"_index":1988,"title":{},"body":{"index.html":{}}}],["profesional",{"_index":1642,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibición",{"_index":1550,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibida",{"_index":1481,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibido",{"_index":1554,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohíbe",{"_index":1486,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["project",{"_index":1945,"title":{},"body":{"index.html":{}}}],["promedio",{"_index":842,"title":{},"body":{"components/DetalleComponent.html":{},"injectables/ScoreService.html":{}}}],["promedios",{"_index":1727,"title":{},"body":{"injectables/ScoreService.html":{}}}],["promedioscores",{"_index":394,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["promedioscores[pub.idpost",{"_index":578,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["promueva",{"_index":1520,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"properties.html":{}}}],["propia",{"_index":1741,"title":{},"body":{"injectables/ScoreService.html":{}}}],["proporciona",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protección",{"_index":1497,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["proteger",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protegida",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["proveedores",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pub",{"_index":410,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["pub.content",{"_index":574,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.content.tolowercase().includes(texto",{"_index":491,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.createddate",{"_index":572,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.idpost",{"_index":535,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.title",{"_index":568,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["pub.title.tolowercase().includes(texto",{"_index":490,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicaciones",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["publicaciones.length",{"_index":561,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicacionesfiltradas",{"_index":404,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicacionesreportadascomponent",{"_index":114,"title":{"components/PublicacionesReportadasComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["publicación",{"_index":516,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["publicado",{"_index":1255,"title":{},"body":{"components/PerfilComponent.html":{}}}],["publicar",{"_index":518,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publiques",{"_index":1498,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["pudo",{"_index":496,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pueden",{"_index":558,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["puedes",{"_index":542,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["puente",{"_index":1191,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["puerto",{"_index":1206,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["puntuaciones",{"_index":1723,"title":{},"body":{"injectables/ScoreService.html":{}}}],["puntuación",{"_index":657,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["puntuada",{"_index":659,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["puro",{"_index":1632,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["página",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["que",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["quehacer",{"_index":1538,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["r.idcomment",{"_index":1374,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["r.idpost",{"_index":1373,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["r.idreport",{"_index":1382,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["r.miscore",{"_index":485,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["r.promedio",{"_index":483,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["radius",{"_index":379,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["raro",{"_index":1579,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["raw",{"_index":1833,"title":{},"body":{"injectables/UserService.html":{}}}],["razón",{"_index":1651,"title":{},"body":{"interfaces/Report.html":{}}}],["reactiveformsmodule",{"_index":277,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["readonly",{"_index":1441,"title":{},"body":{"components/RegisterComponent.html":{}}}],["realiz",{"_index":643,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["realizada",{"_index":1269,"title":{},"body":{"interfaces/Post.html":{}}}],["realizado",{"_index":639,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["reason",{"_index":1648,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["rechazarreglas",{"_index":1456,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["recibido",{"_index":655,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["recibidos",{"_index":1250,"title":{},"body":{"components/PerfilComponent.html":{}}}],["record",{"_index":235,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{}}}],["recreativas",{"_index":240,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["recuerda",{"_index":553,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["red",{"_index":1615,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["redirige",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["redirigiendo",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirigir",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirigirlo",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["reference",{"_index":2020,"title":{},"body":{"index.html":{}}}],["references",{"_index":2017,"title":{},"body":{"index.html":{}}}],["register",{"_index":1402,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["register.component.html",{"_index":1404,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1403,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":117,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1405,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":1776,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(user",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["registra",{"_index":1330,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["registradas",{"_index":666,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["registrado",{"_index":1761,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["registrados",{"_index":1659,"title":{},"body":{"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["registrar",{"_index":1303,"title":{},"body":{"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ScoreService.html":{}}}],["registrarse",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["registro",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["regla",{"_index":1627,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["reglas",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["reglasaceptadasguard",{"_index":1894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reglasdelacomunidadcomponent",{"_index":119,"title":{"components/ReglasDeLaComunidadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["reincidencias",{"_index":1512,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["relacionadas",{"_index":1537,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["relacionados",{"_index":549,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["relative",{"_index":367,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/UsuariosComponent.html":{}}}],["reload",{"_index":1964,"title":{},"body":{"index.html":{}}}],["rep",{"_index":1389,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["rep.date",{"_index":1395,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["rep.idcomment",{"_index":1399,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["rep.idpost",{"_index":1390,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["rep.reason",{"_index":1394,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["rep.status",{"_index":1391,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["report",{"_index":1352,"title":{"interfaces/Report.html":{}},"body":{"components/PublicacionesReportadasComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["reportada",{"_index":523,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{}}}],["reportadas",{"_index":1342,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["reportadas.component.html",{"_index":1344,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.scss",{"_index":1343,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts",{"_index":1341,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{},"coverage.html":{}}}],["reportadas.component.ts:16",{"_index":1367,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:17",{"_index":1366,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:18",{"_index":1363,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:20",{"_index":1365,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:21",{"_index":1362,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:22",{"_index":1364,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:24",{"_index":1361,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:40",{"_index":1356,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:50",{"_index":1360,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:57",{"_index":1353,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas.component.ts:67",{"_index":1358,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportadas/publicaciones",{"_index":1340,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{},"coverage.html":{}}}],["reportado",{"_index":908,"title":{},"body":{"components/DetalleComponent.html":{},"interfaces/Report.html":{}}}],["reportados",{"_index":1398,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportar",{"_index":1526,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["reportarcomentario",{"_index":844,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reportarcomentario(com",{"_index":850,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reportarpublicacion",{"_index":402,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["reportarpublicacion(pub",{"_index":416,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["reportcomment",{"_index":1655,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportcomment(idcomment",{"_index":1665,"title":{},"body":{"injectables/ReportService.html":{}}}],["reporte",{"_index":1354,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["reporte.idcomment",{"_index":1383,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reporte.idpost",{"_index":1377,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reporte.idreport",{"_index":1376,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportes",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["reportpost",{"_index":1656,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportpost(idpost",{"_index":1669,"title":{},"body":{"injectables/ReportService.html":{}}}],["reports",{"_index":1370,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reports.filter(r",{"_index":1372,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["reportservice",{"_index":395,"title":{"injectables/ReportService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["representa",{"_index":636,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}}}],["requiere",{"_index":700,"title":{},"body":{"injectables/CommentService.html":{}}}],["requieren",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reservados",{"_index":985,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["resources",{"_index":2012,"title":{},"body":{"index.html":{}}}],["respetar",{"_index":1601,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respeto",{"_index":1462,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respetuosa",{"_index":1612,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respetuoso",{"_index":554,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["responsabilidad",{"_index":1539,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["responsable",{"_index":1611,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["responsables",{"_index":1546,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["resuelto",{"_index":1392,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumen",{"_index":1739,"title":{},"body":{"injectables/ScoreService.html":{}}}],["resumenes.foreach(r",{"_index":481,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["retorna",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["return",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["revisa",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["revisadas",{"_index":1531,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["revisado",{"_index":1674,"title":{},"body":{"injectables/ReportService.html":{}}}],["revisión",{"_index":1663,"title":{},"body":{"injectables/ReportService.html":{}}}],["rgba(0",{"_index":591,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["rgba(255",{"_index":1146,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rol",{"_index":1246,"title":{},"body":{"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["role",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["roleguard",{"_index":1683,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":1698,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleservice",{"_index":1696,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["route",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"guards/RoleGuard.html":{}}}],["route.data['expectedroles",{"_index":1690,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.firstchild",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/reglas",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":958,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["routermodule",{"_index":196,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["routeroutlet",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1955,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1997,"title":{},"body":{"index.html":{}}}],["running",{"_index":1959,"title":{},"body":{"index.html":{}}}],["rut",{"_index":1505,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ruta",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"guards/RoleGuard.html":{}}}],["rutas",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["s",{"_index":550,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{}}}],["san",{"_index":1193,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["sans",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sass:color",{"_index":252,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["scaffolding",{"_index":1969,"title":{},"body":{"index.html":{}}}],["scale(1.03",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["schematics",{"_index":1977,"title":{},"body":{"index.html":{}}}],["score",{"_index":536,"title":{"interfaces/Score.html":{}},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["score.score",{"_index":890,"title":{},"body":{"components/DetalleComponent.html":{}}}],["scores",{"_index":1724,"title":{},"body":{"injectables/ScoreService.html":{}}}],["scoreservice",{"_index":396,"title":{"injectables/ScoreService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["se",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{}}}],["sede",{"_index":1153,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["sedes",{"_index":1154,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["seg",{"_index":221,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments",{"_index":216,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments.foreach((seg",{"_index":220,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments.length",{"_index":225,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segura",{"_index":1595,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["seguridad",{"_index":1549,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["seguro",{"_index":1088,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["según",{"_index":1728,"title":{},"body":{"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["seleccione",{"_index":1436,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select:invalid",{"_index":1443,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["separación",{"_index":1641,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ser",{"_index":559,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["serif",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serveonce",{"_index":1958,"title":{},"body":{"index.html":{}}}],["server",{"_index":1952,"title":{},"body":{"index.html":{}}}],["services",{"_index":447,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["services/user.service",{"_index":1688,"title":{},"body":{"guards/RoleGuard.html":{}}}],["servicio",{"_index":670,"title":{},"body":{"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["servicios",{"_index":965,"title":{},"body":{"components/FooterComponent.html":{}}}],["serán",{"_index":691,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["sesión",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["sessionstorage.clear",{"_index":1588,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["set(posts.map(p",{"_index":471,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["setiduser",{"_index":1777,"title":{},"body":{"injectables/UserService.html":{}}}],["setiduser(iduser",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["setname",{"_index":1778,"title":{},"body":{"injectables/UserService.html":{}}}],["setname(name",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["setrole",{"_index":1779,"title":{},"body":{"injectables/UserService.html":{}}}],["setrole(role",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["setscore",{"_index":1732,"title":{},"body":{"injectables/ScoreService.html":{}}}],["setscore(score",{"_index":1749,"title":{},"body":{"injectables/ScoreService.html":{}}}],["shadow",{"_index":589,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["shared/modal",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["si",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["sigue",{"_index":555,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["siguientes",{"_index":1602,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["sin",{"_index":689,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["sistema",{"_index":1316,"title":{},"body":{"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["size",{"_index":260,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["slug",{"_index":207,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["slug.charat(0).touppercase",{"_index":244,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["slug.slice(1",{"_index":245,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["sobre",{"_index":1646,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["solid",{"_index":609,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["solo",{"_index":1313,"title":{},"body":{"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["speed",{"_index":1991,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts",{"_index":192,"title":{},"body":{"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:13",{"_index":211,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:14",{"_index":210,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:16",{"_index":209,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:18",{"_index":203,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:43",{"_index":206,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts",{"_index":381,"title":{},"body":{"components/CategoriasComponent.html":{},"coverage.html":{}}}],["src/app/components/categorias/categorias.component.ts:104",{"_index":444,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:113",{"_index":418,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:118",{"_index":415,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:149",{"_index":417,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:155",{"_index":413,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:172",{"_index":409,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:28",{"_index":436,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:29",{"_index":437,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:30",{"_index":421,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:31",{"_index":429,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:32",{"_index":431,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:33",{"_index":442,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:34",{"_index":435,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:35",{"_index":439,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:37",{"_index":440,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:38",{"_index":419,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:39",{"_index":420,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:40",{"_index":427,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:41",{"_index":433,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:42",{"_index":428,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:43",{"_index":432,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:44",{"_index":425,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:45",{"_index":422,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:46",{"_index":423,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:47",{"_index":426,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:48",{"_index":424,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:50",{"_index":414,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:77",{"_index":411,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts",{"_index":833,"title":{},"body":{"components/DetalleComponent.html":{},"coverage.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:118",{"_index":853,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:126",{"_index":851,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:132",{"_index":854,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:137",{"_index":847,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:28",{"_index":872,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:29",{"_index":873,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:30",{"_index":869,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:31",{"_index":858,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:32",{"_index":875,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:33",{"_index":871,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:34",{"_index":874,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:35",{"_index":862,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:37",{"_index":867,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:38",{"_index":856,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:39",{"_index":855,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:40",{"_index":863,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:41",{"_index":868,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:42",{"_index":870,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:43",{"_index":864,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:44",{"_index":861,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:45",{"_index":866,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:47",{"_index":849,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:96",{"_index":848,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/configuracion/categorias",{"_index":272,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/configuracion.component.ts",{"_index":728,"title":{},"body":{"components/ConfiguracionComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts",{"_index":1837,"title":{},"body":{"components/UsuariosComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:17",{"_index":1855,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:18",{"_index":1859,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:20",{"_index":1858,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:21",{"_index":1857,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:22",{"_index":1854,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:23",{"_index":1856,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:25",{"_index":1853,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:36",{"_index":1861,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:42",{"_index":1847,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:46",{"_index":1849,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:51",{"_index":1846,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:56",{"_index":1852,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:73",{"_index":1851,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:16",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:17",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:19",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:20",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:21",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:23",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:47",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:68",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":957,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:13",{"_index":963,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/forbidden/forbidden.component.ts",{"_index":991,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:19",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:70",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1108,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:17",{"_index":1123,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1121,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":1120,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:21",{"_index":1122,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1119,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:24",{"_index":1118,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:40",{"_index":1117,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:44",{"_index":1116,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:54",{"_index":1115,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts",{"_index":1150,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts:102",{"_index":1163,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:106",{"_index":1164,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:114",{"_index":1162,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:30",{"_index":1212,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:31",{"_index":1170,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:32",{"_index":1171,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:33",{"_index":1167,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:34",{"_index":1168,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:36",{"_index":1211,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:37",{"_index":1169,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:38",{"_index":1166,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:39",{"_index":1172,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:40",{"_index":1208,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:65",{"_index":1210,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:66",{"_index":1209,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:68",{"_index":1165,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:86",{"_index":1160,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/publicaciones",{"_index":1339,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1401,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:15",{"_index":1410,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:16",{"_index":1415,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:17",{"_index":1413,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:19",{"_index":1412,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:20",{"_index":1409,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:21",{"_index":1411,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:22",{"_index":1414,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:31",{"_index":1408,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:46",{"_index":1407,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/reglas",{"_index":1447,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:19",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/role.guard.ts",{"_index":1684,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/role.guard.ts:12",{"_index":1687,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/core/services/comment.service.ts",{"_index":669,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/app/core/services/comment.service.ts:15",{"_index":715,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:16",{"_index":720,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:23",{"_index":704,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:32",{"_index":685,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:41",{"_index":697,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:51",{"_index":710,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/post",{"_index":1276,"title":{},"body":{"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["src/app/core/services/post.service.ts",{"_index":1302,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/app/core/services/post.service.ts:15",{"_index":1333,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:16",{"_index":1334,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:23",{"_index":1318,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:35",{"_index":1326,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:45",{"_index":1308,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:54",{"_index":1312,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:63",{"_index":1329,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/report.service.ts",{"_index":1653,"title":{},"body":{"injectables/ReportService.html":{},"coverage.html":{}}}],["src/app/core/services/report.service.ts:15",{"_index":1677,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:16",{"_index":1678,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:24",{"_index":1670,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:35",{"_index":1666,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:45",{"_index":1658,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:55",{"_index":1672,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/role.service.ts",{"_index":1697,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/app/core/services/role.service.ts:16",{"_index":1707,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:25",{"_index":1711,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:34",{"_index":1716,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:42",{"_index":1718,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/score.service.ts",{"_index":1722,"title":{},"body":{"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/core/services/score.service.ts:16",{"_index":1752,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:17",{"_index":1753,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:24",{"_index":1734,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:34",{"_index":1746,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:42",{"_index":1750,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:53",{"_index":1738,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1763,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:101",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:110",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:120",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:129",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:137",{"_index":1786,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:20",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:26",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:40",{"_index":1782,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:49",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:57",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:65",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:70",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:75",{"_index":1784,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:83",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:88",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:96",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/models/post.ts",{"_index":635,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["src/app/models/postcategory.ts",{"_index":1271,"title":{},"body":{"interfaces/PostCategory.html":{},"coverage.html":{}}}],["src/app/models/report.ts",{"_index":1645,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":1760,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/modal",{"_index":1075,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":195,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["start",{"_index":1953,"title":{},"body":{"index.html":{}}}],["started",{"_index":1944,"title":{"index.html":{}},"body":{}}],["state",{"_index":1242,"title":{},"body":{"components/PerfilComponent.html":{}}}],["statements",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":327,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["storage",{"_index":1583,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["store",{"_index":1984,"title":{},"body":{"index.html":{}}}],["stretched",{"_index":622,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["strong",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["student",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["style",{"_index":1444,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["styles",{"_index":191,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{}}}],["styleurls",{"_index":197,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["su",{"_index":699,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["subscribe",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/UsuariosComponent.html":{}}}],["such",{"_index":1978,"title":{},"body":{"index.html":{}}}],["suits",{"_index":2009,"title":{},"body":{"index.html":{}}}],["sumarvisualizacion",{"_index":1306,"title":{},"body":{"injectables/PostService.html":{}}}],["sumarvisualizacion(idpost",{"_index":1328,"title":{},"body":{"injectables/PostService.html":{}}}],["suplantación",{"_index":1551,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["suspensión",{"_index":1514,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["switch",{"_index":524,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["tabla",{"_index":613,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["table",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["tarjeta",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["te",{"_index":1599,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tecnológicos",{"_index":975,"title":{},"body":{"components/FooterComponent.html":{}}}],["teléfonos",{"_index":976,"title":{},"body":{"components/FooterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["temas",{"_index":548,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["terceros",{"_index":1500,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["test",{"_index":1996,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2003,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":2000,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1993,"title":{},"body":{"index.html":{}}}],["text",{"_index":263,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["textarea",{"_index":606,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["texto",{"_index":487,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["theater",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.apiurl}/resumen?iduser=${iduser",{"_index":1757,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.cancelar",{"_index":345,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.cancelaredicion",{"_index":1877,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.cargar",{"_index":328,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.cargarpublicaciones",{"_index":464,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.cargarpublicaciones(user.iduser",{"_index":1220,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.cargarusuarios",{"_index":1864,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.categoriaform",{"_index":324,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.invalid",{"_index":340,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.patchvalue(this.editing",{"_index":338,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.reset",{"_index":339,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.value",{"_index":342,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaid",{"_index":459,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.categorianombre",{"_index":461,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.categorias",{"_index":330,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categorias.filter(c",{"_index":333,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categories",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["this.categoryservice.create(datos).subscribe",{"_index":346,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.delete(cat.idcategory).subscribe",{"_index":349,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.getall().subscribe(c",{"_index":335,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.update(this.editing.idcategory",{"_index":343,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.checkandredirect(account.username",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.comentarioform",{"_index":878,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.invalid",{"_index":896,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.reset",{"_index":904,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.value.content",{"_index":901,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentreports",{"_index":1375,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.commentreports.filter(r",{"_index":1385,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.comments",{"_index":895,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comments.push(comentario",{"_index":903,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentservice.create(nuevocomentario).subscribe",{"_index":902,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentservice.delete(reporte.idcomment).subscribe",{"_index":1384,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.commentservice.getbypostid(p.idpost",{"_index":1228,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.commentservice.getbypostid(post.idpost).subscribe(comments",{"_index":894,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.editing",{"_index":337,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["this.editing.iduser",{"_index":1875,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.email",{"_index":1418,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":325,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["this.filtrobusqueda.trim",{"_index":486,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.filtrobusqueda.trim().tolowercase",{"_index":488,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.filtrocategoria.tolowercase",{"_index":332,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.filtrocategoria.trim",{"_index":329,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.filtronombre.tolowercase",{"_index":1867,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.filtronombre.trim",{"_index":1865,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.form",{"_index":452,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.invalid",{"_index":494,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.reset",{"_index":493,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.value.content",{"_index":502,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.value.title",{"_index":501,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.getchild(this.route",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.geticonforcategory(cat.name",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getrole",{"_index":1721,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.getrouteforcategory(cat.name",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getslugfromname(cat.name",{"_index":457,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":1301,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`${this.apiurl}/${idcomment",{"_index":726,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.delete(`${this.apiurl}/${idpost",{"_index":1337,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl",{"_index":1681,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.apiurl}/${email",{"_index":1827,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/${idpost",{"_index":1336,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}/average/${idpost",{"_index":1754,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.get(`${this.apiurl}/exists/${encodedemail",{"_index":1826,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/id/${iduser",{"_index":1836,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/user/${iduser}/post/${idpost",{"_index":1755,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.get(`${this.apiurl}?idcategory=${categoryid",{"_index":1335,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}?idpost=${idpost",{"_index":724,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.get(this.apiurl",{"_index":1297,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["this.http.get(url",{"_index":1759,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.post(`${this.apiurl}/comentario",{"_index":1680,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.post(`${this.apiurl}/publicacion",{"_index":1679,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.post(`${this.apiurl}/save",{"_index":1756,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.post(this.apiurl",{"_index":725,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":1300,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.apiurl}/${idcomment",{"_index":727,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.put(`${this.apiurl}/${idpost}/view",{"_index":1338,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.put(`${this.apiurl}/${idreport",{"_index":1682,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.isloggedin",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.items",{"_index":219,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.items.push",{"_index":227,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.items.unshift",{"_index":233,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.loading",{"_index":465,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PublicacionesReportadasComponent.html":{}}}],["this.logout",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.miscore",{"_index":889,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.misscores[pub.idpost",{"_index":537,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.misscores[r.idpost",{"_index":484,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.mostrarfooter",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mostrarformulario",{"_index":492,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.mostrarmodal",{"_index":1580,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["this.mostrarmodallogout",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.mostrarnavbar",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.msal.instance.getactiveaccount",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.msal.logoutpopup().subscribe",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.msalservice.instance.getactiveaccount",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["this.msalservice.instance.getallaccounts()[0",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.instance.setactiveaccount(account",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.loginpopup().subscribe",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.logoutpopup().subscribe",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":1420,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.nombreautor",{"_index":893,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.nombrecategoriamostrada",{"_index":463,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.nombresusuarios[id",{"_index":475,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.post",{"_index":882,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.post.idpost",{"_index":899,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postcategoryservice.getall().subscribe(categories",{"_index":455,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["this.postcategoryservice.getall().subscribe(cats",{"_index":1214,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postingcomment",{"_index":897,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postreports",{"_index":1371,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.postreports.filter(r",{"_index":1381,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.posts",{"_index":1222,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.length",{"_index":1225,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.map(p",{"_index":1227,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postservice.createpost(nueva).subscribe",{"_index":506,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.postservice.delete(reporte.idpost).subscribe",{"_index":1378,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.postservice.getall().subscribe(posts",{"_index":1221,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postservice.getall(this.categoriaid).subscribe(posts",{"_index":466,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.postservice.getbyid(id).subscribe",{"_index":881,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postservice.sumarvisualizacion(id).subscribe",{"_index":880,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.promedio",{"_index":886,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.promedioscores[pub.idpost",{"_index":539,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.promedioscores[r.idpost",{"_index":482,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.publicaciones",{"_index":467,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.publicaciones.filter(pub",{"_index":489,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.registerform",{"_index":1422,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1423,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.center",{"_index":1424,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.reportservice.getallreports().subscribe",{"_index":1369,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.reportservice.reportcomment(com.idcomment",{"_index":906,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.reportservice.reportpost(pub.idpost",{"_index":519,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.reportservice.reportpost(this.post.idpost",{"_index":905,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.reportservice.updatestatus(reporte.idreport",{"_index":1379,"title":{},"body":{"components/PublicacionesReportadasComponent.html":{}}}],["this.role",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.route.snapshot.parammap.get('slug",{"_index":454,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.router.events",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/categoria",{"_index":909,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":458,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.router.navigate(['/dashboard/ayudantias",{"_index":1240,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1589,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["this.router.navigate(['/registro",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/reglas",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":215,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.scoreservice.getaveragescore(post.idpost).subscribe(avg",{"_index":885,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.getaveragescore(pub.idpost).subscribe(avg",{"_index":538,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.scoreservice.getaveragescore(this.post!.idpost).subscribe(avg",{"_index":910,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.getresumenscores(iduser",{"_index":479,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.scoreservice.getuserscore(post.idpost",{"_index":887,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.setscore",{"_index":533,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.sede",{"_index":1218,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.slug",{"_index":453,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.toreadable(seg",{"_index":228,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.totalcomments",{"_index":1231,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.totalposts",{"_index":1224,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user",{"_index":1217,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user.name.charat(0).touppercase",{"_index":1237,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user?.name",{"_index":1236,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.userform",{"_index":1862,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.invalid",{"_index":1873,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.patchvalue(this.editing",{"_index":1871,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.reset",{"_index":1872,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.value",{"_index":1874,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.username",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.users",{"_index":1866,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.users.filter(u",{"_index":1868,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.checkuserexists(email).subscribe",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.clearrole",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.deleteuser(user.iduser).subscribe",{"_index":1879,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.getall().subscribe(users",{"_index":1870,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.getazureuser",{"_index":1417,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getazureuser()?.email",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.getazureuser()?.fullname",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.getiduser",{"_index":478,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.userservice.getname",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.userservice.getrole",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{},"guards/RoleGuard.html":{}}}],["this.userservice.getuser(email).subscribe",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuser(email).subscribe(user",{"_index":1216,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.getuserbyid(id).subscribe(user",{"_index":474,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.userservice.getuserbyid(post.iduser).subscribe",{"_index":891,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.userservice.registeruser",{"_index":1878,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.registeruser(updateduser).subscribe",{"_index":1239,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.registeruser(user).subscribe",{"_index":1430,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.setiduser(user.iduser",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setname(user.name",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setrole(user.role",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.updateuser(this.editing.iduser",{"_index":1876,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["tiene",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RoleService.html":{}}}],["tipo",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["title",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["titulo",{"_index":362,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["toda",{"_index":1471,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["todas",{"_index":1287,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["todavía",{"_index":921,"title":{},"body":{"components/DetalleComponent.html":{}}}],["todo",{"_index":1464,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["todos",{"_index":706,"title":{},"body":{"injectables/CommentService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["toggleformulario",{"_index":403,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["token",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toleran",{"_index":1466,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tools",{"_index":1972,"title":{},"body":{"index.html":{}}}],["top",{"_index":612,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["toreadable",{"_index":202,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["toreadable(slug",{"_index":205,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["total",{"_index":665,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["totalcomments",{"_index":1155,"title":{},"body":{"components/PerfilComponent.html":{}}}],["totalposts",{"_index":1156,"title":{},"body":{"components/PerfilComponent.html":{}}}],["track",{"_index":247,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["traer",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["transform",{"_index":616,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["transition",{"_index":615,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["translatey",{"_index":619,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["translatey(0",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["translatey(20px",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transparent",{"_index":256,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tratada",{"_index":1474,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["true",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["trueques",{"_index":242,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"interfaces/PostCategory.html":{}}}],["tslib",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tus",{"_index":544,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["tuyos",{"_index":1499,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":567,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["u.center",{"_index":1883,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.email",{"_index":1880,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.name",{"_index":1881,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.name?.tolowercase().includes(filtro",{"_index":1869,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.role",{"_index":1882,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["uc",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["un",{"_index":637,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["una",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["undefined",{"_index":229,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["undefined).subscribe(resumenes",{"_index":480,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["underline",{"_index":267,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["unit",{"_index":1992,"title":{},"body":{"index.html":{}}}],["update",{"_index":682,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["update(id",{"_index":1289,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["update(idcomment",{"_index":709,"title":{},"body":{"injectables/CommentService.html":{}}}],["updateduser",{"_index":1238,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["updatestatus",{"_index":1657,"title":{},"body":{"injectables/ReportService.html":{}}}],["updatestatus(idreport",{"_index":1671,"title":{},"body":{"injectables/ReportService.html":{}}}],["updateuser",{"_index":1780,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(id",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["uppercase",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["url",{"_index":716,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["usado",{"_index":1661,"title":{},"body":{"injectables/ReportService.html":{}}}],["use",{"_index":251,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["user",{"_index":892,"title":{"interfaces/User.html":{}},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["user.center",{"_index":1219,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user.iduser",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["user.name",{"_index":476,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["user.policies",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["user?.email",{"_index":1245,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user?.name",{"_index":1243,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user?.role",{"_index":1247,"title":{},"body":{"components/PerfilComponent.html":{}}}],["userform",{"_index":1841,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["username",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["userrole",{"_index":1691,"title":{},"body":{"guards/RoleGuard.html":{}}}],["users",{"_index":1842,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["userservice",{"_index":397,"title":{"injectables/UserService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["usevalue",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1947,"title":{},"body":{"index.html":{}}}],["uso",{"_index":1561,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["usuario",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["usuarios",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["usuarios.component.html",{"_index":1839,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["usuarios.component.scss",{"_index":1838,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["usuarioscomponent",{"_index":124,"title":{"components/UsuariosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["usuariosfiltrados",{"_index":1845,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["utiliza",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RoleService.html":{}}}],["utilizando",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilizar",{"_index":1558,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["validando",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators",{"_index":317,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["validators.email",{"_index":1863,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["validators.maxlength(300",{"_index":879,"title":{},"body":{"components/DetalleComponent.html":{}}}],["validators.required",{"_index":326,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["valor",{"_index":407,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["valores",{"_index":1292,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["valparaíso",{"_index":1198,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["varas",{"_index":1182,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2026,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venta",{"_index":1483,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ver",{"_index":990,"title":{},"body":{"components/FooterComponent.html":{}}}],["verifica",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["verificar",{"_index":1701,"title":{},"body":{"injectables/RoleService.html":{}}}],["version",{"_index":1949,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vespucio",{"_index":1190,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["vibrante",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vida",{"_index":973,"title":{},"body":{"components/FooterComponent.html":{}}}],["viene",{"_index":1427,"title":{},"body":{"components/RegisterComponent.html":{}}}],["views",{"_index":656,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["villarrica",{"_index":1205,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["violencia",{"_index":1490,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["violentos",{"_index":1470,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["virtual",{"_index":1176,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["visible",{"_index":1083,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["visit",{"_index":2018,"title":{},"body":{"index.html":{}}}],["visualizaciones",{"_index":653,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["visualización",{"_index":1331,"title":{},"body":{"injectables/PostService.html":{}}}],["visualizada",{"_index":1332,"title":{},"body":{"injectables/PostService.html":{}}}],["viña",{"_index":1199,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["void",{"_index":204,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["voluntariado",{"_index":241,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["volver",{"_index":845,"title":{},"body":{"components/DetalleComponent.html":{},"components/RegisterComponent.html":{}}}],["votado",{"_index":1748,"title":{},"body":{"injectables/ScoreService.html":{}}}],["vulgar",{"_index":1489,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["warning",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{}}}],["weight",{"_index":270,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["whatsapp",{"_index":966,"title":{},"body":{"components/FooterComponent.html":{}}}],["whenever",{"_index":1965,"title":{},"body":{"index.html":{}}}],["white",{"_index":586,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["width",{"_index":371,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["works",{"_index":995,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["wrap",{"_index":1105,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["wrapper",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["xito",{"_index":511,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["y",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/PublicacionesReportadasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":1282,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["yes",{"_index":1322,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["z",{"_index":625,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["zonas",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarFooter\n                            \n                            \n                                mostrarNavbar\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChild(route: ActivatedRoute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ActivatedRoute\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarNavbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Conecta-DUOC'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { inject, Component } from '@angular/core';\n\nimport { ActivatedRoute, Data, NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { filter } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'Conecta-DUOC';\n  mostrarNavbar = true;\n  mostrarFooter = true;\n\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n\n  constructor() {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(() => {\n        const currentRoute = this.getChild(this.route);\n        const data: Data = currentRoute.snapshot.data;\n\n        this.mostrarNavbar = data['showNavbar'] !== false;\n        this.mostrarFooter = data['showFooter'] !== false;\n      });\n  }\n\n  private getChild(route: ActivatedRoute): ActivatedRoute {\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n}\n\n    \n\n    \n        @if (mostrarNavbar) {\n  \n}\n\n\n  \n\n\n@if (mostrarFooter) {\n  \n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mostrarNavbar) {  }  @if (mostrarFooter) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard para proteger rutas mediante la autenticación de MSAL (Microsoft Authentication Library).\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:19\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene una sesión activa para permitir el acceso a la ruta protegida.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario está autenticado, de lo contrario, redirige al inicio de sesión y retorna false.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { inject, Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { MsalService } from '@azure/msal-angular';\n\n/**\n * Guard para proteger rutas mediante la autenticación de MSAL (Microsoft Authentication Library).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  private msalService = inject(MsalService);\n  private router = inject(Router);\n\n  /**\n   * Verifica si el usuario tiene una sesión activa para permitir el acceso a la ruta protegida.\n   * @returns `true` si el usuario está autenticado, de lo contrario, redirige al inicio de sesión y retorna `false`.\n   */\n  canActivate(): boolean {\n    const account = this.msalService.instance.getActiveAccount();\n\n    if (account) {\n      // Usuario autenticado\n      return true;\n    } else {\n      // Usuario no autenticado, redirigir al login\n      console.warn('No se encontró una cuenta activa, redirigiendo al inicio de sesión.');\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n// Este guard se utiliza para proteger rutas que requieren autenticación.\n// Si el usuario no está autenticado, se le redirige a la página de inicio de sesión.\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/breadcrumb/breadcrumb.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                toReadable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/breadcrumb/breadcrumb.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toReadable\n                        \n                    \n                \n            \n            \n                \n                        \n                    toReadable(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/breadcrumb/breadcrumb.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\n\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-breadcrumb',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n\n  items: { label: string; path?: string }[] = [];\n\n  ngOnInit(): void {\n    const fullPath = this.router.url.split('?')[0];\n    const segments = fullPath.split('/').filter(Boolean);\n    \n    let cumulativePath = '';\n    this.items = [];\n\n    segments.forEach((seg, index) => {\n      cumulativePath += `/${seg}`;\n\n      if (seg === 'dashboard' || seg === 'categoria') {\n        return;\n      }\n\n      const isLast = index === segments.length - 1;\n      this.items.push({\n        label: this.toReadable(seg),\n        path: isLast ? undefined : cumulativePath\n      });\n    });\n\n    // Agregar manualmente 'Inicio' al comienzo\n    this.items.unshift({ label: 'Inicio', path: '/dashboard' });\n  }\n\n  private toReadable(slug: string): string {\n    const mapa: Record = {\n      ayudantias: 'Ayudantías',\n      deportes: 'Deportes',\n      culturales: 'Culturales y Recreativas',\n      voluntariado: 'Voluntariado',\n      trueques: 'Trueques',\n      dashboard: 'Inicio'\n    };\n\n    return mapa[slug] || slug.charAt(0).toUpperCase() + slug.slice(1);\n  }\n}\n\n    \n\n    \n        \n  \n    @for (item of items; track item; let last = $last) {\n      \n        @if (!last && item.path) {\n          {{ item.label }}\n        }\n        @if (last || !item.path) {\n          {{ item.label }}\n        }\n      \n    }\n  \n\n    \n\n    \n                \n                    ./breadcrumb.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.breadcrumb-container {\n    background-color: transparent;\n    padding: 0;\n\n    .breadcrumb {\n        background-color: transparent;\n        font-size: 0.95rem;\n    }\n\n    .breadcrumb-item {\n        a {\n            color: $amarillo;\n            text-decoration: none;\n\n            &:hover {\n                text-decoration: underline;\n            }\n        }\n\n        &.active {\n            color: $gris;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (item of items; track item; let last = $last) {              @if (!last && item.path) {          {{ item.label }}        }        @if (last || !item.path) {          {{ item.label }}        }          }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriasAdminComponent.html":{"url":"components/CategoriasAdminComponent.html","title":"component - CategoriasAdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriasAdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/categorias-admin/categorias-admin.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-categorias\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                                BreadcrumbComponent\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./categorias-admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categorias-admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriaForm\n                            \n                            \n                                categorias\n                            \n                            \n                                    Private\n                                categoryService\n                            \n                            \n                                editing\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroCategoria\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelar\n                            \n                            \n                                cargar\n                            \n                            \n                                editar\n                            \n                            \n                                eliminar\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoriasFiltradas\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelar\n                        \n                    \n                \n            \n            \n                \ncancelar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargar\n                        \n                    \n                \n            \n            \n                \ncargar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(cat: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(cat: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroCategoria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoriasFiltradas\n                    \n                \n\n                \n                    \n                        getcategoriasFiltradas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PostCategoryService } from '../../../core/services/post-category.service';\nimport { PostCategory } from '../../../models/postCategory';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-config-categorias',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, BreadcrumbComponent, FormsModule],\n  templateUrl: './categorias-admin.component.html',\n  styleUrls: ['./categorias-admin.component.scss']\n})\nexport class CategoriasAdminComponent implements OnInit {\n  private fb = inject(FormBuilder);\n  private categoryService = inject(PostCategoryService);\n\n  categorias: PostCategory[] = [];\n  categoriaForm!: FormGroup;\n  editing: PostCategory | null = null;\n  filtroCategoria: string = '';\n\n  ngOnInit(): void {\n    this.categoriaForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      status: [1, Validators.required]\n    });\n\n    this.cargar();\n  }\n\n  get categoriasFiltradas(): PostCategory[] {\n    if (!this.filtroCategoria.trim()) return this.categorias;\n    const filtro = this.filtroCategoria.toLowerCase();\n    return this.categorias.filter(c => c.name.toLowerCase().includes(filtro));\n  }\n\n\n  cargar(): void {\n    this.categoryService.getAll().subscribe(c => (this.categorias = c));\n  }\n\n  editar(cat: PostCategory): void {\n    this.editing = { ...cat };\n    this.categoriaForm.patchValue(this.editing);\n  }\n\n  cancelar(): void {\n    this.editing = null;\n    this.categoriaForm.reset({ status: 1 });\n  }\n\n  guardar(): void {\n    if (this.categoriaForm.invalid) return;\n    const datos = this.categoriaForm.value as PostCategory;\n    if (this.editing) {\n      this.categoryService.update(this.editing.idCategory, datos).subscribe(() => {\n        this.cargar();\n        this.cancelar();\n      });\n    } else {\n      this.categoryService.create(datos).subscribe(() => {\n        this.cargar();\n        this.categoriaForm.reset({ status: 1 });\n      });\n    }\n  }\n\n  eliminar(cat: PostCategory): void {\n    if (!confirm('¿Eliminar categoría?')) return;\n    this.categoryService.delete(cat.idCategory).subscribe(() => this.cargar());\n  }\n}\n    \n\n    \n        \n    \n    Categorías\n    Administra las categorías de la plataforma\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Activa\n                    Inactiva\n                \n            \n            \n                {{ editing ? 'Actualizar' : 'Agregar' }}\n                Cancelar\n            \n        \n    \n\n    \n    \n        \n    \n\n    \n        \n            \n                \n                    Nombre\n                    Descripción\n                    Estado\n                    \n                \n            \n            \n                \n                    {{ c.name }}\n                    {{ c.description }}\n                    {{ c.status ? 'Activa' : 'Inactiva' }}\n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./categorias-admin.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Categorías    Administra las categorías de la plataforma                                                                                                                                            Activa                    Inactiva                                                        {{ editing ? \\'Actualizar\\' : \\'Agregar\\' }}                Cancelar                                                                                                        Nombre                    Descripción                    Estado                                                                                                {{ c.name }}                    {{ c.description }}                    {{ c.status ? \\'Activa\\' : \\'Inactiva\\' }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriasAdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriasComponent.html":{"url":"components/CategoriasComponent.html","title":"component - CategoriasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categorias/categorias.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categorias\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                BreadcrumbComponent\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./categorias.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categorias.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriaId\n                            \n                            \n                                categoriaNombre\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroBusqueda\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                misScores\n                            \n                            \n                                mostrarFormulario\n                            \n                            \n                                nombreCategoriaMostrada\n                            \n                            \n                                nombresUsuarios\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                promedioScores\n                            \n                            \n                                publicaciones\n                            \n                            \n                                    Private\n                                reportService\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                slug\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calificar\n                            \n                            \n                                cargarPublicaciones\n                            \n                            \n                                getSlugFromName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                nuevaPublicacion\n                            \n                            \n                                reportarPublicacion\n                            \n                            \n                                toggleFormulario\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publicacionesFiltradas\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calificar\n                        \n                    \n                \n            \n            \n                \ncalificar(pub: Post, valor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pub\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPublicaciones\n                        \n                    \n                \n            \n            \n                \ncargarPublicaciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSlugFromName\n                        \n                    \n                \n            \n            \n                \ngetSlugFromName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevaPublicacion\n                        \n                    \n                \n            \n            \n                \nnuevaPublicacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarPublicacion\n                        \n                    \n                \n            \n            \n                \nreportarPublicacion(pub: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pub\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFormulario\n                        \n                    \n                \n            \n            \n                \ntoggleFormulario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroBusqueda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        misScores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarFormulario\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreCategoriaMostrada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombresUsuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedioScores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publicacionesFiltradas\n                    \n                \n\n                \n                    \n                        getpublicacionesFiltradas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/categorias/categorias.component.ts:104\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/* BREADCRUMB */\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n/* MODELS */\nimport { Post } from '../../models/post';\n\n/* SERVICES */\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { PostService } from '../../core/services/post.service';\nimport { UserService } from '../../core/services/user.service';\nimport { ReportService } from '../../core/services/report.service';\nimport { ScoreService } from '../../core/services/score.service';\n\n@Component({\n  selector: 'app-categorias',\n  standalone: true,\n  imports: [BreadcrumbComponent, FormsModule, ReactiveFormsModule, RouterModule, CommonModule],\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.scss']\n})\nexport class CategoriasComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private fb = inject(FormBuilder);\n  private postCategoryService = inject(PostCategoryService);\n  private postService = inject(PostService);\n  private userService = inject(UserService);\n  private reportService = inject(ReportService);\n  private scoreService = inject(ScoreService);\n\n  slug = '';\n  categoriaId: number | null = null;\n  categoriaNombre = '';\n  nombreCategoriaMostrada = '';\n  publicaciones: Post[] = [];\n  nombresUsuarios: Record = {};\n  promedioScores: Record = {};\n  misScores: Record = {};\n  filtroBusqueda = '';\n  form!: FormGroup;\n  mostrarFormulario = false;\n  loading = true;\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      content: ['', Validators.required]\n    });\n\n    this.slug = this.route.snapshot.paramMap.get('slug') || '';\n\n    this.postCategoryService.getAll().subscribe(categories => {\n      const categoria = categories.find(cat =>\n        this.getSlugFromName(cat.name) === this.slug\n      );\n\n\n      if (!categoria) {\n        this.router.navigate(['/dashboard']);\n        return;\n      }\n\n      this.categoriaId = categoria.idCategory;\n      this.categoriaNombre = categoria.name;\n      this.nombreCategoriaMostrada = categoria.name;\n\n      this.cargarPublicaciones();\n    });\n  }\n\n  cargarPublicaciones(): void {\n    if (!this.categoriaId) return;\n\n    this.loading = true;\n    this.postService.getAll(this.categoriaId).subscribe(posts => {\n      this.publicaciones = posts;\n      this.loading = false;\n\n      const ids = [...new Set(posts.map(p => p.idUser))];\n      ids.forEach(id => {\n        this.userService.getUserById(id).subscribe(user => {\n          this.nombresUsuarios[id] = user.name;\n        });\n      });\n\n      const idUser = this.userService.getIdUser();\n      if (idUser) {\n        this.scoreService.getResumenScores(idUser, this.categoriaId ?? undefined).subscribe(resumenes => {\n          resumenes.forEach(r => {\n            this.promedioScores[r.idPost] = r.promedio;\n            this.misScores[r.idPost] = r.miScore;\n          });\n        });\n      }\n    });\n  }\n\n  get publicacionesFiltradas(): Post[] {\n    if (!this.filtroBusqueda.trim()) return this.publicaciones;\n    const texto = this.filtroBusqueda.trim().toLowerCase();\n    return this.publicaciones.filter(pub =>\n      pub.title.toLowerCase().includes(texto) ||\n      pub.content.toLowerCase().includes(texto)\n    );\n  }\n\n  toggleFormulario(): void {\n    this.mostrarFormulario = !this.mostrarFormulario;\n    if (!this.mostrarFormulario) this.form.reset();\n  }\n\n  nuevaPublicacion(): void {\n    if (this.form.invalid || !this.categoriaId) return;\n\n    const idUser = this.userService.getIdUser();\n    if (!idUser) {\n      alert('No se pudo obtener el ID del usuario.');\n      return;\n    }\n\n    const nueva = {\n      title: this.form.value.title,\n      content: this.form.value.content,\n      idCategory: this.categoriaId,\n      idUser: idUser,\n      createdDate: new Date().toISOString()\n    };\n\n    this.postService.createPost(nueva).subscribe({\n      next: () => {\n        this.cargarPublicaciones();\n        this.form.reset();\n        this.mostrarFormulario = false;\n        alert('¡Publicación creada con éxito!');\n      },\n      error: err => {\n        console.error('Error al crear publicación:', err);\n        alert('Error al publicar');\n      }\n    });\n  }\n\n  reportarPublicacion(pub: Post): void {\n    this.reportService.reportPost(pub.idPost, 'Contenido inapropiado').subscribe(() => {\n      alert('Publicación reportada');\n    });\n  }\n\n  getSlugFromName(name: string): string {\n    switch (name.toLowerCase()) {\n      case 'ayudantías académicas':\n        return 'ayudantias';\n      case 'actividades deportivas':\n        return 'deportes';\n      case 'culturales y recreativas':\n        return 'culturales';\n      case 'voluntariado - ecoduoc':\n        return 'voluntariado';\n      case 'trueques estudiantiles':\n        return 'trueques';\n      default:\n        return 'otros';\n    }\n  }\n\n  calificar(pub: Post, valor: number): void {\n    const idUser = this.userService.getIdUser();\n    if (!idUser) return;\n\n    this.scoreService.setScore({ idPost: pub.idPost, idUser, score: valor }).subscribe(() => {\n      this.misScores[pub.idPost] = valor;\n      this.scoreService.getAverageScore(pub.idPost).subscribe(avg => {\n        this.promedioScores[pub.idPost] = avg;\n      });\n    });\n  }\n\n\n}\n\n    \n\n    \n        \n    \n\n    \n        {{ nombreCategoriaMostrada }}\n        \n            \n            {{ mostrarFormulario ? 'Cancelar' : 'Publicar' }}\n        \n    \n    \n        Aquí puedes compartir tus dudas, preguntas o temas relacionados con {{ nombreCategoriaMostrada\n        }}. ¡Sé parte de la comunidad!\n    \n    \n        Recuerda: Sé respetuoso y sigue las normas de la comunidad. Las publicaciones inapropiadas\n        pueden ser eliminadas.\n    \n\n    @if (!publicaciones.length) {\n    \n        Aún no hay publicaciones en esta categoría. Sé el primero en compartir una 💡\n    \n    }\n\n    @if (mostrarFormulario) {\n    \n        \n            Título\n            \n        \n        \n            Descripción\n            \n        \n        \n            Publicar\n        \n    \n    }\n\n    @if (publicaciones.length) {\n    \n        \n    \n\n    \n        \n\n            \n                \n\n                \n                    {{ pub.title }}\n                    \n                        por {{ nombresUsuarios[pub.idUser] || 'Cargando...' }} • {{ pub.createdDate | date:'dd/MM/yyyy'\n                        }}\n                    \n                    \n                        {{ pub.content }}\n                    \n                    \n                    \n\n                        \n                        \n                            = s,\n                            'far text-muted': (misScores[pub.idPost] ?? 0) \n                        \n\n                        \n                        \n                            {{ promedioScores[pub.idPost] | number:'1.1-1' }} / 5\n                        \n\n                        \n                        \n                            \n                        \n                    \n\n\n                \n            \n\n        \n    \n\n    }\n\n    \n\n    \n                \n                    ./categorias.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n/* CONTENEDOR GENERAL */\n.foro-categoria-container {\n    //background-color: $gris;\n    border-radius: 1rem;\n    padding: 2rem;\n\n    .cabecera-categoria {\n        background-color: white;\n        padding: 1.5rem;\n        border-radius: 1rem;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n        margin-bottom: 2rem;\n    }\n\n    .titulo-categoria {\n        font-size: 2.25rem;\n        font-weight: 700;\n        color: $negro;\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 80px;\n            height: 3px;\n            background-color: $amarillo;\n            border-radius: 4px;\n        }\n    }\n}\n\n/* Formulario de publicación */\nform {\n    background-color: $blanco;\n    padding: 2rem;\n    border-radius: 1rem;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.06);\n\n    label {\n        font-weight: 600;\n    }\n\n    input,\n    textarea {\n        border-radius: 0.75rem;\n        padding: 0.75rem 1rem;\n        border: 1px solid #ced4da;\n    }\n\n    button {\n        margin-top: 1rem;\n        border-radius: 0.75rem;\n        font-size: 1rem;\n    }\n}\n\n/* Tabla de publicaciones */\n.card {\n    transition: transform 0.2s ease;\n    position: relative;\n\n    &:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n    }\n\n    .stretched-link {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n\n    .btn,\n    .badge,\n    .card-body * {\n        position: relative;\n        z-index: 3;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ nombreCategoriaMostrada }}                                {{ mostrarFormulario ? \\'Cancelar\\' : \\'Publicar\\' }}                        Aquí puedes compartir tus dudas, preguntas o temas relacionados con {{ nombreCategoriaMostrada        }}. ¡Sé parte de la comunidad!                Recuerda: Sé respetuoso y sigue las normas de la comunidad. Las publicaciones inapropiadas        pueden ser eliminadas.        @if (!publicaciones.length) {            Aún no hay publicaciones en esta categoría. Sé el primero en compartir una 💡        }    @if (mostrarFormulario) {                        Título                                        Descripción                                        Publicar                }    @if (publicaciones.length) {                                                                                            {{ pub.title }}                                            por {{ nombresUsuarios[pub.idUser] || \\'Cargando...\\' }} • {{ pub.createdDate | date:\\'dd/MM/yyyy\\'                        }}                                                                {{ pub.content }}                                                                                                                                        = s,                            \\'far text-muted\\': (misScores[pub.idPost] ?? 0)                                                                                                     {{ promedioScores[pub.idPost] | number:\\'1.1-1\\' }} / 5                                                                                                                                                                                            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un comentario realizado por un usuario en una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            idComment\n                                        \n                                \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido del comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha en que se realizó el comentario (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idComment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación a la que pertenece el comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que escribió el comentario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/comment.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar los comentarios en las publicaciones de ConectaDuoc.\nPermite obtener, crear, editar y eliminar comentarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getByPostId\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(comment: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo comentario en una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                comment\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Comment sin idComment ni date, que serán generados por el backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Comentario creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(idComment: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Elimina un comentario por su ID.\n(Requiere permisos adecuados).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByPostId\n                        \n                    \n                \n            \n            \n                \ngetByPostId(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los comentarios asociados a una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de comentarios.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idComment: number, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Actualiza el contenido de un comentario existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario.\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo contenido del comentario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Comentario actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/comment'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/comment.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para comentarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/comment.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Comment } from '../../models/post';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar los comentarios en las publicaciones de ConectaDuoc.\n * Permite obtener, crear, editar y eliminar comentarios.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n  /** URL base del API para comentarios */\n  private apiUrl = 'http://localhost:9090/api/comment';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todos los comentarios asociados a una publicación.\n   * @param idPost ID de la publicación.\n   * @returns Lista de comentarios.\n   */\n  getByPostId(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}?idPost=${idPost}`);\n  }\n\n  /**\n   * Crea un nuevo comentario en una publicación.\n   * @param comment Objeto `Comment` sin `idComment` ni `date`, que serán generados por el backend.\n   * @returns Comentario creado.\n   */\n  create(comment: Omit): Observable {\n    return this.http.post(this.apiUrl, comment);\n  }\n\n  /**\n   * Elimina un comentario por su ID.\n   * (Requiere permisos adecuados).\n   * @param idComment ID del comentario a eliminar.\n   */\n  delete(idComment: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${idComment}`);\n  }\n\n  /**\n   * Actualiza el contenido de un comentario existente.\n   * @param idComment ID del comentario.\n   * @param content Nuevo contenido del comentario.\n   * @returns Comentario actualizado.\n   */\n  update(idComment: number, content: string): Observable {\n    return this.http.put(`${this.apiUrl}/${idComment}`, { content });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfiguracionComponent.html":{"url":"components/ConfiguracionComponent.html","title":"component - ConfiguracionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfiguracionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/configuracion.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuracion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                                BreadcrumbComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./configuracion.component.html\n            \n\n\n\n            \n                styleUrl\n                ./configuracion.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-configuracion',\n  standalone: true,\n  imports: [CommonModule, RouterModule, BreadcrumbComponent],\n  templateUrl: './configuracion.component.html',\n  styleUrl: './configuracion.component.scss'\n})\nexport class ConfiguracionComponent {\n\n}\n\n    \n\n    \n        \n    \n    Panel de Configuración\n    Administra los aspectos generales de la plataforma\n\n    \n        \n            \n                \n                    \n                        \n                    \n                    Usuarios\n                    Administrar usuarios de la plataforma\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    Categorías\n                    Gestionar categorías de publicaciones\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Panel de Configuración    Administra los aspectos generales de la plataforma                                                                                                                            Usuarios                    Administrar usuarios de la plataforma                                                                                                                                                            Categorías                    Gestionar categorías de publicaciones                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfiguracionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconForCategory\n                            \n                            \n                                getRouteForCategory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIconForCategory\n                        \n                    \n                \n            \n            \n                \ngetIconForCategory(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRouteForCategory\n                        \n                    \n                \n            \n            \n                \ngetRouteForCategory(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../core/services/user.service';\nimport { RouterModule } from '@angular/router';\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { PostCategory } from '../../models/postCategory';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  private userService = inject(UserService);\n  private postCategoryService = inject(PostCategoryService);\n\n  categories: (PostCategory & { icono: string; ruta: string; colorClass?: string; adminOnly?: boolean })[] = [];\n  username: string | null = null;\n  role: string | null = null;\n\n  ngOnInit(): void {\n    this.username = this.userService.getName() || this.userService.getAzureUser()?.fullName || this.userService.getAzureUser()?.email || 'Desconocido';\n    this.role = this.userService.getRole();\n\n    this.postCategoryService.getAll().subscribe(categories => {\n      this.categories = categories\n        .filter(cat => {\n          if (!cat.status) return false;\n\n          const nombre = cat.name.toLowerCase();\n          if (nombre === 'reportes' || nombre === 'panel de configuración') {\n            return this.role === 'admin';\n          }\n\n          return true;\n        })\n        .map(cat => ({\n          ...cat,\n          icono: this.getIconForCategory(cat.name),\n          ruta: this.getRouteForCategory(cat.name)\n        }));\n    });\n  }\n\n  getIconForCategory(name: string): string {\n    switch (name.toLowerCase()) {\n      case 'ayudantías académicas':\n        return 'fas fa-book-open';\n      case 'actividades deportivas':\n        return 'fas fa-futbol';\n      case 'culturales y recreativas':\n        return 'fas fa-theater-masks';\n      case 'voluntariado - ecoduoc':\n        return 'fas fa-leaf';\n      case 'trueques estudiantiles':\n        return 'fas fa-exchange-alt';\n      case 'panel de configuración':\n        return 'fas fa-cog';\n      case 'reportes':\n        return 'fas fa-chart-bar';\n      default:\n        return 'fas fa-asterisk';\n    }\n  }\n\n  getRouteForCategory(name: string): string {\n    switch (name.toLowerCase()) {\n      case 'ayudantías académicas':\n        return '/categoria/ayudantias';\n      case 'actividades deportivas':\n        return '/categoria/deportes';\n      case 'culturales y recreativas':\n        return '/categoria/culturales';\n      case 'voluntariado - ecoduoc':\n        return '/categoria/voluntariado';\n      case 'trueques estudiantiles':\n        return '/categoria/trueques';\n      case 'reportes':\n        return '/dashboard/reportes';\n      case 'panel de configuración':\n        return '/dashboard/configuracion';\n      default:\n        return '/dashboard';\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Participa en la comunidad DUOC\n  \n  \n    Explora las categorías disponibles y únete a la conversación.\n    ¡Tu participación es clave para construir una\n    comunidad vibrante!\n  \n    @for (cat of categories; track cat) {\n    \n      @if (!cat.adminOnly || role === 'admin') {\n      \n        \n          \n            \n          \n          {{ cat.name }}\n          {{ cat.description }}\n        \n      \n      }\n    \n    }\n  \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.categoria-card {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    border: 1px solid color.adjust($gris, $lightness: 25%);\n    background-color: $blanco;\n    color: $negro;\n\n    &:hover {\n        transform: scale(1.03);\n        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n        border-color: $amarillo;\n    }\n\n    .card-body {\n        padding: 2rem 1rem;\n    }\n\n    i {\n        color: $amarillo;\n    }\n\n    .card-title {\n        color: $negro;\n    }\n\n    .card-text {\n        color: $gris;\n    }\n}\n\n.titulo-modern {\n    font-family: 'Poppins', sans-serif;\n    font-size: 2.5rem;\n    font-weight: 700;\n    color: $negro;\n    text-transform: uppercase;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    margin-bottom: 2rem;\n    animation: fadeInUp 0.6s ease-out;\n\n    @keyframes fadeInUp {\n        from {\n            opacity: 0;\n            transform: translateY(20px);\n        }\n\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    .highlight {\n        color: $amarillo;\n    }\n\n    strong {\n        color: $azul;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Participa en la comunidad DUOC        Explora las categorías disponibles y únete a la conversación.    ¡Tu participación es clave para construir una    comunidad vibrante!      @for (cat of categories; track cat) {          @if (!cat.adminOnly || role === \\'admin\\') {                                                        {{ cat.name }}          {{ cat.description }}                    }        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetalleComponent.html":{"url":"components/DetalleComponent.html","title":"component - DetalleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetalleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categorias/detalle/detalle.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detalle\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                                BreadcrumbComponent\n                \n            \n\n            \n                styleUrls\n                ./detalle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detalle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comentarioForm\n                            \n                            \n                                comments\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                estrellas\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                miScore\n                            \n                            \n                                nombreAutor\n                            \n                            \n                                post\n                            \n                            \n                                postingComment\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                promedio\n                            \n                            \n                                    Private\n                                reportService\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calificar\n                            \n                            \n                                comentar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reportarComentario\n                            \n                            \n                                reportarPublicacion\n                            \n                            \n                                volver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calificar\n                        \n                    \n                \n            \n            \n                \ncalificar(valor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comentar\n                        \n                    \n                \n            \n            \n                \ncomentar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarComentario\n                        \n                    \n                \n            \n            \n                \nreportarComentario(com: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                com\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarPublicacion\n                        \n                    \n                \n            \n            \n                \nreportarPublicacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volver\n                        \n                    \n                \n            \n            \n                \nvolver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comentarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estrellas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [1, 2, 3, 4, 5]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        miScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreAutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Autor desconocido'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n/* MODELS */\nimport { Post, Comment } from '../../../models/post';\n\n/* SERVICES */\nimport { PostService } from '../../../core/services/post.service';\nimport { UserService } from '../../../core/services/user.service';\nimport { ScoreService } from '../../../core/services/score.service';\nimport { ReportService } from '../../../core/services/report.service';\nimport { CommentService } from '../../../core/services/comment.service';\n\n/* BreadCrumb */\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-detalle',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, BreadcrumbComponent],\n  templateUrl: './detalle.component.html',\n  styleUrls: ['./detalle.component.scss']\n})\nexport class DetalleComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private postService = inject(PostService);\n  private commentService = inject(CommentService);\n  private userService = inject(UserService);\n  private reportService = inject(ReportService);\n  private scoreService = inject(ScoreService);\n  private fb = inject(FormBuilder);\n\n  post: Post | undefined;\n  comments: Comment[] = [];\n  comentarioForm!: FormGroup;\n  loading = true;\n  postingComment = false;\n  promedio = 0;\n  miScore: number | null = null;\n  estrellas = [1, 2, 3, 4, 5];\n  nombreAutor: string = 'Autor desconocido';\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (!id) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.comentarioForm = this.fb.group({\n      content: ['', [Validators.required, Validators.maxLength(300)]]\n    });\n\n    this.postService.sumarVisualizacion(id).subscribe();\n\n    this.postService.getById(id).subscribe({\n      next: (post) => {\n        this.post = post;\n        document.title = `ConectaDuoc | ${post.title}`;\n\n        this.scoreService.getAverageScore(post.idPost).subscribe(avg => {\n          this.promedio = avg;\n        });\n        const idUser = this.userService.getIdUser();\n        if (idUser) {\n          this.scoreService.getUserScore(post.idPost, idUser).subscribe(score => {\n            this.miScore = score ? score.score : null;\n          });\n        }\n\n        this.userService.getUserById(post.idUser).subscribe({\n          next: (user) => {\n            this.nombreAutor = user.name;\n          },\n          error: () => {\n            this.nombreAutor = 'Autor desconocido';\n          }\n        });\n\n        this.commentService.getByPostId(post.idPost).subscribe(comments => {\n          this.comments = comments;\n          this.loading = false;\n        });\n      },\n      error: () => {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n\n  }\n\n  comentar(): void {\n    if (!this.post || this.comentarioForm.invalid || this.postingComment) return;\n\n    const nuevoComentario: Omit = {\n      idPost: this.post.idPost,\n      idUser: this.userService.getAzureUser()?.email || 'anónimo',\n      content: this.comentarioForm.value.content\n    };\n\n    this.postingComment = true;\n    this.commentService.create(nuevoComentario).subscribe({\n      next: (comentario) => {\n        this.comments.push(comentario);\n        this.comentarioForm.reset();\n        this.postingComment = false;\n      },\n      error: () => {\n        this.postingComment = false;\n      }\n    });\n  }\n\n  reportarPublicacion(): void {\n    if (this.post) {\n      this.reportService.reportPost(this.post.idPost, 'Contenido inapropiado').subscribe(() => {\n        alert('Publicación reportada');\n      });\n    }\n  }\n\n  reportarComentario(com: Comment): void {\n    this.reportService.reportComment(com.idComment, 'Comentario inapropiado').subscribe(() => {\n      alert('Comentario reportado');\n    });\n  }\n\n  volver(): void {\n    const slug = this.route.snapshot.paramMap.get('slug') || 'dashboard';\n    this.router.navigate(['/categoria', slug]);\n  }\n\n  calificar(valor: number): void {\n    if (!this.post) return;\n    const idUser = this.userService.getIdUser();\n    if (!idUser) return;\n\n    this.scoreService.setScore({ idPost: this.post.idPost, idUser, score: valor }).subscribe(() => {\n      this.miScore = valor;\n      this.scoreService.getAverageScore(this.post!.idPost).subscribe(avg => {\n        this.promedio = avg;\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n    \n        \n            {{ post?.title }}\n        \n        \n            \n                \n            \n            \n                ← Volver\n            \n        \n    \n\n    \n    @if (post) {\n    \n        \n            {{ post.content }}\n        \n        \n            {{ nombreAutor }}\n            \n                \n                    = s, 'far text-muted': (miScore ?? 0) \n                \n                {{ promedio | number:'1.1-1' }} promedio\n            \n            {{ post.createdDate | date: 'fullDate' }}\n        \n    \n    }\n\n    \n    \n        \n            Comentarios\n        \n\n        \n            @if (comments && comments.length > 0) {\n            \n                @for (com of comments; track com) {\n                \n                    \n                    \n                        {{ com.idUser.charAt(0).toUpperCase() }}\n                    \n\n                    \n                    \n                        \n                            {{ com.idUser }}\n                            {{ com.date | date:'dd/MM/yyyy HH:mm' }}\n                        \n                        {{ com.content }}\n                        \n                            \n                        \n                    \n                \n                }\n            \n            } @else {\n            \n                No hay comentarios todavía. ¡Sé el primero en participar!\n            \n            }\n        \n\n        \n            \n                \n                    \n                    \n                        Enviar\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./detalle.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-principal {\n    font-size: 2.25rem;\n    font-weight: 700;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        position: absolute;\n        bottom: -8px;\n        left: 0;\n        width: 60px;\n        height: 4px;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n\n.card-post {\n    background-color: #fff;\n    border-radius: 1.25rem;\n    padding: 2rem;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 2rem;\n    border: none;\n\n    .card-body {\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        color: #444;\n    }\n\n    .card-footer {\n        font-size: 0.875rem;\n        color: #888;\n        border-top: 1px solid #eee;\n        padding-top: 0.75rem;\n        margin-top: 1rem;\n    }\n}\n\n.card-comentarios {\n    border-radius: 1.25rem;\n    border: none;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.04);\n    background-color: #fff;\n\n    .avatar {\n        width: 36px;\n        height: 36px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: bold;\n    }\n\n    .comentario:hover {\n        background-color: #f9f9f9;\n    }\n\n    .card-header {\n        border-bottom: 1px solid #eee;\n        background-color: transparent;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .comentario {\n        border-bottom: 1px solid #f0f0f0;\n        padding: 0.75rem 0;\n\n        .autor {\n            font-weight: 600;\n            color: #333;\n        }\n\n        .fecha {\n            font-size: 0.8rem;\n            color: #999;\n        }\n\n        .contenido {\n            font-size: 0.95rem;\n            margin: 0.25rem 0;\n        }\n    }\n\n    .alert-info {\n        background-color: #f0f8ff;\n        color: #555;\n        border: none;\n        border-radius: 0.75rem;\n        padding: 1rem;\n    }\n}\n\n.card-footer form {\n    background-color: #fafafa;\n    border-radius: 0.75rem;\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n\n    .form-control {\n        border: none;\n        box-shadow: none;\n        border-radius: 0.75rem 0 0 0.75rem;\n    }\n\n    .btn {\n        border-radius: 0 0.75rem 0.75rem 0;\n        font-weight: 600;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ post?.title }}                                                                                    ← Volver                                @if (post) {                        {{ post.content }}                            {{ nombreAutor }}                                                = s, \\'far text-muted\\': (miScore ?? 0)                                 {{ promedio | number:\\'1.1-1\\' }} promedio                        {{ post.createdDate | date: \\'fullDate\\' }}                }                            Comentarios                            @if (comments && comments.length > 0) {                            @for (com of comments; track com) {                                                                                {{ com.idUser.charAt(0).toUpperCase() }}                                                                                                                {{ com.idUser }}                            {{ com.date | date:\\'dd/MM/yyyy HH:mm\\' }}                                                {{ com.content }}                                                                                                                                }                        } @else {                            No hay comentarios todavía. ¡Sé el primero en participar!                        }                                                                                                            Enviar                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetalleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n  currentYear: number = new Date().getFullYear();\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                MESA DE SERVICIOS\n                WhatsApp:\n                    \n                        +56 9 3663 9565\n                    \n                \n                \n                    Servicios Académicos\n                    Servicios de Financiamiento\n                    Servicios de Vida Estudiantil\n                    Servicios Tecnológicos\n                    Otros Servicios\n                \n                Teléfonos:\n                (+56) 442 201 098 —\n                (+56) 227 120 245\n            \n\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                \n\n                \n                \n                    \n                \n\n                \n                \n                    © 2025 Conecta-DUOC.\n                    Todos los derechos reservados.\n                    Desarrollado con cariño por JP DEV\n                    \n                        \n                            Ver Reglas de la Comunidad\n                        \n                    \n                \n            \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    MESA DE SERVICIOS                WhatsApp:                                            +56 9 3663 9565                                                                        Servicios Académicos                    Servicios de Financiamiento                    Servicios de Vida Estudiantil                    Servicios Tecnológicos                    Otros Servicios                                Teléfonos:                (+56) 442 201 098 —© 2025 Conecta-DUOC.                    Todos los derechos reservados.                    Desarrollado con cariño por JP DEV                                                                        Ver Reglas de la Comunidad                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forbidden/forbidden.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forbidden.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  imports: [],\n  templateUrl: './forbidden.component.html',\n  styleUrl: './forbidden.component.scss'\n})\nexport class ForbiddenComponent {\n\n}\n\n    \n\n    \n        forbidden works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'forbidden works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkAndRedirect\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAndRedirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndRedirect(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario existe en la BD, si no existe lo fuerza a registrarse,\ny si existe revisa si aceptó políticas para redirigirlo correctamente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Conecta-DUOC'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  private msalService = inject(MsalService);\n  private router = inject(Router);\n  private userService = inject(UserService);\n\n  title = 'Conecta-DUOC';\n  isLoggedIn = false;\n\n  ngOnInit(): void {\n    const account = this.msalService.instance.getActiveAccount();\n    this.isLoggedIn = !!account;\n\n    if (account) {\n      this.checkAndRedirect(account.username);\n    }\n  }\n\n  login() {\n    this.msalService.loginPopup().subscribe({\n      next: () => {\n        const account = this.msalService.instance.getAllAccounts()[0];\n        this.msalService.instance.setActiveAccount(account);\n\n        this.isLoggedIn = true;\n\n        if (account) {\n          this.checkAndRedirect(account.username);\n        } else {\n          this.isLoggedIn = false;\n        }\n      },\n      error: (error) => {\n        console.error('Login error:', error);\n        this.isLoggedIn = false;\n      },\n    });\n  }\n\n\n  logout() {\n    this.msalService.logoutPopup().subscribe({\n      next: () => {\n        this.isLoggedIn = false;\n        this.userService.clearRole();\n        this.router.navigate(['/']);\n      },\n      error: (error) => {\n        console.error('Logout error:', error);\n      },\n    });\n  }\n\n  /**\n   * Verifica si el usuario existe en la BD, si no existe lo fuerza a registrarse,\n   * y si existe revisa si aceptó políticas para redirigirlo correctamente.\n   */\n  private checkAndRedirect(email: string) {\n    this.userService.checkUserExists(email).subscribe({\n      next: (exists) => {\n        //console.log('Existe usuario?', exists);\n\n        if (exists) {\n          this.userService.getUser(email).subscribe({\n            next: (user: User) => {\n              this.userService.setRole(user.role || 'student');\n              this.userService.setName(user.name);\n\n              if (user.idUser !== undefined && user.idUser !== null) {\n                this.userService.setIdUser(user.idUser);\n              }\n\n              if (user.policies === 1) {\n                this.router.navigate(['/dashboard']);\n              } else {\n                this.router.navigate(['/reglas-de-la-comunidad']);\n              }\n            },\n            error: err => {\n              console.error('Error al traer usuario:', err);\n            }\n          });\n        }\n\n        else {\n          console.log('Redirijo a registro');\n          this.router.navigate(['/registro']);\n        }\n      },\n      error: (err) => {\n        console.error('Error validando usuario:', err);\n        this.logout();\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n        \n      \n      ConectaDuoc\n    \n\n    \n    \n      Plataforma de colaboración estudiantil DUOC UC\n      @if (!isLoggedIn) {\n        \n          Iniciar Sesión\n        \n      }\n      @if (isLoggedIn) {\n        \n          Cerrar Sesión\n        \n      }\n    \n\n\n    \n      © 2025 Conecta-DUOC. Todos los derechos reservados.\n      Desarrollado por JP DEV\n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n// CONTENEDOR PRINCIPAL LOGIN\n.login-container {\n    background-color: $negro;\n    padding: 2rem;\n}\n\n// TARJETA LOGIN\n.login-card {\n    width: 100%;\n    max-width: 400px;\n    border: none;\n    background-color: $blanco;\n    border-radius: 1rem;\n    overflow: hidden;\n\n    .card-header {\n        background-color: $amarillo;\n        padding: 2rem 1rem;\n\n        .logo-wrapper {\n            background-color: $blanco;\n            padding: 0.5rem;\n            border-radius: 50%;\n            display: inline-block;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        .logo {\n            width: 90px;\n            height: auto;\n        }\n\n        .titulo {\n            color: $negro;\n            font-weight: bold;\n            margin: 0;\n            font-size: 1.5rem;\n        }\n    }\n\n    .card-body {\n        padding: 2rem 1.5rem;\n\n        button {\n            font-weight: bold;\n            padding: 0.75rem;\n            font-size: 1rem;\n\n            &.btn-warning {\n                background-color: $amarillo;\n                color: $negro;\n\n                &:hover {\n                    background-color: color.adjust($amarillo, $lightness: 10%);\n                }\n            }\n\n            &.btn-outline-light {\n                border-color: $gris;\n                color: $gris;\n\n                &:hover {\n                    background-color: $gris;\n                    color: $blanco;\n                }\n            }\n        }\n    }\n\n    .card-footer {\n        background-color: transparent;\n        padding: 1rem 1.5rem;\n    }\n}\n\n// CLASES GLOBALES (NO ANIDADAS)\n.bg-amarillo {\n    background-color: #f4b942;\n}\n\n.titulo {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #000;\n}\n\n.logo {\n    height: 48px;\n    width: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      ConectaDuoc                  Plataforma de colaboración estudiantil DUOC UC      @if (!isLoggedIn) {                  Iniciar Sesión              }      @if (isLoggedIn) {                  Cerrar Sesión              }              © 2025 Conecta-DUOC. Todos los derechos reservados.      Desarrollado por JP DEV      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalConfirmacionComponent.html":{"url":"components/ModalConfirmacionComponent.html","title":"component - ModalConfirmacionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalConfirmacionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/modal-confirmacion/modal-confirmacion.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-confirmacion\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./modal-confirmacion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-confirmacion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mensaje\n                            \n                            \n                                titulo\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelar\n                            \n                            \n                                confirmar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mensaje\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titulo\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '¿Estás seguro?'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelar\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmar\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-modal-confirmacion',\n  standalone: true,\n  imports: [],\n  templateUrl: './modal-confirmacion.component.html',\n  styleUrls: ['./modal-confirmacion.component.scss']\n})\nexport class ModalConfirmacionComponent {\n  @Input() titulo = '¿Estás seguro?';\n  @Input() mensaje = '';\n  @Input() visible = false;\n\n  @Output() confirmar = new EventEmitter();\n  @Output() cancelar = new EventEmitter();\n}\n\n    \n\n    \n        @if (visible) {\n  \n    \n      {{ titulo }}\n      {{ mensaje }}\n      \n        Cancelar\n        Sí, cerrar sesión\n      \n    \n  \n}\n    \n\n    \n                \n                    ./modal-confirmacion.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n\n    .modal-box {\n        background-color: $blanco;\n        border-radius: 16px;\n        padding: 2rem;\n        max-width: 400px;\n        width: 90%;\n        text-align: center;\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n\n        h2 {\n            font-size: 1.5rem;\n            color: $negro;\n            margin-bottom: 1rem;\n        }\n\n        p {\n            color: $gris;\n            font-size: 1rem;\n            margin-bottom: 2rem;\n        }\n\n        .acciones {\n            display: flex;\n            justify-content: center;\n            gap: 1rem;\n            flex-wrap: wrap;\n\n            .btn {\n                min-width: 140px;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (visible) {            {{ titulo }}      {{ mensaje }}              Cancelar        Sí, cerrar sesión            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalConfirmacionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                                ModalConfirmacionComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarModalLogout\n                            \n                            \n                                    Private\n                                msal\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                username\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelarLogout\n                            \n                            \n                                confirmarLogout\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarLogout\n                        \n                    \n                \n            \n            \n                \ncancelarLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarLogout\n                        \n                    \n                \n            \n            \n                \nconfirmarLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarModalLogout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { RouterLink } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { MsalService } from '@azure/msal-angular';\nimport { ModalConfirmacionComponent } from '../../shared/modal-confirmacion/modal-confirmacion.component';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterLink, ModalConfirmacionComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  private userService = inject(UserService);\n  private router = inject(Router);\n  private msal = inject(MsalService);\n\n  username: string | null = null;\n  mostrarModalLogout = false;\n\n  ngOnInit(): void {\n    // Mostrar en consola todos los datos del usuario activo de Azure AD\n    const account = this.msal.instance.getActiveAccount();\n    //if (account) {\n      //console.log('ACCOUNT:', account);\n      //console.log('ID TOKEN CLAIMS:', account.idTokenClaims);\n    //}\n\n    // Obtener el nombre de usuario desde el servicio UserService\n    this.username =\n      this.userService.getName() ||\n      this.userService.getAzureUser()?.fullName ||\n      this.userService.getAzureUser()?.email ||\n      null;\n  }\n\n  logout() {\n    this.mostrarModalLogout = true;\n  }\n\n  confirmarLogout() {\n    this.msal.logoutPopup().subscribe({\n      next: () => {\n        this.userService.clearRole();\n        // Si limpias más datos en logout, hazlo aquí\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  cancelarLogout() {\n    this.mostrarModalLogout = false;\n  }\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                \n            \n            ConectaDuoc\n        \n\n        \n            \n                \n                {{ username }}\n            \n            \n                 Mi Perfil\n            \n            \n                 Cerrar sesión\n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.navbar {\n    background-color: $negro;\n    color: $blanco;\n    padding: 1rem 2rem;\n\n    .logo-wrapper {\n        background-color: $blanco;\n        padding: 0.35rem;\n        border-radius: 50%;\n        display: inline-block;\n        box-shadow: 0 2px 4px rgba(255, 255, 255, 0.15);\n    }\n\n    .logo {\n        height: 45px;\n        width: auto;\n    }\n\n    .titulo {\n        font-weight: bold;\n        color: $amarillo;\n        font-size: 1.25rem;\n    }\n\n    .usuario {\n        font-size: 0.95rem;\n        color: $blanco;\n    }\n\n    button {\n        background-color: $amarillo;\n        border: none;\n        color: $negro;\n        font-weight: bold;\n\n        &:hover {\n            background-color: color.adjust($amarillo, $lightness: 10%);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                ConectaDuoc                                                            {{ username }}                                         Mi Perfil                                         Cerrar sesión                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/perfil/perfil.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                BreadcrumbComponent\n                            RouterModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./perfil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                posts\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                sede\n                            \n                            \n                                sedes\n                            \n                            \n                                totalComments\n                            \n                            \n                                totalPosts\n                            \n                            \n                                user\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cargarPublicaciones\n                            \n                            \n                                editar\n                            \n                            \n                                getUserInitial\n                            \n                            \n                                guardarSede\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPublicaciones\n                        \n                    \n                \n            \n            \n                \ncargarPublicaciones(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(post: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitial\n                        \n                    \n                \n            \n            \n                \ngetUserInitial()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardarSede\n                        \n                    \n                \n            \n            \n                \nguardarSede()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sede\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalComments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n\n/* BreadCrumb */\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n/* Services */\nimport { UserService } from '../../core/services/user.service';\nimport { PostService } from '../../core/services/post.service';\nimport { CommentService } from '../../core/services/comment.service';\nimport { PostCategoryService } from '../../core/services/post-category.service';\n\n/* Models */\nimport { User } from '../../models/user';\nimport { Post } from '../../models/post';\nimport { PostCategory } from '../../models/postCategory';\n\n@Component({\n  selector: 'app-perfil',\n  standalone: true,\n  imports: [CommonModule, BreadcrumbComponent, RouterModule, FormsModule],\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n  private userService = inject(UserService);\n  private postService = inject(PostService);\n  private router = inject(Router);\n  private commentService = inject(CommentService);\n  private postCategoryService = inject(PostCategoryService);\n\n  user: User | null = null;\n  posts: Post[] = [];\n  categories: PostCategory[] = [];\n  sede = '';\n  sedes: string[] = [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ];\n\n  totalPosts = 0;\n  totalComments = 0;\n\n  ngOnInit(): void {\n    const email = this.userService.getAzureUser()?.email || this.userService.getName();\n    if (!email) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.postCategoryService.getAll().subscribe(cats => (this.categories = cats));\n\n    this.userService.getUser(email).subscribe(user => {\n      this.user = user;\n      this.sede = user.center;\n      if (user.idUser !== undefined) {\n        this.cargarPublicaciones(user.idUser);\n      }\n    });\n  }\n\n  cargarPublicaciones(idUser: number): void {\n    this.postService.getAll().subscribe(posts => {\n      this.posts = posts.filter(p => p.idUser === idUser);\n      this.totalPosts = this.posts.length;\n\n      const commentRequests = this.posts.map(p => this.commentService.getByPostId(p.idPost));\n      if (commentRequests.length) {\n        forkJoin(commentRequests).subscribe(all => {\n          this.totalComments = all.reduce((acc, arr) => acc + arr.length, 0);\n        });\n      } else {\n        this.totalComments = 0;\n      }\n    });\n  }\n\n  getUserInitial(): string {\n    return this.user?.name ? this.user.name.charAt(0).toUpperCase() : '?';\n  }\n\n  guardarSede(): void {\n    if (this.user) {\n      const updatedUser = { ...this.user, center: this.sede };\n      this.userService.registerUser(updatedUser).subscribe(() => {\n      });\n    }\n  }\n\n  editar(post: Post): void {\n    this.router.navigate(['/dashboard/ayudantias', post.idPost], { state: { editar: post } });\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n    \n      {{ getUserInitial() }}\n    \n    \n      {{ user?.name || 'Mi Perfil' }}\n      Correo: {{ user?.email }}\n      Rol: {{ user?.role }}\n      \n        Sede:\n        \n          @for (s of sedes; track s) {\n          {{ s }}\n          }\n        \n      \n    \n\n    \n      \n         Editar Perfil\n      \n    \n     -->\n\n  \n\n  \n  \n    Estadísticas personales\n    \n      \n        Publicaciones: {{ totalPosts }}\n        Comentarios recibidos: {{ totalComments }}\n        Calificación Ponderada: 0\n      \n    \n  \n\n  \n  \n    Mis publicaciones\n\n    @if (!posts.length) {\n    \n      Aún no has publicado nada.\n    \n    }\n\n    @if (posts.length) {\n    \n      @for (pub of posts; track pub) {\n      \n        {{ pub.title }}\n        \n           Editar\n        \n      \n      }\n    \n    }\n  \n\n\n\n    \n\n    \n                \n                    ./perfil.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.perfil-box {\n    background-color: #fff7e6;\n    border-left: 5px solid $amarillo;\n    border-radius: 0.5rem;\n}\n\nh4,\nh5 {\n    color: $negro;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #eee;\n\n    &:last-child {\n        border-bottom: none;\n    }\n\n    button {\n        font-size: 0.85rem;\n    }\n}\n\n.perfil-header {\n    border: 1px solid #eee;\n    border-radius: 1rem;\n    background: #fff;\n\n    .avatar {\n        width: 80px;\n        height: 80px;\n        background-color: #0d6efd;\n        color: white;\n        border-radius: 50%;\n        font-size: 2rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-shadow: 0 0 0 3px white;\n        font-weight: 600;\n    }\n}\n\nh4,\nh5 {\n    color: #212529;\n}\n\n.bg-white {\n    border: 1px solid #e0e0e0;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #f0f0f0;\n    transition: background 0.2s ease;\n\n    &:hover {\n        background-color: #f8f9fa;\n    }\n\n    .btn {\n        font-size: 0.85rem;\n    }\n\n    &:last-child {\n        border-bottom: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ getUserInitial() }}              {{ user?.name || \\'Mi Perfil\\' }}      Correo: {{ user?.email }}      Rol: {{ user?.role }}              Sede:                  @for (s of sedes; track s) {          {{ s }}          }                                     Editar Perfil               -->          Estadísticas personales                  Publicaciones: {{ totalPosts }}        Comentarios recibidos: {{ totalComments }}        Calificación Ponderada: 0                    Mis publicaciones    @if (!posts.length) {          Aún no has publicado nada.        }    @if (posts.length) {          @for (pub of posts; track pub) {              {{ pub.title }}                   Editar                    }        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una publicación realizada por un usuario dentro de ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido detallado de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de creación de la publicación (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la categoría asociada a la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que creó la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Número de visualizaciones que ha recibido la publicación\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostCategory.html":{"url":"interfaces/PostCategory.html","title":"interface - PostCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/postCategory.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una categoría en la que pueden clasificarse las publicaciones dentro de ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción breve de la categoría\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la categoría\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la categoría (ej: Ayudantías, Deportes, Trueques, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la categoría: 0 = Inactiva, 1 = Activa\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PostCategory {\n    /** ID único de la categoría */\n    idCategory: number;\n\n    /** Nombre de la categoría (ej: Ayudantías, Deportes, Trueques, etc.) */\n    name: string;\n\n    /** Descripción breve de la categoría */\n    description: string;\n\n    /** Estado de la categoría: 0 = Inactiva, 1 = Activa */\n    status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostCategoryService.html":{"url":"injectables/PostCategoryService.html","title":"injectable - PostCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/post-category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para gestionar las categorías de publicaciones en ConectaDuoc.\nPermite obtener, crear, actualizar y eliminar categorías.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(category: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Crea una nueva categoría.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto sin idCategory, ya que es generado por el backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Categoría creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Elimina una categoría por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las categorías disponibles.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Lista de objetos PostCategory.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, category: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Actualiza una categoría existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría a actualizar.\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto PostCategory con los nuevos valores.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Categoría actualizada.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/post-category'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post-category.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para categorías de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post-category.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostCategory } from '../../models/postCategory';\n\n/**\n * Servicio para gestionar las categorías de publicaciones en ConectaDuoc.\n * Permite obtener, crear, actualizar y eliminar categorías.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostCategoryService {\n  /** URL base del API para categorías de publicaciones */\n  private apiUrl = 'http://localhost:9090/api/post-category';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todas las categorías disponibles.\n   * @returns Lista de objetos `PostCategory`.\n   */\n  getAll(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // ----------------------\n  // Módulo de Configuraciones\n  // ----------------------\n\n  /**\n   * Crea una nueva categoría.\n   * @param category Objeto sin `idCategory`, ya que es generado por el backend.\n   * @returns Categoría creada.\n   */\n  create(category: Omit): Observable {\n    return this.http.post(this.apiUrl, category);\n  }\n\n  /**\n   * Actualiza una categoría existente.\n   * @param id ID de la categoría a actualizar.\n   * @param category Objeto `PostCategory` con los nuevos valores.\n   * @returns Categoría actualizada.\n   */\n  update(id: number, category: PostCategory): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, category);\n  }\n\n  /**\n   * Elimina una categoría por su ID.\n   * @param id ID de la categoría a eliminar.\n   */\n  delete(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/post.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las publicaciones en ConectaDuoc.\nPermite crear, obtener, eliminar publicaciones y registrar visualizaciones.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPost\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                sumarVisualizacion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPost\n                        \n                    \n                \n            \n            \n                \ncreatePost(post: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Crea una nueva publicación en la base de datos.\nEl ID, fecha y visualizaciones serán generadas automáticamente por el backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto con los datos de la publicación (sin idPost, createdDate ni views).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Publicación creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Elimina una publicación por su ID.\n(Solo si esta acción está permitida por reglas del sistema).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(categoryId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las publicaciones o filtra por categoría si se indica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (Opcional) ID de la categoría para filtrar publicaciones.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de publicaciones.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Obtiene una publicación específica por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Objeto Post.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sumarVisualizacion\n                        \n                    \n                \n            \n            \n                \nsumarVisualizacion(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Registra una nueva visualización para una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación visualizada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/post'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Post } from '../../models/post';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar las publicaciones en ConectaDuoc.\n * Permite crear, obtener, eliminar publicaciones y registrar visualizaciones.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  /** URL base del API para publicaciones */\n  private apiUrl = 'http://localhost:9090/api/post';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todas las publicaciones o filtra por categoría si se indica.\n   * @param categoryId (Opcional) ID de la categoría para filtrar publicaciones.\n   * @returns Lista de publicaciones.\n   */\n  getAll(categoryId?: number): Observable {\n    if (categoryId) {\n      return this.http.get(`${this.apiUrl}?idCategory=${categoryId}`);\n    }\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Obtiene una publicación específica por su ID.\n   * @param idPost ID de la publicación.\n   * @returns Objeto `Post`.\n   */\n  getById(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}/${idPost}`);\n  }\n\n  /**\n   * Crea una nueva publicación en la base de datos.\n   * El ID, fecha y visualizaciones serán generadas automáticamente por el backend.\n   * @param post Objeto con los datos de la publicación (sin `idPost`, `createdDate` ni `views`).\n   * @returns Publicación creada.\n   */\n  createPost(post: Omit): Observable {\n    return this.http.post(this.apiUrl, post);\n  }\n\n  /**\n   * Elimina una publicación por su ID.\n   * (Solo si esta acción está permitida por reglas del sistema).\n   * @param idPost ID de la publicación a eliminar.\n   */\n  delete(idPost: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${idPost}`);\n  }\n\n\n  /**\n   * Registra una nueva visualización para una publicación.\n   * @param idPost ID de la publicación visualizada.\n   */\n  sumarVisualizacion(idPost: number): Observable {\n    return this.http.put(`${this.apiUrl}/${idPost}/view`, {});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostView.html":{"url":"interfaces/PostView.html","title":"interface - PostView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa la cantidad de visualizaciones que ha recibido una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Número total de visualizaciones registradas\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublicacionesReportadasComponent.html":{"url":"components/PublicacionesReportadasComponent.html","title":"component - PublicacionesReportadasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PublicacionesReportadasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-publicaciones-reportadas\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./publicaciones-reportadas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./publicaciones-reportadas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentReports\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                loading\n                            \n                            \n                                postReports\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                    Private\n                                reportService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmarComentario\n                            \n                            \n                                confirmarPost\n                            \n                            \n                                denegarComentario\n                            \n                            \n                                denegarPost\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarComentario\n                        \n                    \n                \n            \n            \n                \nconfirmarComentario(reporte: Report)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reporte\n                                            \n                                                            Report\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarPost\n                        \n                    \n                \n            \n            \n                \nconfirmarPost(reporte: Report)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reporte\n                                            \n                                                            Report\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        denegarComentario\n                        \n                    \n                \n            \n            \n                \ndenegarComentario(reporte: Report)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reporte\n                                            \n                                                            Report\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        denegarPost\n                        \n                    \n                \n            \n            \n                \ndenegarPost(reporte: Report)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reporte\n                                            \n                                                            Report\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentReports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Report[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postReports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Report[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportService } from '../../core/services/report.service';\nimport { Report } from '../../models/report';\nimport { PostService } from '../../core/services/post.service';\nimport { CommentService } from '../../core/services/comment.service';\n\n@Component({\n  selector: 'app-publicaciones-reportadas',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './publicaciones-reportadas.component.html',\n  styleUrls: ['./publicaciones-reportadas.component.scss']\n})\nexport class PublicacionesReportadasComponent implements OnInit {\n  private reportService = inject(ReportService);\n  private postService = inject(PostService);\n  private commentService = inject(CommentService);\n\n  postReports: Report[] = [];\n  commentReports: Report[] = [];\n  loading = true;\n\n  ngOnInit(): void {\n    this.reportService.getAllReports().subscribe({\n      next: (reports: Report[]) => {\n        // Reportes de publicaciones\n        this.postReports = reports.filter(r => r.idPost && !r.idComment);\n        // Reportes de comentarios\n        this.commentReports = reports.filter(r => r.idComment);\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error al cargar reportes:', error);\n        this.loading = false;\n      }\n    });\n  }\n\n  confirmarPost(reporte: Report): void {\n    if (!reporte.idReport || !reporte.idPost) return;\n\n    this.postService.delete(reporte.idPost).subscribe(() => {\n      this.reportService.updateStatus(reporte.idReport!, 0).subscribe(() => {\n        this.postReports = this.postReports.filter(r => r.idReport !== reporte.idReport);\n      });\n    });\n  }\n\n  denegarPost(reporte: Report): void {\n    if (!reporte.idReport) return;\n    this.reportService.updateStatus(reporte.idReport, 0).subscribe(() => {\n      this.postReports = this.postReports.filter(r => r.idReport !== reporte.idReport);\n    });\n  }\n\n  confirmarComentario(reporte: Report): void {\n    if (!reporte.idReport || !reporte.idComment) return;\n\n    this.commentService.delete(reporte.idComment).subscribe(() => {\n      this.reportService.updateStatus(reporte.idReport!, 0).subscribe(() => {\n        this.commentReports = this.commentReports.filter(r => r.idReport !== reporte.idReport);\n      });\n    });\n  }\n\n  denegarComentario(reporte: Report): void {\n    if (!reporte.idReport) return;\n    this.reportService.updateStatus(reporte.idReport, 0).subscribe(() => {\n      this.commentReports = this.commentReports.filter(r => r.idReport !== reporte.idReport);\n    });\n  }\n}\n    \n\n    \n        \n  Reportes de la comunidad\n\n  @if (loading) {\n  \n    \n      Cargando...\n    \n    Cargando reportes...\n  \n  }\n\n  @if (!loading && !postReports.length && !commentReports.length) {\n  \n    No hay reportes pendientes.\n  \n  }\n\n  @if (postReports.length) {\n  \n    Publicaciones reportadas\n    \n      @for (rep of postReports; track rep) {\n      \n        \n          Publicación #{{ rep.idPost }}\n          @if (!rep.status) {\n          Resuelto\n          }\n        \n        Motivo: {{ rep.reason }}\n        Fecha: {{ rep.date | date:'short' }}\n        @if (rep.status) {\n        \n          Confirmar y eliminar\n        \n        \n          Denegar\n        \n        }\n      \n      }\n    \n  \n  }\n\n  @if (commentReports.length) {\n  \n    Comentarios reportados\n    \n      @for (rep of commentReports; track rep) {\n      \n        \n          Comentario #{{ rep.idComment }}\n          @if (!rep.status) {\n          Resuelto\n          }\n        \n        Motivo: {{ rep.reason }}\n        Fecha: {{ rep.date | date:'short' }}\n        @if (rep.status) {\n        Confirmar y eliminar\n        Denegar\n        }\n        \n      \n      }\n    \n  \n  }\n\n    \n\n    \n                \n                    ./publicaciones-reportadas.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reportes de la comunidad  @if (loading) {            Cargando...        Cargando reportes...    }  @if (!loading && !postReports.length && !commentReports.length) {      No hay reportes pendientes.    }  @if (postReports.length) {      Publicaciones reportadas          @for (rep of postReports; track rep) {                        Publicación #{{ rep.idPost }}          @if (!rep.status) {          Resuelto          }                Motivo: {{ rep.reason }}        Fecha: {{ rep.date | date:\\'short\\' }}        @if (rep.status) {                  Confirmar y eliminar                          Denegar                }            }        }  @if (commentReports.length) {      Comentarios reportados          @for (rep of commentReports; track rep) {                        Comentario #{{ rep.idComment }}          @if (!rep.status) {          Resuelto          }                Motivo: {{ rep.reason }}        Fecha: {{ rep.date | date:\\'short\\' }}        @if (rep.status) {        Confirmar y eliminar        Denegar        }                    }        }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublicacionesReportadasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                name\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                sedes\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                guardarRegistro\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        guardarRegistro\n                        \n                    \n                \n            \n            \n                \nguardarRegistro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online', 'Campus Virtual', 'Sede Alameda', 'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas', 'Sede Educación Continua', 'Sede Maipú', 'Sede Melipilla',\n    'Sede Plaza Norte', 'Sede Plaza Oeste', 'Sede Plaza Vespucio', 'Sede Puente Alto',\n    'Sede San Bernardo', 'Sede San Carlos de Apoquindo', 'Sede San Joaquín',\n    'Sede Valparaíso', 'Sede Viña del Mar', 'Campus Arauco', 'Campus Nacimiento',\n    'Sede San Andrés de Concepción', 'Campus Villarrica', 'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  private fb = inject(FormBuilder);\n  private userService = inject(UserService);\n  private router = inject(Router);\n\n  registerForm!: FormGroup;\n  email = '';\n  name = '';\n  sedes: string[] = [\n    'Modalidad online', 'Campus Virtual', 'Sede Alameda', 'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas', 'Sede Educación Continua', 'Sede Maipú', 'Sede Melipilla',\n    'Sede Plaza Norte', 'Sede Plaza Oeste', 'Sede Plaza Vespucio', 'Sede Puente Alto',\n    'Sede San Bernardo', 'Sede San Carlos de Apoquindo', 'Sede San Joaquín',\n    'Sede Valparaíso', 'Sede Viña del Mar', 'Campus Arauco', 'Campus Nacimiento',\n    'Sede San Andrés de Concepción', 'Campus Villarrica', 'Sede Puerto Montt'\n  ];\n\n  ngOnInit(): void {\n    const azureUser = this.userService.getAzureUser();\n    if (!azureUser) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.email = azureUser.email;\n    this.name = azureUser.fullName;\n\n    this.registerForm = this.fb.group({\n      center: ['', Validators.required]\n    });\n  }\n\n  guardarRegistro(): void {\n    if (this.registerForm.invalid) return;\n\n    const user: User = {\n      email: this.email,\n      name: this.name,\n      center: this.registerForm.value.center,\n      role: 'student',\n      policies: 0 // Aceptación viene después en el flujo\n    };\n\n    this.userService.registerUser(user).subscribe({\n      next: () => {\n        // Al registrar, redirige a la pantalla de reglas de la comunidad\n        this.router.navigate(['/reglas-de-la-comunidad']);\n      },\n      error: () => {\n        // Manejo de error, podrías mostrar un mensaje al usuario\n        console.error('Error al registrar el usuario');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      ¡Bienvenido/a a la comunidad ConectaDuoc!\n      Registro de usuario\n    \n\n    \n      \n        Email\n        \n      \n\n      \n        Nombre completo\n        \n      \n\n      \n        Sede\n        \n          Seleccione su sede\n          @for (s of sedes; track s) {\n          {{ s }}\n          }\n        \n      \n\n      \n        Guardar y continuar\n      \n    \n  \n\n\n\n  ← Volver al inicio de sesión\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                @use 'styles' as *;\n@use 'sass:color';\n\n.registro-wrapper {\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: $blanco;\n}\n\n.container {\n    padding-bottom: 0 !important;\n}\n\n.registro-card {\n    max-width: 400px;\n    border-radius: 1.25rem;\n    border: none;\n    background: $blanco;\n    border-top: 5px solid $amarillo;\n}\n\n.logo-registro {\n    height: 60px;\n}\n\n.titulo-registro {\n    color: $amarillo;\n}\n\nlabel {\n    color: $negro;\n}\n\n.campo-readonly {\n    background: #f9fafb !important;\n    color: $gris !important;\n    font-weight: 600;\n}\n\n.form-select:invalid {\n    color: $gris;\n    font-style: italic;\n}\n\n.boton-registro {\n    background-color: $amarillo !important;\n    border: none !important;\n    color: $negro !important;\n    transition: background 0.2s;\n\n    &:hover {\n        background-color: color.adjust($amarillo, $lightness: -10%) !important;\n        color: $negro !important;\n    }\n}\n\n\n.text-center a {\n    font-size: 0.95rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      ¡Bienvenido/a a la comunidad ConectaDuoc!      Registro de usuario                      Email                            Nombre completo                            Sede                  Seleccione su sede          @for (s of sedes; track s) {          {{ s }}          }                            Guardar y continuar              ← Volver al inicio de sesión'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReglasDeLaComunidadComponent.html":{"url":"components/ReglasDeLaComunidadComponent.html","title":"component - ReglasDeLaComunidadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReglasDeLaComunidadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reglas-de-la-comunidad\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                                ModalConfirmacionComponent\n                \n            \n\n            \n                styleUrls\n                ./reglas-de-la-comunidad.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reglas-de-la-comunidad.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarModal\n                            \n                            \n                                reglas\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aceptarReglas\n                            \n                            \n                                cancelarRechazo\n                            \n                            \n                                confirmarRechazo\n                            \n                            \n                                rechazarReglas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aceptarReglas\n                        \n                    \n                \n            \n            \n                \naceptarReglas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarRechazo\n                        \n                    \n                \n            \n            \n                \ncancelarRechazo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarRechazo\n                        \n                    \n                \n            \n            \n                \nconfirmarRechazo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rechazarReglas\n                        \n                    \n                \n            \n            \n                \nrechazarReglas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reglas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      titulo: '1. Respeto ante todo',\n      descripcion: 'No se toleran comentarios ofensivos, discriminatorios, acosadores o violentos. Toda persona debe ser tratada con dignidad y cortesía.'\n    },\n    {\n      titulo: '2. Actividades sin fines de lucro',\n      descripcion: 'ConectaDuoc es un espacio colaborativo. Está prohibida toda oferta o venta comercial dentro de la plataforma.'\n    },\n    {\n      titulo: '3. Contenido adecuado',\n      descripcion: 'Se prohíbe la publicación de material con lenguaje vulgar, violencia gráfica, apología de drogas, apuestas o cualquier contenido ilícito.'\n    },\n    {\n      titulo: '4. Protección de datos personales',\n      descripcion: 'No publiques datos personales tuyos o de terceros sin consentimiento explícito. Esto incluye RUT, correos, teléfonos o direcciones.'\n    },\n    {\n      titulo: '5. Moderación activa',\n      descripcion: 'Los administradores podrán eliminar o editar publicaciones que infrinjan las reglas. Las reincidencias pueden derivar en la suspensión del perfil.'\n    },\n    {\n      titulo: '6. Lenguaje inclusivo y empático',\n      descripcion: 'Fomentamos un lenguaje claro, inclusivo y que promueva el respeto por la diversidad de género, origen y creencias.'\n    },\n    {\n      titulo: '7. Sistema de reportes',\n      descripcion: 'Los usuarios pueden reportar contenido inapropiado mediante el botón correspondiente. Todas las denuncias serán revisadas.'\n    },\n    {\n      titulo: '8. Contenido académico y estudiantil preferente',\n      descripcion: 'Se espera que las publicaciones estén relacionadas con el quehacer estudiantil: ayudantías, actividades culturales, voluntariado, etc.'\n    },\n    {\n      titulo: '9. Responsabilidad en encuentros presenciales',\n      descripcion: 'En caso de concretarse actividades fuera de la plataforma, los usuarios deben ser responsables, actuar con respeto y cuidar su seguridad.'\n    },\n    {\n      titulo: '10. Prohibición de suplantación de identidad',\n      descripcion: 'Está estrictamente prohibido crear perfiles falsos, impersonar a terceros o utilizar datos que no correspondan.'\n    },\n    {\n      titulo: '11. Uso exclusivo de cuentas institucionales',\n      descripcion: 'Para participar en la plataforma, debes iniciar sesión con tu cuenta institucional Duoc UC. Esto asegura un entorno seguro y controlado.'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ModalConfirmacionComponent } from '../../shared/modal-confirmacion/modal-confirmacion.component';\nimport { UserService } from '../../core/services/user.service';\n\n@Component({\n  selector: 'app-reglas-de-la-comunidad',\n  standalone: true,\n  imports: [FormsModule, ModalConfirmacionComponent],\n  templateUrl: './reglas-de-la-comunidad.component.html',\n  styleUrls: ['./reglas-de-la-comunidad.component.scss']\n})\nexport class ReglasDeLaComunidadComponent {\n  mostrarModal = false;\n  private userService = inject(UserService);\n  private router = inject(Router);\n\n  reglas = [\n    {\n      titulo: '1. Respeto ante todo',\n      descripcion: 'No se toleran comentarios ofensivos, discriminatorios, acosadores o violentos. Toda persona debe ser tratada con dignidad y cortesía.'\n    },\n    {\n      titulo: '2. Actividades sin fines de lucro',\n      descripcion: 'ConectaDuoc es un espacio colaborativo. Está prohibida toda oferta o venta comercial dentro de la plataforma.'\n    },\n    {\n      titulo: '3. Contenido adecuado',\n      descripcion: 'Se prohíbe la publicación de material con lenguaje vulgar, violencia gráfica, apología de drogas, apuestas o cualquier contenido ilícito.'\n    },\n    {\n      titulo: '4. Protección de datos personales',\n      descripcion: 'No publiques datos personales tuyos o de terceros sin consentimiento explícito. Esto incluye RUT, correos, teléfonos o direcciones.'\n    },\n    {\n      titulo: '5. Moderación activa',\n      descripcion: 'Los administradores podrán eliminar o editar publicaciones que infrinjan las reglas. Las reincidencias pueden derivar en la suspensión del perfil.'\n    },\n    {\n      titulo: '6. Lenguaje inclusivo y empático',\n      descripcion: 'Fomentamos un lenguaje claro, inclusivo y que promueva el respeto por la diversidad de género, origen y creencias.'\n    },\n    {\n      titulo: '7. Sistema de reportes',\n      descripcion: 'Los usuarios pueden reportar contenido inapropiado mediante el botón correspondiente. Todas las denuncias serán revisadas.'\n    },\n    {\n      titulo: '8. Contenido académico y estudiantil preferente',\n      descripcion: 'Se espera que las publicaciones estén relacionadas con el quehacer estudiantil: ayudantías, actividades culturales, voluntariado, etc.'\n    },\n    {\n      titulo: '9. Responsabilidad en encuentros presenciales',\n      descripcion: 'En caso de concretarse actividades fuera de la plataforma, los usuarios deben ser responsables, actuar con respeto y cuidar su seguridad.'\n    },\n    {\n      titulo: '10. Prohibición de suplantación de identidad',\n      descripcion: 'Está estrictamente prohibido crear perfiles falsos, impersonar a terceros o utilizar datos que no correspondan.'\n    },\n    {\n      titulo: '11. Uso exclusivo de cuentas institucionales',\n      descripcion: 'Para participar en la plataforma, debes iniciar sesión con tu cuenta institucional Duoc UC. Esto asegura un entorno seguro y controlado.'\n    }\n  ];\n\n  aceptarReglas() {\n    // Llamamos al backend para marcar \"policies\" como true\n    const email = this.userService.getAzureUser()?.email;\n    if (email) {\n      this.userService.getUser(email).subscribe(user => {\n        const updatedUser = { ...user, policies: 1 };\n        this.userService.registerUser(updatedUser).subscribe(() => {\n          localStorage.setItem('conectaReglasAceptadas', 'true');\n          this.router.navigate(['/dashboard']);\n        });\n      });\n    } else {\n      // Fallback: solo localStorage (en caso de error raro)\n      localStorage.setItem('conectaReglasAceptadas', 'true');\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  rechazarReglas() {\n    this.mostrarModal = true;\n  }\n\n  confirmarRechazo() {\n    const email = this.userService.getAzureUser()?.email;\n    if (email) {\n      this.userService.getUser(email).subscribe(user => {\n        const updatedUser = { ...user, policies: 0 };\n        this.userService.registerUser(updatedUser).subscribe(() => {\n          // Ahora sí, limpia el storage y cierra sesión\n          localStorage.removeItem('conectaReglasAceptadas');\n          localStorage.removeItem('userRole');\n          localStorage.removeItem('name');\n          sessionStorage.clear();\n          this.router.navigate(['/login']);\n        });\n      });\n    } else {\n      // Si por algún motivo no hay email, igual cierra sesión\n      localStorage.removeItem('conectaReglasAceptadas');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('name');\n      sessionStorage.clear();\n      this.router.navigate(['/login']);\n    }\n  }\n\n  cancelarRechazo() {\n    this.mostrarModal = false;\n  }\n\n}\n    \n\n    \n        \n  \n    Reglas de la Comunidad\n\n    \n      En ConectaDuoc creemos en una comunidad estudiantil colaborativa, inclusiva y segura. Para\n      garantizar una experiencia positiva para todos los usuarios, te invitamos a respetar los siguientes\n      principios de convivencia. El uso de esta plataforma implica la aceptación de estas reglas.\n    \n\n    @for (item of reglas; track item) {\n      \n        {{ item.titulo }}\n        {{ item.descripcion }}\n      \n    }\n\n    \n      \n        ConectaDuoc es un espacio construido por y para estudiantes. Tu participación responsable y respetuosa\n        nos permite fortalecer una red de apoyo mutuo. ¡Gracias por ser parte de esta comunidad!\n      \n    \n\n    \n      Estoy de acuerdo\n      No estoy de acuerdo\n    \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./reglas-de-la-comunidad.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.reglas-wrapper {\n    background-color: $blanco;\n    color: $negro;\n    flex: 1;\n\n    .reglas-container {\n        max-width: 920px;\n        margin: auto;\n        background-color: $blanco;\n        border-radius: 16px;\n        padding: 3rem 2rem;\n        box-shadow: 0 0 14px rgba(0, 0, 0, 0.06);\n    }\n\n    .titulo {\n        font-size: 2.5rem;\n        font-weight: 700;\n        color: $negro;\n        border-left: 8px solid $amarillo;\n        padding-left: 1rem;\n        margin-bottom: 1.75rem;\n    }\n\n    .intro {\n        font-size: 1.15rem;\n        color: $gris;\n        line-height: 1.7;\n    }\n\n    .regla {\n        margin-bottom: 2rem;\n\n        .regla-titulo {\n            font-weight: 600;\n            color: $negro;\n            font-size: 1.2rem;\n            margin-bottom: 0.5rem;\n        }\n\n        .regla-texto {\n            font-size: 1.05rem;\n            color: $gris;\n            line-height: 1.6;\n        }\n    }\n\n    .final {\n        font-size: 1rem;\n        font-style: italic;\n        color: $gris;\n        text-align: center;\n        margin-top: 3rem;\n    }\n\n    .btn-amarillo {\n        background-color: $amarillo;\n        color: $negro-puro;\n        font-weight: 600;\n        padding: 0.75rem 1.5rem;\n        border: none;\n        border-radius: 12px;\n        transition: background-color 0.3s ease;\n\n        &:hover {\n            background-color: color.adjust($amarillo, $lightness: 7%);\n            cursor: pointer;\n        }\n    }\n\n    .btn-outline-dark {\n        border: 2px solid $negro;\n        color: $negro;\n        font-weight: 500;\n        padding: 0.7rem 1.4rem;\n        border-radius: 12px;\n        background-color: transparent;\n        transition: background-color 0.3s;\n\n        &:hover {\n            background-color: $negro;\n            color: $blanco;\n        }\n    }\n\n    .acciones-botones {\n        display: flex;\n        justify-content: center;\n        gap: 1.5rem; // separación profesional entre botones\n        flex-wrap: wrap;\n        margin-top: 2rem;\n\n        button {\n            min-width: 180px;\n            padding: 0.75rem 1.5rem;\n            font-weight: 600;\n            font-size: 1rem;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n\n        .btn-amarillo {\n            background-color: $amarillo;\n            color: $negro-puro;\n            border: none;\n\n            &:hover {\n                background-color: color.adjust($amarillo, $lightness: -10%);\n            }\n        }\n\n        .btn-outline-dark {\n            background-color: transparent;\n            border: 2px solid $negro;\n            color: $negro;\n\n            &:hover {\n                background-color: $negro;\n                color: $blanco;\n            }\n        }\n    }\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reglas de la Comunidad          En ConectaDuoc creemos en una comunidad estudiantil colaborativa, inclusiva y segura. Para      garantizar una experiencia positiva para todos los usuarios, te invitamos a respetar los siguientes      principios de convivencia. El uso de esta plataforma implica la aceptación de estas reglas.        @for (item of reglas; track item) {              {{ item.titulo }}        {{ item.descripcion }}          }                  ConectaDuoc es un espacio construido por y para estudiantes. Tu participación responsable y respetuosa        nos permite fortalecer una red de apoyo mutuo. ¡Gracias por ser parte de esta comunidad!                    Estoy de acuerdo      No estoy de acuerdo      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReglasDeLaComunidadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un reporte generado por un usuario sobre una publicación o comentario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idPost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idReport\n                                        \n                                \n                                \n                                        \n                                            reason\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha en que se generó el reporte (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idComment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID del comentario reportado (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID de la publicación reportada (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idReport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idReport:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Razón o motivo del reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del reporte: 0 = Inactivo, 1 = Activo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Report {\n    /** ID único del reporte */\n    idReport?: number;\n\n    /** ID de la publicación reportada (si aplica) */\n    idPost?: number;\n\n    /** ID del comentario reportado (si aplica) */\n    idComment?: number;\n\n    /** Razón o motivo del reporte */\n    reason: string;\n\n    /** Estado del reporte: 0 = Inactivo, 1 = Activo */\n    status: number;\n\n    /** Fecha en que se generó el reporte (ISO string) */\n    date: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/report.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar reportes (denuncias) sobre publicaciones\ny comentarios en la plataforma ConectaDuoc.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllReports\n                            \n                            \n                                reportComment\n                            \n                            \n                                reportPost\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllReports\n                        \n                    \n                \n            \n            \n                \ngetAllReports()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los reportes registrados en el sistema.\nGeneralmente usado por el administrador para revisión y gestión.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de objetos Report.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportComment\n                        \n                    \n                \n            \n            \n                \nreportComment(idComment: number, reason: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Envía un reporte sobre un comentario específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario a reportar.\n\n                                            \n                                        \n                                        \n                                                reason\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Motivo del reporte.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el reporte creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportPost\n                        \n                    \n                \n            \n            \n                \nreportPost(idPost: number, reason: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Envía un reporte sobre una publicación específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación a reportar.\n\n                                            \n                                        \n                                        \n                                                reason\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Motivo del reporte.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el reporte creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(idReport: number, status: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado de un reporte (por ejemplo, para marcarlo como revisado).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idReport\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del reporte a modificar.\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo estado (0 = inactivo, 1 = activo).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Reporte actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/reportes'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para reportes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Report } from '../../models/report';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar reportes (denuncias) sobre publicaciones\n * y comentarios en la plataforma ConectaDuoc.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n  /** URL base del API para reportes */\n  private apiUrl = 'http://localhost:9090/api/reportes';\n  private http = inject(HttpClient);\n\n  /**\n   * Envía un reporte sobre una publicación específica.\n   * @param idPost ID de la publicación a reportar.\n   * @param reason Motivo del reporte.\n   * @returns Observable con el reporte creado.\n   */\n  reportPost(idPost: number, reason: string): Observable {\n    const report: Report = { idPost, reason, status: 1, date: new Date().toISOString() };\n    return this.http.post(`${this.apiUrl}/publicacion`, report);\n  }\n\n  /**\n   * Envía un reporte sobre un comentario específico.\n   * @param idComment ID del comentario a reportar.\n   * @param reason Motivo del reporte.\n   * @returns Observable con el reporte creado.\n   */\n  reportComment(idComment: number, reason: string): Observable {\n    const report: Report = { idComment, reason, status: 1, date: new Date().toISOString() };\n    return this.http.post(`${this.apiUrl}/comentario`, report);\n  }\n\n  /**\n   * Obtiene todos los reportes registrados en el sistema.\n   * Generalmente usado por el administrador para revisión y gestión.\n   * @returns Lista de objetos `Report`.\n   */\n  getAllReports(): Observable {\n    return this.http.get(`${this.apiUrl}`);\n  }\n\n  /**\n   * Actualiza el estado de un reporte (por ejemplo, para marcarlo como revisado).\n   * @param idReport ID del reporte a modificar.\n   * @param status Nuevo estado (0 = inactivo, 1 = activo).\n   * @returns Reporte actualizado.\n   */\n  updateStatus(idReport: number, status: number): Observable {\n    return this.http.put(`${this.apiUrl}/${idReport}`, { status });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/role.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { inject, Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  private userService = inject(UserService);\n  private router = inject(Router);\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const expectedRoles: string[] = route.data['expectedRoles'];\n    const userRole = this.userService.getRole();\n\n    if (!userRole || !expectedRoles.includes(userRole)) {\n      console.warn(`Acceso Denegado. Rol \"${userRole}\" no está autorizado para esta ruta.`);\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/role.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para la gestión de roles de usuario en la aplicación.\nUtiliza localStorage para almacenar y verificar el rol actual.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRole\n                            \n                            \n                                hasRole\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol actual almacenado en localStorage.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                Rol como string (ej: 'admin', 'student') o null si no está definido.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasRole\n                        \n                    \n                \n            \n            \n                \nhasRole(expectedRole: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene el rol esperado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expectedRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Rol que se desea verificar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el rol coincide, false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol actual corresponde a un administrador.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si es 'admin', false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStudent\n                        \n                    \n                \n            \n            \n                \nisStudent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol actual corresponde a un estudiante.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si es 'student', false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Servicio para la gestión de roles de usuario en la aplicación.\n * Utiliza `localStorage` para almacenar y verificar el rol actual.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  /**\n   * Obtiene el rol actual almacenado en `localStorage`.\n   * @returns Rol como string (ej: 'admin', 'student') o `null` si no está definido.\n   */\n  getRole(): string | null {\n    return localStorage.getItem('userRole');\n  }\n\n  /**\n   * Verifica si el usuario tiene el rol esperado.\n   * @param expectedRole Rol que se desea verificar.\n   * @returns `true` si el rol coincide, `false` en caso contrario.\n   */\n  hasRole(expectedRole: string): boolean {\n    const role = this.getRole();\n    return role === expectedRole;\n  }\n\n  /**\n   * Verifica si el rol actual corresponde a un administrador.\n   * @returns `true` si es 'admin', `false` en caso contrario.\n   */\n  isAdmin(): boolean {\n    return this.getRole() === 'admin';\n  }\n\n  /**\n   * Verifica si el rol actual corresponde a un estudiante.\n   * @returns `true` si es 'student', `false` en caso contrario.\n   */\n  isStudent(): boolean {\n    return this.getRole() === 'student';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Score.html":{"url":"interfaces/Score.html","title":"interface - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una puntuación (score) que un usuario otorga a una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación puntuada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que otorgó la puntuación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor de la puntuación (por ejemplo: 1 a 5 estrellas)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/score.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las puntuaciones (scores) de las publicaciones\nen la plataforma ConectaDuoc. Permite registrar, consultar y calcular promedios\nsegún publicaciones y usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAverageScore\n                            \n                            \n                                getResumenScores\n                            \n                            \n                                getUserScore\n                            \n                            \n                                setScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAverageScore\n                        \n                    \n                \n            \n            \n                \ngetAverageScore(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Obtiene el promedio de puntuación de una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Valor promedio (ej: 4.2).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResumenScores\n                        \n                    \n                \n            \n            \n                \ngetResumenScores(idUser: number, idCategoria?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Obtiene un resumen de puntuaciones del usuario, incluyendo promedio general\ny su propia puntuación en cada publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                        \n                                                idCategoria\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (opcional) ID de la categoría a filtrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Arreglo de objetos con ID del post, promedio y puntuación personal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserScore\n                        \n                    \n                \n            \n            \n                \ngetUserScore(idPost: number, idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Obtiene la puntuación que un usuario le dio a una publicación específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Objeto Score o null si el usuario no ha votado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(score: Score)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Registra o actualiza la puntuación de un usuario sobre una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            Score\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Score con los datos a guardar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/score'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/score.service.ts:16\n                        \n                    \n\n            \n                \n                    URL base del API de puntuaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/score.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Score } from '../../models/post';\n\n/**\n * Servicio encargado de gestionar las puntuaciones (scores) de las publicaciones\n * en la plataforma ConectaDuoc. Permite registrar, consultar y calcular promedios\n * según publicaciones y usuarios.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreService {\n  /** URL base del API de puntuaciones */\n  private apiUrl = 'http://localhost:9090/api/score';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene el promedio de puntuación de una publicación.\n   * @param idPost ID de la publicación.\n   * @returns Valor promedio (ej: 4.2).\n   */\n  getAverageScore(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}/average/${idPost}`);\n  }\n\n  /**\n   * Obtiene la puntuación que un usuario le dio a una publicación específica.\n   * @param idPost ID de la publicación.\n   * @param idUser ID del usuario.\n   * @returns Objeto `Score` o `null` si el usuario no ha votado.\n   */\n  getUserScore(idPost: number, idUser: number): Observable {\n    return this.http.get(`${this.apiUrl}/user/${idUser}/post/${idPost}`);\n  }\n\n  /**\n   * Registra o actualiza la puntuación de un usuario sobre una publicación.\n   * @param score Objeto `Score` con los datos a guardar.\n   */\n  setScore(score: Score): Observable {\n    return this.http.post(`${this.apiUrl}/save`, score);\n  }\n\n  /**\n   * Obtiene un resumen de puntuaciones del usuario, incluyendo promedio general\n   * y su propia puntuación en cada publicación.\n   * @param idUser ID del usuario.\n   * @param idCategoria (opcional) ID de la categoría a filtrar.\n   * @returns Arreglo de objetos con ID del post, promedio y puntuación personal.\n   */\n  getResumenScores(idUser: number, idCategoria?: number): Observable {\n    let url = `${this.apiUrl}/resumen?idUser=${idUser}`;\n    if (idCategoria !== undefined) url += `&idCategoria=${idCategoria}`;\n    return this.http.get(url);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un usuario registrado en la plataforma ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            policies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sede del usuario (ej: Maipú, San Joaquín, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo institucional del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre completo del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policies:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de las reglas comunitarias\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rol del usuario (ej: student, admin)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /** ID único del usuario */\n    idUser?: number;\n    /** Correo institucional del usuario */\n    email: string;\n    /** Nombre completo del usuario */\n    name: string;\n    /** Rol del usuario (ej: student, admin) */\n    role?: string;\n    /** Sede del usuario (ej: Maipú, San Joaquín, etc.) */\n    center: string;\n    /** Estado de las reglas comunitarias */\n    policies: number; // 0 No, 1 Sí\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio responsable de gestionar la información de los usuarios\nen la plataforma ConectaDuoc, incluyendo integración con Azure AD\ny operaciones CRUD sobre la base de datos.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                msalService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserExists\n                            \n                            \n                                clearRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getAll\n                            \n                            \n                                getAzureUser\n                            \n                            \n                                getIdUser\n                            \n                            \n                                getName\n                            \n                            \n                                getRole\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                registerUser\n                            \n                            \n                                setIdUser\n                            \n                            \n                                setName\n                            \n                            \n                                setRole\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserExists\n                        \n                    \n                \n            \n            \n                \ncheckUserExists(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Verifica si un usuario con el correo indicado ya está registrado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo institucional del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si existe, false si no.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearRole\n                        \n                    \n                \n            \n            \n                \nclearRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Elimina el rol del usuario desde localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los usuarios registrados.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAzureUser\n                        \n                    \n                \n            \n            \n                \ngetAzureUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Obtiene los datos del usuario actualmente autenticado mediante Azure AD.\n\n\n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                Objeto con email y nombre completo, o null si no hay sesión activa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdUser\n                        \n                    \n                \n            \n            \n                \ngetIdUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Obtiene el ID del usuario almacenado.\n\n\n                        \n                            Returns :     number | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre del usuario almacenado.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol almacenado en localStorage.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario completo desde la base de datos según el correo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Obtiene un usuario desde la base de datos por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID numérico del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario en la base de datos.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de tipo User con los datos del nuevo usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdUser\n                        \n                    \n                \n            \n            \n                \nsetIdUser(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Guarda el ID del usuario autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID numérico del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setName\n                        \n                    \n                \n            \n            \n                \nsetName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Guarda el nombre del usuario para mostrarlo en la interfaz.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre completo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRole\n                        \n                    \n                \n            \n            \n                \nsetRole(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Guarda el rol del usuario en localStorage para uso en frontend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Rol del usuario (ej: \"admin\", \"student\").\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario a modificar.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevos datos del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/usuarios'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    URL base del API de usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../models/user';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio responsable de gestionar la información de los usuarios\n * en la plataforma ConectaDuoc, incluyendo integración con Azure AD\n * y operaciones CRUD sobre la base de datos.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  /** URL base del API de usuarios */\n  private apiUrl = 'http://localhost:9090/api/usuarios';\n  //private apiUrl = 'https://yr3rp1l7fd.execute-api.us-east-1.amazonaws.com/api/usuarios';\n  private msalService = inject(MsalService);\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene los datos del usuario actualmente autenticado mediante Azure AD.\n   * @returns Objeto con email y nombre completo, o `null` si no hay sesión activa.\n   */\n  getAzureUser(): { email: string; fullName: string } | null {\n    const account = this.msalService.instance.getActiveAccount();\n    if (!account) return null;\n    return {\n      email: account.username,\n      fullName: account.name || ''\n    };\n  }\n\n  /**\n   * Verifica si un usuario con el correo indicado ya está registrado.\n   * @param email Correo institucional del usuario.\n   * @returns `true` si existe, `false` si no.\n   */\n  checkUserExists(email: string): Observable {\n    const encodedEmail = encodeURIComponent(email);\n    return this.http.get(`${this.apiUrl}/exists/${encodedEmail}`);\n  }\n\n  /**\n   * Registra un nuevo usuario en la base de datos.\n   * @param user Objeto de tipo `User` con los datos del nuevo usuario.\n   */\n  registerUser(user: User): Observable {\n    return this.http.post(this.apiUrl, user);\n  }\n\n  /**\n   * Obtiene el usuario completo desde la base de datos según el correo.\n   * @param email Correo del usuario.\n   */\n  getUser(email: string): Observable {\n    return this.http.get(`${this.apiUrl}/${email}`);\n  }\n\n  /**\n   * Guarda el rol del usuario en `localStorage` para uso en frontend.\n   * @param role Rol del usuario (ej: \"admin\", \"student\").\n   */\n  setRole(role: string) {\n    localStorage.setItem('userRole', role);\n  }\n\n  /** Obtiene el rol almacenado en `localStorage`. */\n  getRole(): string | null {\n    return localStorage.getItem('userRole');\n  }\n\n  /** Elimina el rol del usuario desde `localStorage`. */\n  clearRole() {\n    localStorage.removeItem('userRole');\n  }\n\n  /**\n   * Guarda el nombre del usuario para mostrarlo en la interfaz.\n   * @param name Nombre completo del usuario.\n   */\n  setName(name: string) {\n    localStorage.setItem('name', name);\n  }\n\n  /** Obtiene el nombre del usuario almacenado. */\n  getName(): string | null {\n    return localStorage.getItem('name');\n  }\n\n  /**\n   * Guarda el ID del usuario autenticado.\n   * @param idUser ID numérico del usuario.\n   */\n  setIdUser(idUser: number) {\n    localStorage.setItem('idUser', idUser.toString());\n  }\n\n  /** Obtiene el ID del usuario almacenado. */\n  getIdUser(): number | null {\n    const raw = localStorage.getItem('idUser');\n    return raw ? Number(raw) : null;\n  }\n\n  /**\n   * Obtiene un usuario desde la base de datos por su ID.\n   * @param idUser ID numérico del usuario.\n   */\n  getUserById(idUser: number): Observable {\n    return this.http.get(`${this.apiUrl}/id/${idUser}`);\n  }\n\n  // ----------------------\n  // Módulo de Configuraciones\n  // ----------------------\n\n\n  /** Obtiene todos los usuarios registrados. */\n  getAll(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Actualiza los datos de un usuario.\n   * @param id ID del usuario a modificar.\n   * @param user Nuevos datos del usuario.\n   */\n  updateUser(id: number, user: User): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, user);\n  }\n\n  /**\n   * Elimina un usuario por su ID.\n   * @param id ID del usuario a eliminar.\n   */\n  deleteUser(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsuariosComponent.html":{"url":"components/UsuariosComponent.html","title":"component - UsuariosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsuariosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/usuarios/usuarios.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-usuarios\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                                BreadcrumbComponent\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./usuarios.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./usuarios.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroNombre\n                            \n                            \n                                userForm\n                            \n                            \n                                users\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelarEdicion\n                            \n                            \n                                cargarUsuarios\n                            \n                            \n                                editar\n                            \n                            \n                                eliminar\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuariosFiltrados\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarEdicion\n                        \n                    \n                \n            \n            \n                \ncancelarEdicion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarUsuarios\n                        \n                    \n                \n            \n            \n                \ncargarUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuariosFiltrados\n                    \n                \n\n                \n                    \n                        getusuariosFiltrados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UserService } from '../../../core/services/user.service';\nimport { User } from '../../../models/user';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-config-usuarios',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, BreadcrumbComponent, FormsModule],\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n  private fb = inject(FormBuilder);\n  private userService = inject(UserService);\n\n  users: User[] = [];\n  userForm!: FormGroup;\n  editing: User | null = null;\n  filtroNombre: string = '';\n\n  ngOnInit(): void {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      role: ['student', Validators.required],\n      center: ['', Validators.required]\n    });\n\n    this.cargarUsuarios();\n  }\n\n  get usuariosFiltrados(): User[] {\n    if (!this.filtroNombre.trim()) return this.users;\n    const filtro = this.filtroNombre.toLowerCase();\n    return this.users.filter(u => u.name?.toLowerCase().includes(filtro));\n  }\n\n  cargarUsuarios(): void {\n    this.userService.getAll().subscribe(users => (this.users = users));\n  }\n\n  editar(user: User): void {\n    this.editing = { ...user };\n    this.userForm.patchValue(this.editing);\n  }\n\n  cancelarEdicion(): void {\n    this.editing = null;\n    this.userForm.reset({ role: 'student' });\n  }\n\n  guardar(): void {\n    if (this.userForm.invalid) return;\n\n    const datos = this.userForm.value as User;\n    if (this.editing && this.editing.idUser) {\n      this.userService.updateUser(this.editing.idUser, datos).subscribe(() => {\n        this.cargarUsuarios();\n        this.cancelarEdicion();\n      });\n    } else {\n      this.userService.registerUser({ ...datos, policies: 1 }).subscribe(() => {\n        this.cargarUsuarios();\n        this.userForm.reset({ role: 'student' });\n      });\n    }\n  }\n\n  eliminar(user: User): void {\n    if (!user.idUser) return;\n    if (!confirm('¿Eliminar usuario?')) return;\n    this.userService.deleteUser(user.idUser).subscribe(() => {\n      this.cargarUsuarios();\n    });\n  }\n}\n    \n\n    \n        \n    \n    Usuarios\n    Administra los usuarios de la plataforma\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Admin\n                    Student\n                \n            \n            \n                \n            \n            \n                {{ editing ? 'Actualizar' : 'Agregar' }}\n                Cancelar\n            \n        \n    \n\n    \n    \n        \n    \n\n    \n        \n            \n                \n                    Email\n                    Nombre\n                    Rol\n                    Sede\n                    \n                \n            \n            \n                \n                    {{ u.email }}\n                    {{ u.name }}\n                    {{ u.role }}\n                    {{ u.center }}\n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./usuarios.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Usuarios    Administra los usuarios de la plataforma                                                                                                                                            Admin                    Student                                                                                                {{ editing ? \\'Actualizar\\' : \\'Agregar\\' }}                Cancelar                                                                                                        Email                    Nombre                    Rol                    Sede                                                                                                {{ u.email }}                    {{ u.name }}                    {{ u.role }}                    {{ u.center }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsuariosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            reglasAceptadasGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/categorias/categorias.component.ts\n            \n            component\n            CategoriasComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/categorias/detalle/detalle.component.ts\n            \n            component\n            DetalleComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/categorias-admin/categorias-admin.component.ts\n            \n            component\n            CategoriasAdminComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/configuracion.component.ts\n            \n            component\n            ConfiguracionComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/usuarios/usuarios.component.ts\n            \n            component\n            UsuariosComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts\n            \n            component\n            PublicacionesReportadasComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts\n            \n            component\n            ReglasDeLaComunidadComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/post-category.service.ts\n            \n            injectable\n            PostCategoryService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/post.service.ts\n            \n            injectable\n            PostService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/report.service.ts\n            \n            injectable\n            ReportService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                89 %\n                (17/19)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Comment\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Post\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            PostView\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Score\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/postCategory.ts\n            \n            interface\n            PostCategory\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/report.ts\n            \n            interface\n            Report\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/modal-confirmacion/modal-confirmacion.component.ts\n            \n            component\n            ModalConfirmacionComponent\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.0.4\n        \n            @angular/common : ^20.0.4\n        \n            @angular/compiler : ^20.0.4\n        \n            @angular/core : ^20.0.4\n        \n            @angular/forms : ^20.0.4\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.4\n        \n            @angular/platform-browser-dynamic : ^20.0.4\n        \n            @angular/router : ^20.0.4\n        \n            @azure/msal-angular : ^4.0.12\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nConectaDuoc\nThis project was generated using Angular CLI version 19.0.6.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            reglasAceptadasGuard   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Configura la detección de cambios de Angular utilizando zonas.\n     * - `eventCoalescing: true`: Optimiza los eventos de cambio para evitar múltiples detecciones innecesarias.\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n\n    /**\n     * Proporciona las rutas definidas en el archivo `app.routes.ts` al enrutador global.\n     */\n    provideRouter(routes),\n\n    /**\n     * Establece el idioma global de Angular para fechas y localización.\n     */\n    { provide: LOCALE_ID, useValue: 'es-CL' }\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración principal de la aplicación Angular.\nEste archivo define los proveedores globales necesarios para el correcto funcionamiento de la aplicación,\ncomo el enrutador y la detección de cambios optimizada con zonas.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reglasAceptadasGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n    const router = inject(Router);\n    const aceptadas = localStorage.getItem('conectaReglasAceptadas') === 'true';\n\n    if (!aceptadas) {\n        router.navigate(['/reglas-de-la-comunidad']);\n        return false;\n    }\n\n    return true;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
