var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.136,1,0.778]],["body/components/AppComponent.html",[0,0.209,1,1.288,2,1.045,3,0.185,4,0.159,5,0.86,6,0.86,7,0.86,8,0.159,9,2.846,10,0.414,11,1.616,12,3.922,13,0.272,14,0.274,15,4.27,16,1.185,17,3.922,18,2.984,19,0.733,20,5.245,21,1.131,22,4.17,23,2.586,24,3.462,25,2.844,26,3.534,27,0.86,28,1.802,29,1.802,30,1.835,31,1.185,32,5.288,33,1.288,34,1.288,35,1.185,36,4.621,37,3.118,38,4.621,39,0.185,40,0.333,41,5.978,42,5.978,43,1.215,44,3.897,45,2.123,46,2.573,47,0.801,48,4.621,49,3.568,50,0.95,51,4.621,52,4.621,53,1.227,54,3.922,55,3.462,56,1.131,57,3.118,58,5.375,59,2.417,60,4.621,61,4.17,62,3.353,63,1.616,64,5.699,65,3.846,66,5.699,67,2.616,68,0.794,69,4.621,70,2.844,71,3.118,72,3.922,73,1.96,74,4.621,75,3.462,76,4.621,77,2.096,78,0.807,79,0.025,80,0.626,81,0.294,82,0.711,83,3.507,84,0.801,85,0.965,86,1.036,87,1.131,88,4.837,89,1.373,90,1.555,91,4.27,92,2.773,93,3.353,94,3.118,95,3.353,96,1.721,97,3.353,98,0.364,99,3.462,100,2.42,101,3.353,102,1.835,103,0.707,104,0.711,105,0.397,106,4.621,107,0.915,108,3.353,109,3.353,110,3.353,111,1.331,112,0.185,113,0.431,114,3.353,115,3.353,116,3.353,117,3.353,118,2.512,119,1.113,120,3.353,121,3.353,122,3.353,123,3.353,124,3.353,125,1.518,126,3.353,127,3.353,128,1.035,129,4.621,130,0.711,131,0.86,132,1.185,133,1.185,134,0.86,135,1.461,136,0.86,137,0.86,138,0.758,139,0.86,140,0.758,141,1.185,142,1.185,143,0.758,144,0.758,145,0.86,146,0.758,147,0.86,148,0.758,149,0.86,150,0.86,151,0.758,152,0.86,153,0.758,154,0.86,155,0.758,156,0.86,157,0.86,158,0.86,159,0.758,160,0.86,161,0.86,162,0.758,163,0.86,164,0.758,165,0.86,166,0.807,167,0.581,168,0.86,169,0.758,170,0.86,171,0.758,172,0.711,173,0.86,174,0.758,175,0.665,176,0.807,177,0.86,178,0.016,179,0.016]],["title/guards/AuthGuard.html",[180,1.948,181,2.322]],["body/guards/AuthGuard.html",[3,0.23,4,0.197,8,0.197,10,0.374,13,0.277,14,0.254,21,1.06,26,2.796,30,1.655,39,0.23,40,0.3,43,1.154,45,2.195,47,0.925,50,0.625,56,1.327,59,2.788,68,0.892,70,3.627,79,0.025,84,0.925,87,1.17,89,1.583,90,1.753,96,1.552,103,0.697,104,0.883,105,0.493,107,1.137,112,0.23,113,0.535,119,1.003,125,1.936,130,1.132,178,0.018,179,0.018,180,3.335,181,3.603,182,2.811,183,3.536,184,5.893,185,3.603,186,6.215,187,4.415,188,5.339,189,5.339,190,5.339,191,4.532,192,1.332,193,1.269,194,5.339,195,1.193,196,3.5,197,1.649,198,3.286,199,3.286,200,4.532,201,6.215,202,5.275,203,3.977,204,5.58,205,4.166,206,3.022,207,3.603,208,5.339,209,3.022,210,3.024,211,3.721,212,4,213,4,214,3.086,215,2.468,216,3.254,217,5.339,218,1.286,219,2.564,220,2.182,221,1.767,222,1.369,223,2.121,224,4.166,225,2.811,226,4.166,227,4.532,228,3.603,229,3.121,230,3.121,231,4.166,232,4.166,233,3.536,234,4.166,235,2.358,236,3.536,237,3.536,238,3.536,239,3.121,240,3.121]],["title/components/BreadcrumbComponent.html",[0,0.136,138,0.778]],["body/components/BreadcrumbComponent.html",[0,0.197,1,0.679,2,0.967,3,0.166,4,0.142,5,0.77,6,0.77,7,0.77,8,0.142,10,0.384,11,1.899,13,0.264,14,0.267,19,0.55,21,1.219,23,1.941,25,2.633,26,2.24,27,0.77,28,1.781,29,1.791,31,1.097,33,0.679,34,0.679,35,1.097,39,0.276,40,0.308,43,1.185,44,3.067,45,2.023,47,0.741,50,0.861,53,0.849,55,3.205,56,1.184,59,1.814,61,2.026,65,2.887,68,0.767,70,3.532,77,1.941,78,0.723,79,0.025,80,0.59,81,0.317,82,0.636,84,0.863,85,0.804,86,0.863,87,0.849,89,1.03,90,1.167,92,2.793,94,2.887,96,1.593,98,0.666,103,0.506,104,0.636,105,0.355,107,0.819,112,0.166,113,0.386,119,1.308,128,0.927,130,0.907,131,0.77,132,1.097,133,1.097,134,0.77,135,1.392,136,0.77,137,0.77,138,1.227,139,0.77,140,0.679,141,1.097,142,1.097,143,0.679,144,0.679,145,0.77,146,0.679,147,0.77,148,0.679,149,0.77,150,0.77,151,0.679,152,0.77,153,0.679,154,0.77,155,0.679,156,0.77,157,0.77,158,0.77,159,0.679,160,0.77,161,0.77,162,0.679,163,0.77,164,0.679,165,0.77,166,0.723,167,0.52,168,0.77,169,0.679,170,0.77,171,0.679,172,0.636,173,0.77,174,0.679,175,0.596,176,0.723,177,0.77,178,0.014,179,0.014,192,0.967,193,0.794,207,2.887,215,2.438,216,2.609,222,1.405,241,1.405,242,2.549,243,2.24,244,4.277,245,4.505,246,3.631,247,2.847,248,4.277,249,4.277,250,1.814,251,4.277,252,2.24,253,1.941,254,3.205,255,4.277,256,1.856,257,1.242,258,2.425,259,1.405,260,4.983,261,4.277,262,3.532,263,2.023,264,4.277,265,3.003,266,4.277,267,4.277,268,5.43,269,0.895,270,1.941,271,4.277,272,1.941,273,3.873,274,1.496,275,3.733,276,4.229,277,4.277,278,3.631,279,1.405,280,4.277,281,3.003,282,3.631,283,1.512,284,4.277,285,3.342,286,3.631,287,2.887,288,4.277,289,4.277,290,4.277,291,3.631,292,2.549,293,3.003,294,2.633,295,4.277,296,4.277,297,3.873,298,2.887,299,5.739,300,3.205,301,3.631,302,4.277,303,4.277,304,4.277,305,3.003,306,3.003,307,3.003,308,3.003,309,3.003,310,3.003,311,4.983,312,3.003,313,3.003,314,4.983,315,3.003,316,4.277,317,3.003,318,0.723,319,3.003,320,3.003,321,1.848,322,2.549,323,3.003,324,3.003,325,3.003,326,2.549,327,2.25,328,2.549,329,2.25,330,3.631,331,3.205,332,2.549,333,3.205,334,3.205,335,3.003,336,3.003,337,3.003,338,3.873,339,2.421,340,4.702,341,5.43,342,5.43,343,1.321,344,0.986,345,1.848,346,1.405,347,1.784,348,2.887,349,1.192,350,0.723,351,1.405,352,0.986,353,1.848,354,1.118,355,2.24,356,4.277,357,1.362,358,1.273,359,3.003,360,3.003,361,1.362,362,1.05,363,1.461]],["title/components/CategoriasAdminComponent.html",[0,0.136,140,0.778]],["body/components/CategoriasAdminComponent.html",[0,0.202,1,0.712,2,1,3,0.174,4,0.149,5,0.808,6,0.808,7,0.808,8,0.149,10,0.283,13,0.202,14,0.202,27,0.808,28,1.79,29,1.79,31,1.135,33,0.712,34,0.712,35,1.135,39,0.174,40,0.319,43,1.125,47,0.767,50,1.01,57,2.987,59,2.353,78,1.066,79,0.025,80,0.692,81,0.385,82,0.938,84,1.05,85,0.944,86,1.013,87,0.878,98,0.48,103,0.737,104,0.668,105,0.373,107,0.86,112,0.174,113,0.405,119,1.066,130,1.176,131,0.808,132,1.135,133,1.135,134,0.808,135,1.423,136,0.808,137,0.808,138,1.254,139,0.808,140,1.254,141,1.423,142,1.135,143,0.712,144,0.712,145,0.808,146,0.712,147,0.808,148,0.712,149,0.808,150,0.808,151,0.712,152,0.808,153,0.712,154,0.808,155,0.712,156,0.808,157,0.808,158,0.808,159,0.712,160,0.808,161,0.808,162,0.712,163,0.808,164,0.712,165,0.808,166,0.759,167,0.546,168,0.808,169,0.712,170,0.808,171,0.712,172,0.668,173,0.808,174,0.712,175,0.625,176,0.759,177,0.808,178,0.015,179,0.015,222,1.454,241,1.454,256,1.905,257,1.285,258,2.489,259,1.454,263,2.066,279,2.194,318,1.232,322,3.757,343,1.367,344,1.035,346,1.035,347,1.454,350,0.759,351,1.454,352,1.035,354,1.174,362,1.102,363,1.533,364,5.751,365,5.751,366,2.674,367,5.554,368,2.169,369,2.895,370,3.148,371,5.116,372,4.426,373,5.116,374,5.116,375,4.961,376,2.895,377,5.116,378,4.09,379,5.548,380,2.724,381,2.008,382,3.744,383,2.987,384,5.116,385,3.151,386,3.151,387,4.426,388,3.524,389,3.151,390,4.342,391,4.426,392,3.151,393,3.151,394,3.151,395,2.895,396,3.151,397,3.151,398,2.987,399,3.151,400,2.177,401,3.151,402,2.724,403,3.151,404,3.151,405,3.151,406,3.151,407,1.251,408,1.783,409,1.783,410,1.429,411,1.65,412,2.126,413,2.126,414,2.126,415,1.65,416,3.151,417,1.783,418,2.895,419,3.452,420,5.548,421,3.151,422,4.426,423,2.674,424,3.151,425,3.151,426,3.151,427,3.151,428,3.151,429,4.342,430,3.151,431,4.426,432,3.151,433,1.336,434,3.151,435,3.151,436,2.674,437,3.151,438,3.151,439,2.674,440,1.336,441,3.151,442,3.415,443,2.987,444,1.285,445,1.548,446,4.709,447,1.877,448,2.987,449,2.505,450,4.426,451,4.426,452,4.426,453,1.174,454,1.939,455,1.174,456,1.102,457,1.65,458,1.783,459,1.035,460,1.336,461,1.939,462,1.174,463,1.939,464,1.251,465,1.65,466,1.336,467,1.939,468,1.65,469,1.102,470,1.174,471,1.429]],["title/components/CategoriasComponent.html",[0,0.136,143,0.778]],["body/components/CategoriasComponent.html",[0,0.143,1,0.404,2,0.652,3,0.099,4,0.085,5,0.458,6,0.458,7,0.458,8,0.085,10,0.258,11,1.008,13,0.266,14,0.254,16,0.739,17,2.447,18,1.509,19,0.626,21,1.146,25,1.774,27,0.458,28,1.657,29,1.657,31,0.739,33,0.404,34,0.404,35,0.739,39,0.2,40,0.208,43,1.235,44,2.229,45,1.547,46,1.403,47,0.5,50,1.002,53,0.572,56,0.967,61,1.207,67,2.351,68,0.742,73,1.222,77,2.21,78,0.872,79,0.025,80,0.539,81,0.38,82,0.768,84,0.924,85,1.029,86,1.105,87,0.904,89,0.694,90,0.488,92,0.87,94,1.945,96,1.074,98,0.597,102,1.145,103,0.696,104,0.379,105,0.212,107,0.488,112,0.099,113,0.23,118,1.34,119,1.284,125,1.365,128,0.552,130,1.166,131,0.458,132,0.739,133,0.739,134,0.458,135,1.065,136,0.458,137,0.458,138,0.939,139,0.458,140,0.404,141,0.739,142,0.739,143,0.939,144,0.404,145,0.458,146,0.404,147,0.458,148,0.404,149,0.458,150,0.458,151,0.404,152,0.458,153,0.404,154,0.458,155,0.404,156,0.458,157,0.458,158,0.458,159,0.939,160,0.739,161,0.458,162,0.404,163,0.458,164,0.404,165,0.458,166,0.431,167,1.12,168,0.458,169,0.404,170,0.458,171,0.404,172,0.379,173,0.458,174,0.404,175,0.904,176,0.431,177,0.458,178,0.01,179,0.01,192,0.652,193,0.672,195,1.049,197,1.783,215,1.65,222,0.947,241,0.947,245,1.207,247,1.308,252,1.509,256,1.349,257,0.837,258,1.762,259,0.947,263,1.547,269,0.8,274,1.008,275,3.413,279,1.933,285,2.804,286,2.447,287,3.075,297,1.207,318,0.872,327,3.649,343,0.89,344,0.587,345,1.1,346,1.365,347,1.497,349,1.65,350,1.461,351,1.365,352,0.947,354,0.666,355,2.175,358,0.758,361,0.811,362,1.008,367,2.447,368,1.536,369,2.05,370,2.229,376,2.05,378,1.945,383,1.945,395,2.05,398,1.945,400,1.547,402,1.774,407,0.71,408,1.012,409,1.012,410,0.811,411,2.175,412,1.207,413,1.207,415,0.936,417,1.012,418,1.631,440,2.604,444,1.64,447,1.536,448,1.945,449,1.631,453,0.666,455,1.349,456,0.625,457,2.386,458,2.05,459,1.19,462,1.074,464,1.145,465,1.896,466,1.222,469,1.791,470,1.814,471,1.308,472,1.518,473,2.16,474,1.774,475,2.882,476,2.444,477,2.757,478,1.945,479,3.622,480,2.882,481,3.622,482,3.622,483,3.622,484,2.803,485,3.074,486,3.622,487,5.123,488,5.123,489,3.622,490,2.351,491,3.622,492,2.557,493,2.351,494,1.365,495,2.447,496,3.526,497,4.154,498,2.447,499,2.447,500,4.154,501,3.622,502,2.882,503,2.151,504,2.386,505,0.966,506,1.788,507,3.074,508,1.788,509,2.803,510,1.631,511,2.447,512,4.154,513,2.16,514,1.945,515,2.16,516,1.788,517,2.16,518,2.16,519,4.154,520,2.16,521,2.16,522,1.788,523,2.16,524,3.153,525,2.312,526,2.021,527,3.713,528,2.882,529,2.882,530,1.788,531,2.882,532,1.277,533,1.536,534,2.713,535,2.16,536,2.447,537,1.788,538,1.788,539,1.308,540,2.882,541,2.882,542,1.896,543,1.788,544,1.097,545,1.788,546,1.788,547,1.788,548,2.882,549,1.945,550,1.788,551,1.788,552,1.788,553,4.87,554,2.447,555,1.788,556,1.774,557,1.788,558,1.788,559,2.882,560,1.788,561,2.16,562,1.788,563,1.788,564,2.447,565,1.788,566,2.882,567,2.447,568,1.788,569,1.788,570,1.788,571,2.16,572,1.788,573,1.788,574,2.447,575,1.145,576,1.788,577,1.788,578,1.788,579,2.447,580,2.447,581,2.447,582,1.207,583,1.1,584,1.34,585,1.34,586,1.012,587,1.34,588,1.34,589,0.811,590,1.518,591,1.34,592,1.788,593,3.622,594,1.518,595,1.788,596,1.788,597,1.518,598,1.788,599,1.518,600,1.207,601,4.556,602,1.788,603,1.788,604,2.882,605,1.788,606,2.882,607,2.447,608,1.788,609,2.882,610,1.518,611,1.788,612,1.308,613,1.788,614,1.518,615,1.788,616,1.788,617,1.788,618,1.518,619,2.05,620,2.713,621,1.788,622,1.788,623,1.788,624,1.788,625,1.788,626,1.788,627,1.788,628,1.788,629,1.788,630,1.788,631,1.788,632,1.788,633,4.154,634,2.882,635,1.788,636,1.788,637,1.788,638,1.1,639,1.788,640,1.788,641,0.936,642,0.87,643,1.518,644,1.788,645,1.1,646,1.788,647,1.207,648,1.788,649,1.1,650,2.447,651,1.34,652,1.788,653,4.556,654,1.945,655,1.518,656,1.788,657,1.518,658,1.518,659,1.34,660,1.518,661,1.518,662,1.518,663,1.518,664,1.518,665,1.518,666,1.518,667,1.518,668,1.518,669,0.71,670,1.788,671,0.811,672,1.788,673,1.788,674,1.788,675,1.518,676,2.447,677,2.882,678,4.154,679,2.882,680,2.882,681,2.882,682,2.882,683,2.882,684,2.791,685,2.16,686,2.175,687,2.882,688,2.882,689,2.882,690,2.882,691,2.882,692,2.16,693,2.447,694,2.882,695,4.154,696,2.447,697,1.509,698,1.945,699,2.447,700,2.447,701,2.882,702,2.882,703,1.34,704,2.882,705,2.447,706,2.447,707,2.882,708,2.882,709,1.34,710,1.308,711,1.518,712,1.518,713,1.788,714,2.065,715,1.788,716,1.518,717,1.012,718,1.536,719,1.536,720,1.34,721,1.762,722,1.788,723,1.403,724,1.518,725,1.1,726,2.16,727,2.882,728,1.631,729,1.518,730,1.518,731,0.936,732,1.207,733,0.936,734,1.518,735,1.518,736,2.05,737,1.1,738,0.87,739,1.788,740,1.1,741,1.631,742,1.788,743,1.631,744,0.936,745,1.945,746,1.1,747,1.012,748,1.518,749,1.34,750,1.518,751,1.788,752,1.788,753,1.774,754,2.16,755,0.87,756,1.518,757,1.207,758,1.34,759,1.34,760,1.34]],["title/interfaces/Comment.html",[761,0.939,762,1.561]],["body/interfaces/Comment.html",[3,0.221,4,0.189,8,0.189,10,0.359,13,0.277,14,0.28,19,0.863,39,0.221,40,0.374,46,1.947,68,0.836,79,0.025,81,0.403,90,1.42,98,0.763,102,1.589,112,0.339,178,0.018,179,0.018,192,1.559,193,1.229,195,1.178,269,0.919,283,1.528,318,0.964,440,1.697,459,2.084,474,2.462,477,3.272,503,1.49,504,2.095,505,1.49,525,2.619,532,1.307,533,2.451,544,1.671,619,2.422,641,2.095,642,1.947,669,2.63,671,2.622,710,1.815,761,1.67,762,2.36,763,1.815,764,2.462,765,2.978,766,3.376,767,3.202,768,2.978,769,3.205,770,2.451,771,3.511,772,3.272,773,2.813,774,3.511,775,3.511,776,2.7,777,2.7,778,2.7,779,3.202,780,3.558,781,2.944,782,3.511,783,3.202,784,2.7,785,2.7,786,2.7,787,2.462,788,2.462,789,2.462,790,2.265,791,2.462,792,2.462]],["title/injectables/CommentService.html",[218,0.829,793,2.118]],["body/injectables/CommentService.html",[3,0.207,4,0.177,8,0.177,10,0.557,13,0.267,14,0.197,16,1.277,19,0.851,21,0.988,30,1.486,39,0.207,40,0.358,43,1.185,47,0.863,50,0.958,53,1.184,56,0.988,63,1.741,68,0.766,78,1.436,79,0.025,80,0.706,81,0.394,82,1.264,84,1.129,85,0.804,86,0.863,98,0.647,103,0.706,104,0.793,105,0.443,111,1.486,112,0.207,113,0.481,128,1.917,130,1.264,167,0.863,178,0.017,179,0.017,192,1.125,195,1.107,218,1.199,221,1.587,223,1.977,243,2.607,247,2.259,250,2.111,253,2.259,269,0.895,270,2.259,283,1.538,380,3.064,381,2.705,444,1.445,459,2.04,505,1.42,525,2.378,526,2.423,532,1.348,533,2.529,542,2.607,544,1.594,586,2.118,638,3.064,669,1.977,762,2.896,766,3.407,768,2.423,769,3.343,793,3.064,794,1.698,795,3.177,796,2.423,797,4.164,798,2.929,799,2.929,800,4.226,801,3.73,802,4.978,803,4.226,804,4.978,805,3.775,806,3.743,807,3.36,808,4.024,809,2.818,810,3.36,811,4.226,812,3.73,813,4.978,814,3.26,815,4.226,816,4.978,817,3.743,818,3.064,819,4.978,820,4.226,821,4.978,822,4.978,823,3.743,824,1.977,825,4.226,826,2.423,827,4.978,828,3.743,829,2.818,830,4.226,831,4.226,832,4.978,833,3.743,834,2.607,835,2.818,836,3.743,837,1.96,838,1.96,839,3.743,840,2.303,841,3.743,842,3.743]],["title/components/ConfiguracionComponent.html",[0,0.136,144,0.778]],["body/components/ConfiguracionComponent.html",[0,0.238,1,0.99,2,1.246,3,0.242,4,0.207,5,1.123,6,1.123,7,1.123,8,0.207,13,0.273,14,0.258,24,4.13,27,1.123,28,1.845,29,1.845,31,1.414,33,0.99,34,0.99,35,1.414,37,3.72,53,1.257,79,0.024,80,0.652,87,1.094,103,0.749,105,0.518,107,1.195,112,0.242,113,0.563,131,1.123,132,1.414,133,1.414,134,1.123,135,1.623,136,1.123,137,1.123,138,1.431,139,1.123,140,0.99,141,1.414,142,1.414,143,0.99,144,1.431,145,1.123,146,0.99,147,1.123,148,0.99,149,1.123,150,1.123,151,0.99,152,1.123,153,0.99,154,1.123,155,0.99,156,1.123,157,1.123,158,1.123,159,0.99,160,1.123,161,1.123,162,0.99,163,1.123,164,0.99,165,1.123,166,1.055,167,1.045,168,1.123,169,0.99,170,1.123,171,0.99,172,0.928,173,1.123,174,0.99,175,1.342,176,1.055,177,1.123,178,0.019,179,0.019,257,1.6,258,2.935,368,2.558,407,1.74,415,2.294,442,3.896,443,3.72,445,2.214,454,3.393,796,2.682,824,2.189,843,3.718,844,4.679,845,5.512,846,5.512,847,5.512,848,5.512,849,5.512,850,3.393,851,4.679,852,4.679]],["title/components/DashboardComponent.html",[0,0.136,146,0.778]],["body/components/DashboardComponent.html",[0,0.179,1,0.572,2,0.854,3,0.14,4,0.12,5,0.649,6,0.649,7,0.649,8,0.12,10,0.339,11,1.752,13,0.246,14,0.212,18,1.978,19,0.8,21,1.296,23,2.273,26,2.806,27,0.649,28,1.745,29,1.745,31,0.969,33,0.572,34,0.572,35,0.969,39,0.14,40,0.272,43,1.188,46,1.232,47,0.655,50,0.898,56,0.75,63,1.321,68,0.769,71,3.38,73,1.602,78,0.61,79,0.025,80,0.535,81,0.34,82,0.537,83,2.325,84,0.783,85,0.907,86,0.974,87,0.897,98,0.686,100,1.978,103,0.689,104,0.537,105,0.3,107,0.691,112,0.14,113,0.325,119,1.088,125,0.832,128,0.782,130,1.136,131,0.649,132,0.969,133,0.969,134,0.649,135,1.284,136,0.649,137,0.649,138,0.572,139,0.649,140,0.572,141,0.969,142,0.969,143,0.572,144,0.572,145,0.649,146,1.132,147,0.649,148,0.572,149,0.649,150,0.649,151,0.572,152,0.649,153,0.572,154,0.649,155,0.572,156,0.649,157,0.649,158,0.649,159,1.132,160,0.969,161,0.649,162,0.572,163,0.649,164,0.572,165,0.649,166,0.61,167,0.439,168,0.649,169,0.572,170,0.649,171,0.572,172,0.537,173,0.649,174,0.572,175,0.503,176,0.61,177,0.649,178,0.013,179,0.013,193,1.111,195,0.701,197,1.166,209,1.433,211,2.138,215,1.5,222,1.241,241,1.241,256,1.683,257,1.097,258,2.198,259,1.241,263,1.866,269,0.843,272,1.714,273,3.793,275,1.897,279,1.241,282,3.206,283,0.91,285,3.083,287,4.319,318,0.61,326,3.206,327,2.83,328,3.206,331,2.83,332,3.206,333,2.83,334,2.83,339,2.138,343,1.166,344,0.832,346,0.832,347,2.01,349,1.006,350,1.354,351,1.484,352,0.832,354,1.683,355,2.943,358,1.074,361,1.149,362,0.885,368,1.916,388,1.978,390,4.548,398,2.549,400,2.229,407,1.006,411,2.623,412,1.709,413,1.709,414,1.709,442,3.683,444,1.808,447,2.124,453,0.943,454,3.298,455,1.407,456,1.58,466,1.074,469,1.321,471,1.149,494,1.646,499,3.206,509,3.38,536,3.206,539,1.714,575,1.5,582,2.549,583,1.558,584,1.897,589,1.149,597,2.149,599,3.206,660,2.149,661,2.149,662,2.149,663,2.149,664,2.149,665,2.149,666,2.149,667,2.149,686,2.623,714,1.602,718,1.602,719,1.916,721,1.838,723,1.232,725,1.558,731,1.326,737,2.781,738,1.232,743,2.835,744,1.326,745,3.616,747,2.557,757,1.709,844,4.548,850,2.325,853,2.149,854,3.777,855,3.777,856,3.134,857,2.138,858,4.518,859,3.777,860,4.77,861,4.518,862,3.033,863,3.385,864,2.532,865,2.138,866,3.38,867,3.777,868,2.549,869,3.584,870,2.532,871,3.206,872,3.777,873,3.777,874,3.777,875,3.777,876,3.777,877,3.777,878,2.532,879,3.753,880,3.777,881,6.584,882,6.584,883,3.777,884,3.206,885,3.206,886,3.777,887,3.777,888,3.777,889,3.777,890,3.777,891,3.777,892,3.777,893,3.777,894,3.777,895,3.777,896,4.015,897,3.777,898,3.777,899,2.532,900,3.777,901,3.777,902,3.777,903,2.532,904,2.532,905,1.978,906,2.325,907,2.532,908,2.532,909,3.777,910,2.149,911,1.897,912,2.149,913,1.558,914,1.897,915,3.777,916,2.149,917,2.149,918,2.532,919,2.532,920,2.532,921,2.532,922,2.532,923,2.532,924,2.532,925,3.777,926,3.777,927,2.549,928,3.777,929,3.777,930,3.206,931,3.206,932,3.777,933,3.777,934,3.777,935,3.777,936,3.777,937,3.777,938,2.83,939,2.532,940,1.433,941,2.532,942,2.532,943,1.433,944,2.83,945,2.532,946,2.149,947,2.532,948,2.532,949,2.532,950,2.149,951,2.532,952,1.897,953,3.777,954,2.532,955,1.897,956,1.897,957,2.83,958,2.532,959,1.897,960,2.532,961,2.149,962,1.897]],["title/components/DetalleComponent.html",[0,0.136,148,0.778]],["body/components/DetalleComponent.html",[0,0.165,1,0.501,2,0.771,3,0.189,4,0.105,5,0.568,6,0.568,7,0.568,8,0.105,13,0.088,14,0.088,16,0.568,19,0.439,21,0.44,22,2.303,27,0.568,28,1.714,29,1.714,31,0.875,33,0.501,34,0.501,35,0.875,39,0.122,40,0.246,43,1.256,44,2.562,45,1.742,47,0.591,50,1.012,61,1.494,68,0.439,78,0.822,79,0.025,80,0.553,81,0.374,82,0.723,83,1.363,84,0.925,85,1.037,86,1.113,87,1.003,94,2.303,96,1.271,98,0.37,103,0.735,104,0.469,105,0.262,107,0.604,112,0.122,113,0.285,118,1.659,119,1.339,125,1.66,130,1.179,131,0.568,132,0.875,133,0.875,134,0.568,135,1.199,136,0.568,137,0.568,138,1.057,139,0.568,140,0.501,141,0.875,142,0.875,143,0.501,144,0.501,145,0.568,146,0.501,147,0.568,148,1.057,149,0.568,150,0.568,151,0.501,152,0.568,153,0.501,154,0.568,155,0.501,156,0.568,157,0.568,158,0.568,159,1.057,160,0.875,161,0.568,162,0.501,163,0.568,164,0.501,165,0.568,166,0.533,167,0.384,168,0.568,169,0.501,170,0.568,171,0.501,172,0.469,173,0.568,174,0.501,175,0.44,176,0.533,177,0.568,178,0.012,179,0.012,222,1.121,241,1.121,245,1.494,254,3.999,256,1.551,257,0.991,258,2.026,259,1.121,262,1.363,263,1.742,269,0.512,273,1.494,279,2.041,287,2.303,318,1.127,321,2.1,339,1.931,343,1.054,344,0.728,346,1.827,347,2.067,348,1.494,349,2.006,350,1.593,351,2.011,352,1.753,353,1.363,354,0.825,355,1.787,357,2.292,362,1.767,363,1.078,368,1.765,369,2.356,376,2.356,395,2.356,400,1.882,402,2.1,407,0.879,408,1.253,409,1.253,410,1.005,415,1.16,417,1.253,418,1.253,453,0.825,455,1.271,456,0.774,457,1.787,458,1.253,459,1.537,460,0.939,462,1.271,463,1.363,464,1.653,465,2.18,466,1.765,467,1.363,469,2.246,470,2.071,471,1.005,476,2.303,484,2.303,485,3.534,490,2.647,492,2.879,493,2.647,494,1.537,495,2.896,498,3.97,503,2.28,504,2.18,505,1.131,514,3.753,533,1.447,534,2.557,544,0.822,561,2.557,567,2.896,571,2.557,575,1.355,582,1.494,583,1.363,584,1.659,585,1.659,586,1.253,587,1.659,588,1.659,589,1.005,590,1.88,591,1.659,594,1.88,600,2.303,607,1.88,618,1.88,619,1.988,620,2.557,645,2.562,649,2.562,654,3.156,655,2.896,657,2.896,658,1.88,659,1.659,668,1.88,669,1.355,671,1.548,675,2.896,684,2.449,697,1.787,699,2.896,703,1.659,705,2.896,706,2.896,709,1.659,710,1.548,714,1.447,718,1.765,719,1.765,721,1.66,723,2.276,724,1.88,725,1.363,726,1.659,728,1.253,732,1.494,733,2.18,736,3.25,737,2.879,738,2.276,741,2.356,743,3.021,755,1.078,757,1.494,758,2.557,759,1.659,760,1.659,762,2.421,766,2.026,768,1.66,770,0.939,788,2.562,793,2.879,797,3.109,805,1.494,851,2.896,913,1.363,914,3.119,943,1.253,963,1.88,964,3.412,965,4.163,966,3.412,967,4.163,968,5.742,969,5.052,970,5.052,971,4.163,972,4.677,973,3.412,974,3.412,975,2.214,976,2.214,977,2.214,978,3.412,979,2.214,980,5.052,981,2.214,982,2.214,983,2.214,984,2.214,985,2.896,986,2.214,987,2.557,988,2.896,989,2.214,990,2.214,991,2.214,992,2.214,993,4.677,994,2.214,995,2.214,996,2.214,997,2.214,998,2.214,999,2.214,1000,2.214,1001,2.214,1002,2.214,1003,2.214,1004,1.88,1005,2.214,1006,2.214,1007,2.214,1008,2.214,1009,2.214,1010,4.677,1011,2.214,1012,2.214,1013,2.214,1014,3.412,1015,2.214,1016,2.214,1017,3.412,1018,2.214,1019,2.214,1020,0.939,1021,3.412,1022,2.214,1023,2.214,1024,2.214,1025,4.677,1026,2.214,1027,3.412,1028,2.214,1029,2.214,1030,2.214,1031,2.214,1032,2.214,1033,2.214,1034,2.214,1035,2.214,1036,1.88,1037,2.214,1038,2.214,1039,3.412,1040,3.412,1041,3.412,1042,3.412,1043,3.412,1044,3.412,1045,3.412,1046,3.412,1047,3.412,1048,3.412,1049,3.412,1050,2.896,1051,2.557,1052,2.809,1053,3.412,1054,2.214,1055,1.88,1056,1.88,1057,2.214,1058,2.214,1059,2.214,1060,2.557,1061,2.214,1062,1.88,1063,3.412,1064,1.363,1065,1.363,1066,1.787,1067,1.363,1068,2.214,1069,2.214,1070,1.659,1071,1.88,1072,2.214,1073,2.214,1074,2.214,1075,2.214,1076,2.214,1077,2.214,1078,2.214,1079,2.214,1080,2.214,1081,2.214]],["title/components/FooterComponent.html",[0,0.136,34,0.778]],["body/components/FooterComponent.html",[0,0.226,1,0.888,2,1.162,3,0.217,4,0.186,5,1.007,6,1.007,7,1.007,8,0.186,10,0.352,11,1.798,13,0.275,14,0.249,16,1.318,21,1.02,22,4.102,27,1.007,28,1.828,29,1.828,31,1.318,33,0.888,34,1.374,35,1.318,37,3.469,39,0.217,40,0.37,50,0.59,53,1.02,56,1.02,68,0.781,77,2.757,79,0.024,80,0.608,81,0.25,85,0.634,86,0.681,87,1.02,89,1.238,90,1.403,99,3.851,100,2.692,103,0.608,105,0.465,107,1.072,112,0.217,113,0.505,131,1.007,132,1.318,133,1.318,134,1.007,135,1.559,136,1.007,137,1.007,138,0.888,139,1.007,140,0.888,141,1.318,142,1.318,143,0.888,144,0.888,145,1.007,146,0.888,147,1.007,148,0.888,149,1.007,150,1.007,151,0.888,152,1.007,153,0.888,154,1.007,155,0.888,156,1.007,157,1.007,158,1.007,159,0.888,160,1.007,161,1.007,162,0.888,163,1.007,164,0.888,165,1.007,166,0.946,167,0.681,168,1.007,169,0.888,170,1.007,171,0.888,172,1.214,173,1.007,174,0.888,175,0.78,176,0.946,177,1.007,178,0.017,179,0.017,197,1.587,238,4.363,240,3.851,246,4.363,257,1.492,269,0.771,445,1.798,505,1.09,532,1.162,539,2.332,612,2.332,686,2.692,824,2.042,1082,3.335,1083,5.14,1084,3.469,1085,6.078,1086,5.14,1087,5.14,1088,4.863,1089,5.14,1090,5.14,1091,5.73,1092,5.14,1093,3.929,1094,5.14,1095,5.14,1096,6.919,1097,5.14,1098,6.471,1099,4.363,1100,5.14,1101,5.14,1102,5.14,1103,5.14,1104,5.14,1105,3.851,1106,5.14,1107,5.14,1108,4.363,1109,5.14,1110,5.14,1111,5.14,1112,5.14,1113,5.14,1114,5.14,1115,4.363,1116,4.363,1117,4.363,1118,4.363,1119,5.14,1120,4.363,1121,4.363,1122,5.14]],["title/components/ForbiddenComponent.html",[0,0.136,151,0.778]],["body/components/ForbiddenComponent.html",[0,0.241,1,1.016,2,1.266,3,0.249,4,0.213,5,1.152,6,1.152,7,1.152,8,0.213,10,0.403,11,1.959,13,0.241,14,0.178,26,2.933,27,1.152,28,1.849,29,1.849,31,1.152,33,1.016,34,1.016,35,1.436,37,3.78,73,2.375,75,4.196,79,0.024,80,0.663,90,1.528,103,0.532,105,0.532,112,0.249,113,0.578,131,1.152,132,1.436,133,1.436,134,1.152,135,1.638,136,1.152,137,1.152,138,1.016,139,1.152,140,1.016,141,1.436,142,1.436,143,1.016,144,1.016,145,1.152,146,1.016,147,1.152,148,1.016,149,1.152,150,1.152,151,1.444,152,1.152,153,1.016,154,1.152,155,1.016,156,1.152,157,1.152,158,1.152,159,1.016,160,1.152,161,1.152,162,1.016,163,1.152,164,1.016,165,1.152,166,1.082,167,0.779,168,1.152,169,1.016,170,1.152,171,1.016,172,0.952,173,1.152,174,1.016,175,0.892,176,1.082,177,1.152,178,0.019,179,0.019,182,3.78,192,1.266,193,1.04,195,1.04,274,1.959,283,1.349,511,4.754,532,1.016,539,2.541,820,4.754,1123,3.814,1124,4.754,1125,4.754,1126,5.601,1127,4.754,1128,4.754,1129,4.196,1130,6.388,1131,5.601,1132,5.601,1133,4.494,1134,4.494,1135,5.601]],["title/components/LoginComponent.html",[0,0.136,153,0.778]],["body/components/LoginComponent.html",[0,0.178,1,0.569,2,0.85,3,0.139,4,0.119,5,0.645,6,0.645,7,0.645,8,0.119,10,0.337,11,1.315,13,0.268,14,0.246,16,0.964,19,0.642,21,1.186,22,1.698,23,1.706,27,0.645,28,1.744,29,1.744,31,0.645,33,0.569,34,0.569,35,0.964,39,0.139,40,0.271,43,1.187,45,1.86,46,2.19,47,0.651,50,0.916,53,0.991,59,1.594,68,0.768,73,1.594,78,0.606,79,0.025,80,0.533,81,0.239,82,0.533,83,1.548,84,0.865,85,0.863,86,0.926,87,0.893,89,1.615,96,1.4,98,0.542,99,3.741,100,2.936,102,1.493,103,0.632,104,0.533,105,0.298,107,0.687,112,0.139,113,0.323,119,0.905,125,1.756,128,0.777,131,0.645,132,0.964,133,0.964,134,0.645,135,1.28,136,0.645,137,0.645,138,0.569,139,0.645,140,0.569,141,0.964,142,0.964,143,0.569,144,0.569,145,0.645,146,0.569,147,0.645,148,0.569,149,0.645,150,0.645,151,0.569,152,0.645,153,1.129,154,0.645,155,0.569,156,0.645,157,0.645,158,0.645,159,0.569,160,0.645,161,0.645,162,0.569,163,0.645,164,0.569,165,0.645,166,0.606,167,0.436,168,0.645,169,0.569,170,0.645,171,0.569,172,0.533,173,0.645,174,0.569,175,0.499,176,0.606,177,0.645,178,0.013,179,0.013,185,2.537,187,4.201,193,1.199,195,0.698,196,3.416,197,1.161,198,2.314,199,2.314,203,3.37,206,2.826,210,1.829,211,2.826,212,3.741,214,3.128,215,2.308,216,2.615,219,1.548,220,1.317,222,1.235,225,2.537,227,3.191,228,3.606,229,1.885,230,4.659,235,1.424,241,1.235,256,1.676,257,1.091,259,1.235,263,1.86,269,0.749,270,1.706,273,2.537,274,1.315,279,1.756,318,0.606,321,1.548,343,1.161,344,0.827,345,1.548,346,2.006,347,2.161,348,1.698,349,2.227,350,1.203,351,1.842,352,1.479,354,1.676,357,1.141,358,1.594,361,2.042,362,1.574,363,1.829,400,0.937,433,2.378,445,1.315,453,1.4,455,1.676,456,1.574,460,1.067,461,1.548,462,1.86,464,1.493,465,1.317,466,1.067,468,1.969,469,1.746,470,1.4,471,1.141,494,1.64,518,2.817,520,2.817,521,2.817,526,1.829,532,1.129,575,1.493,589,1.141,600,1.698,645,3.073,649,3.827,650,4.238,651,2.817,686,1.317,697,1.969,711,2.135,714,2.117,717,2.826,718,1.067,719,1.067,721,1.224,731,2.357,733,1.317,736,1.424,740,1.548,743,2.826,753,1.548,755,1.829,757,1.698,824,1.493,857,1.424,865,2.826,905,1.317,940,1.424,943,1.424,944,1.885,1020,1.909,1070,1.885,1105,2.817,1115,3.191,1116,3.191,1117,3.191,1118,3.191,1120,3.191,1121,3.191,1125,3.191,1136,2.135,1137,2.817,1138,4.993,1139,5.278,1140,4.536,1141,3.759,1142,3.759,1143,2.817,1144,4.993,1145,4.501,1146,3.759,1147,5.811,1148,3.759,1149,4.238,1150,3.759,1151,2.516,1152,3.741,1153,2.537,1154,3.759,1155,1.969,1156,2.314,1157,2.516,1158,3.191,1159,3.191,1160,3.759,1161,3.759,1162,2.516,1163,2.537,1164,2.817,1165,3.191,1166,2.516,1167,3.191,1168,2.516,1169,3.191,1170,2.537,1171,2.516,1172,2.516,1173,2.516,1174,3.191,1175,2.516,1176,1.548,1177,5.344,1178,3.759,1179,2.516,1180,2.516,1181,2.516,1182,2.516,1183,2.516,1184,2.135,1185,2.516,1186,2.516,1187,4.501,1188,2.516,1189,2.516,1190,2.516,1191,2.516,1192,2.817,1193,2.516,1194,2.516,1195,2.135,1196,2.516,1197,2.516,1198,2.516,1199,2.516,1200,2.516,1201,3.759,1202,2.537,1203,2.537,1204,2.516,1205,1.548,1206,1.885,1207,2.516,1208,2.516,1209,3.372,1210,1.698,1211,1.548,1212,2.135,1213,2.516,1214,2.516,1215,1.698,1216,1.698,1217,2.135,1218,2.516,1219,2.516,1220,2.516,1221,2.135,1222,2.516,1223,2.516,1224,2.516]],["title/components/ModalConfirmacionComponent.html",[0,0.136,155,0.778]],["body/components/ModalConfirmacionComponent.html",[0,0.21,1,0.764,2,1.05,3,0.187,4,0.16,5,0.866,6,0.866,7,0.866,8,0.16,10,0.303,11,1.625,13,0.21,14,0.259,18,2.433,19,0.735,27,0.866,28,1.803,29,1.803,31,0.866,33,0.764,34,0.764,35,1.191,39,0.257,50,0.9,56,1.135,68,0.796,73,1.97,79,0.025,80,0.55,81,0.381,85,0.857,86,0.92,87,1.135,89,1.119,90,1.268,92,2.261,98,0.504,102,1.845,103,0.4,105,0.4,112,0.187,113,0.434,125,1.526,131,0.866,132,1.191,133,1.191,134,0.866,135,1.466,136,0.866,137,0.866,138,0.764,139,0.866,140,0.764,141,1.191,142,1.191,143,0.764,144,0.764,145,0.866,146,0.764,147,0.866,148,0.764,149,0.866,150,0.866,151,0.764,152,0.866,153,0.764,154,0.866,155,1.293,156,1.787,157,0.866,158,0.866,159,0.764,160,0.866,161,0.866,162,0.764,163,0.866,164,0.764,165,0.866,166,0.814,167,0.586,168,0.866,169,0.764,170,0.866,171,0.764,172,0.716,173,0.866,174,0.764,175,0.671,176,0.814,177,0.866,178,0.016,179,0.016,192,1.05,193,1.061,196,2.994,209,1.912,241,1.526,257,1.349,259,1.526,262,2.079,272,2.108,283,1.119,298,4.045,343,1.435,344,1.11,346,1.526,347,1.879,349,1.342,350,1.557,351,1.526,352,1.526,355,1.769,361,1.533,378,4.045,381,2.108,453,2.233,455,1.73,456,1.181,457,1.769,459,1.526,460,1.97,462,2.13,464,1.342,466,1.97,469,1.181,470,1.258,532,1.05,539,2.108,556,2.859,612,2.108,684,2.433,714,2.252,717,1.912,718,1.97,719,1.433,721,2.261,723,2.261,728,1.912,731,1.769,734,4.853,741,1.912,749,2.531,753,2.859,754,2.531,755,1.644,906,2.859,944,2.531,1064,3.268,1065,2.859,1066,2.994,1067,2.859,1124,4.853,1128,3.943,1203,3.859,1205,2.079,1206,2.531,1225,5.258,1226,4.18,1227,2.868,1228,4.646,1229,3.481,1230,6.345,1231,4.507,1232,4.646,1233,4.646,1234,5.309,1235,4.646,1236,4.646,1237,4.282,1238,4.646,1239,3.379,1240,4.646,1241,5.258,1242,5.718,1243,4.853,1244,3.379,1245,4.646,1246,3.379,1247,5.994,1248,3.379,1249,5.718,1250,5.718,1251,3.135,1252,3.379,1253,3.943,1254,5.309,1255,3.379,1256,3.379,1257,3.379,1258,2.868,1259,2.531,1260,3.379,1261,3.379,1262,2.868,1263,2.868,1264,3.943,1265,2.531,1266,3.379]],["title/components/NavbarComponent.html",[0,0.136,33,0.778]],["body/components/NavbarComponent.html",[0,0.196,1,0.671,2,0.959,3,0.164,4,0.14,5,0.761,6,0.761,7,0.761,8,0.14,10,0.266,11,1.483,13,0.272,14,0.226,16,1.088,18,2.221,19,0.856,20,4.85,21,1.18,27,0.761,28,1.779,29,1.779,31,1.088,33,1.221,34,0.671,35,1.088,39,0.164,40,0.305,43,1.182,45,2.012,47,0.735,50,0.97,53,0.983,55,3.178,56,1.072,63,1.483,65,2.003,67,2.802,68,0.873,79,0.025,80,0.502,81,0.189,84,0.936,85,0.96,86,1.03,87,0.983,89,0.715,92,1.444,96,1.58,98,0.46,103,0.724,104,0.629,105,0.351,107,1.158,112,0.164,113,0.381,119,0.715,125,1.626,131,0.761,132,1.088,133,1.088,134,0.761,135,1.385,136,0.761,137,0.761,138,0.671,139,0.761,140,0.671,141,1.088,142,1.088,143,0.671,144,0.671,145,0.761,146,0.671,147,0.761,148,0.671,149,0.761,150,0.761,151,0.671,152,0.761,153,0.671,154,0.761,155,1.221,156,1.569,157,0.761,158,0.761,159,0.671,160,0.761,161,0.761,162,0.671,163,0.761,164,0.671,165,0.761,166,0.715,167,0.514,168,0.761,169,0.671,170,0.761,171,0.671,172,0.629,173,0.761,174,0.671,175,0.589,176,0.715,177,0.761,178,0.014,179,0.014,187,4.584,193,1.237,196,3.459,198,1.827,199,1.827,203,2.003,215,1.685,219,1.827,220,1.554,222,1.394,223,1.966,225,2.863,228,3.341,235,1.68,241,1.394,253,1.925,256,1.844,257,1.231,259,1.394,263,2.012,269,0.811,274,1.483,279,1.877,298,2.863,301,3.601,343,1.31,344,0.975,346,1.775,347,2.055,349,1.685,350,0.715,351,1.775,352,1.394,353,1.827,354,1.58,357,1.346,358,1.259,362,1.483,363,2.064,368,2.099,400,2.128,407,1.179,433,2.291,447,2.701,453,1.105,455,1.105,456,1.483,460,1.259,461,1.827,462,1.105,464,1.179,465,1.554,468,1.554,469,1.483,470,1.105,471,1.346,494,1.877,539,2.451,556,2.611,575,1.685,589,1.346,638,1.827,645,1.827,676,2.519,714,1.259,718,1.259,719,1.259,731,2.592,740,1.827,814,2.064,824,1.179,863,4.688,865,2.401,910,2.519,911,2.224,912,2.519,913,1.827,940,1.68,1052,2.003,1088,4.202,1149,4.85,1159,3.601,1163,3.645,1164,3.178,1165,3.601,1184,2.519,1203,4.011,1209,3.178,1210,2.003,1211,1.827,1212,2.519,1215,2.003,1216,2.003,1226,2.003,1229,4.047,1251,2.863,1267,2.519,1268,4.242,1269,4.242,1270,4.95,1271,4.242,1272,4.95,1273,5.401,1274,5.401,1275,2.968,1276,5.401,1277,2.968,1278,2.968,1279,2.968,1280,2.611,1281,2.968,1282,2.968,1283,2.968,1284,2.968,1285,4.242,1286,2.968,1287,4.242,1288,4.242,1289,2.968,1290,2.519,1291,2.519,1292,2.968,1293,2.224,1294,2.968,1295,2.968,1296,2.968,1297,2.968,1298,2.968,1299,2.968,1300,4.242,1301,2.968,1302,2.968,1303,2.968,1304,4.242,1305,3.601,1306,3.178,1307,2.968,1308,2.968,1309,4.242,1310,2.968,1311,2.968]],["title/components/NotificacionBannerComponent.html",[0,0.136,159,0.778]],["body/components/NotificacionBannerComponent.html",[0,0.187,1,0.618,2,0.904,3,0.151,4,0.129,5,0.702,6,0.702,7,0.702,8,0.129,10,0.245,11,1.819,13,0.247,14,0.254,19,0.787,21,1.032,25,2.462,27,0.702,28,1.762,29,1.762,31,1.026,33,0.618,34,0.618,35,1.026,39,0.221,40,0.288,43,1.073,47,0.693,50,0.952,53,1.032,63,1.399,65,2.699,67,2.264,68,0.787,71,3.51,77,2.708,79,0.025,80,0.473,81,0.33,84,0.901,85,0.933,86,1.002,87,0.938,89,1.253,92,2.693,103,0.655,104,0.58,105,0.324,111,1.087,112,0.151,113,0.352,125,1.553,131,0.702,132,1.026,133,1.026,134,0.702,135,1.334,136,0.702,137,0.702,138,0.618,139,0.702,140,0.618,141,1.026,142,1.026,143,0.618,144,0.618,145,0.702,146,0.618,147,0.702,148,0.618,149,0.702,150,0.702,151,0.618,152,0.702,153,0.618,154,0.702,155,0.618,156,0.702,157,0.702,158,0.702,159,1.176,160,1.627,161,0.702,162,0.618,163,0.702,164,0.618,165,0.702,166,0.659,167,0.474,168,0.702,169,0.618,170,0.702,171,0.618,172,0.58,173,0.702,174,0.618,175,0.938,176,0.659,177,0.702,178,0.014,179,0.014,192,0.904,195,0.742,197,1.235,210,1.946,215,2.295,222,1.314,223,2.198,241,1.314,252,2.095,253,1.815,256,1.761,257,1.161,259,1.314,263,1.937,278,3.395,279,1.961,283,0.963,294,2.462,298,3.51,318,1.253,343,1.235,344,0.899,346,1.314,347,1.899,349,1.087,350,1.504,351,2.084,352,1.553,357,1.815,358,1.16,361,1.241,362,1.653,363,1.331,368,2.005,400,1.937,407,1.087,444,1.161,455,1.019,456,1.399,457,2.476,458,1.549,462,1.49,466,1.16,468,1.433,469,1.653,470,1.019,505,0.58,526,1.946,533,1.16,539,1.815,556,2.462,582,4.431,583,3.957,612,1.815,697,2.095,714,2.206,717,2.264,718,1.16,719,1.16,720,2.997,721,1.331,725,1.684,726,2.05,728,1.549,736,1.549,738,1.331,741,2.264,744,1.433,745,3.51,746,1.684,747,2.264,748,2.322,749,2.05,750,2.322,753,1.684,754,2.05,755,1.331,824,1.588,826,2.301,850,4.041,857,2.944,865,2.264,879,2.05,946,3.395,952,2.997,955,2.05,956,2.997,957,3.897,959,2.05,961,2.322,962,3.542,1052,1.846,1158,3.395,1163,2.699,1170,2.699,1203,3.51,1205,2.462,1211,1.684,1251,2.699,1258,2.322,1312,5.458,1313,2.322,1314,4,1315,3.395,1316,4,1317,2.699,1318,4,1319,4.728,1320,4.728,1321,4,1322,4.728,1323,4.728,1324,5.201,1325,5.201,1326,2.736,1327,4,1328,5.779,1329,2.736,1330,4,1331,3.395,1332,4,1333,2.736,1334,4,1335,5.201,1336,4,1337,2.736,1338,3.395,1339,3.395,1340,3.271,1341,2.736,1342,2.699,1343,2.736,1344,4,1345,2.736,1346,2.736,1347,4,1348,5.533,1349,2.736,1350,4,1351,4,1352,4,1353,4,1354,2.736,1355,4,1356,2.05,1357,1.684,1358,2.322,1359,2.736,1360,2.736,1361,2.322,1362,4.728,1363,4,1364,2.736,1365,4,1366,2.736,1367,2.736,1368,2.736,1369,4,1370,2.736,1371,4,1372,4,1373,4,1374,2.736,1375,2.736,1376,4,1377,2.736,1378,2.736,1379,2.736,1380,2.736,1381,2.322,1382,4,1383,2.322,1384,2.322,1385,2.736,1386,4,1387,2.736,1388,2.736,1389,2.736,1390,2.736,1391,2.736,1392,2.736,1393,2.736,1394,2.736,1395,2.736,1396,2.736]],["title/interfaces/NotificacionGlobal.html",[761,0.939,1340,1.948]],["body/interfaces/NotificacionGlobal.html",[3,0.258,4,0.221,8,0.221,10,0.418,13,0.284,14,0.281,18,3.39,19,0.737,39,0.258,40,0.413,53,0.926,56,0.926,79,0.025,81,0.422,92,3.02,98,0.768,102,2.277,112,0.258,175,0.926,178,0.019,179,0.019,195,0.866,216,3.003,252,2.444,274,2.005,445,1.632,453,2.411,505,1.316,533,2.432,544,1.629,761,1.274,763,2.118,765,2.271,770,2.745,772,3.664,773,2.79,824,1.854,852,3.962,866,3.15,871,5.495,1084,3.15,1237,4.565,1340,3.246,1342,4.706,1397,3.962,1398,4.667,1399,5.495,1400,5.495,1401,5.734,1402,5.734]],["title/injectables/NotificacionService.html",[218,0.829,1357,2.118]],["body/injectables/NotificacionService.html",[3,0.221,4,0.189,8,0.189,10,0.518,13,0.274,14,0.242,19,0.668,23,2.357,30,1.586,39,0.221,40,0.374,43,1.072,47,0.9,49,2.695,50,0.975,53,1.031,56,1.214,63,2.139,71,4.128,77,2.357,78,1.391,79,0.025,80,0.683,81,0.389,82,1.224,84,1.147,85,0.645,86,0.692,98,0.433,103,0.724,105,0.473,111,1.586,112,0.221,113,0.513,128,1.604,130,1.296,175,1.031,178,0.018,179,0.018,195,1.135,218,1.251,221,1.694,223,2.063,243,2.721,247,2.357,250,2.203,270,2.357,294,3.764,381,2.775,444,1.887,445,1.817,505,1.224,510,2.941,524,3.903,532,1.175,542,2.721,544,1.566,647,3.506,770,2.203,792,3.198,794,1.812,796,2.528,798,3.024,799,2.721,807,3.506,809,2.941,814,3.301,818,3.198,824,2.063,834,2.721,837,3.203,838,2.091,840,2.458,850,4.212,857,3.462,866,3.506,868,3.506,1084,4.128,1338,5.192,1340,3.798,1342,4.529,1356,2.992,1357,3.198,1403,3.39,1404,6.116,1405,6.116,1406,3.994,1407,5.196,1408,5.196,1409,3.994,1410,4.41,1411,3.506,1412,4.41,1413,3.994,1414,3.994,1415,5.196,1416,5.196,1417,3.994,1418,5.196,1419,3.994,1420,2.695,1421,2.992,1422,3.994]],["title/components/NotificacionesComponent.html",[0,0.136,162,0.778]],["body/components/NotificacionesComponent.html",[0,0.191,1,0.645,2,0.932,3,0.158,4,0.135,5,0.732,6,0.732,7,0.732,8,0.135,13,0.222,14,0.191,27,0.732,28,1.771,29,1.771,31,1.057,33,0.645,34,0.645,35,1.057,39,0.158,40,0.297,43,1.044,47,0.715,49,2.782,50,0.961,56,0.818,58,2.421,59,1.749,78,1.166,79,0.025,80,0.666,81,0.357,82,1.026,84,1.016,85,0.666,86,0.715,87,0.818,98,0.61,102,1.637,103,0.694,105,0.338,112,0.158,113,0.367,119,0.993,130,1.026,131,0.732,132,1.057,133,1.057,134,0.732,135,1.36,136,0.732,137,0.732,138,1.199,139,0.732,140,0.645,141,1.057,142,1.057,143,0.645,144,0.645,145,0.732,146,0.645,147,0.732,148,0.645,149,0.732,150,0.732,151,0.645,152,0.732,153,0.645,154,0.732,155,0.645,156,0.732,157,0.732,158,0.732,159,0.645,160,1.057,161,0.732,162,1.199,163,0.732,164,0.645,165,0.732,166,0.687,167,0.494,168,0.732,169,0.645,170,0.732,171,0.645,172,0.605,173,0.732,174,0.645,175,0.961,176,0.687,177,0.732,178,0.014,179,0.014,209,2.334,216,2.159,222,1.355,241,1.355,256,1.803,257,1.197,259,1.355,263,1.976,279,1.849,297,2.782,318,0.687,338,1.925,340,2.137,343,1.273,344,0.937,346,1.986,347,2.131,349,2.107,350,1.579,351,2.154,352,2.072,353,3.264,354,1.063,357,2.553,358,1.21,361,1.294,362,1.693,363,1.388,368,2.053,369,2.741,376,2.741,381,1.871,395,2.741,407,1.133,408,3.002,409,1.615,410,1.294,415,1.494,417,1.615,418,3.002,443,2.782,444,1.197,445,1.442,453,1.536,454,1.756,455,1.063,456,0.998,457,1.494,458,1.615,459,0.937,460,1.21,461,1.756,462,1.063,463,1.756,464,1.133,465,1.494,466,1.21,467,1.756,468,1.494,469,2.332,470,2.184,471,1.294,484,3.579,505,1.026,524,2.98,527,3.268,542,3.242,544,0.687,612,2.406,703,3.089,710,1.294,714,1.21,717,1.615,718,2.053,719,2.053,720,3.089,721,2.006,723,2.006,732,2.782,733,2.159,735,2.421,736,3.185,737,1.756,738,1.388,743,1.615,744,2.535,745,2.782,746,2.538,747,2.334,755,2.006,756,2.421,759,3.089,768,2.356,770,2.249,850,3.992,857,2.334,879,2.137,938,2.137,940,1.615,943,2.741,952,2.137,955,2.137,956,2.137,957,3.089,959,2.137,962,3.089,1051,2.137,1060,2.137,1237,3.268,1259,3.089,1340,2.741,1342,3.579,1356,2.137,1357,3.609,1358,2.421,1361,2.421,1383,2.421,1384,2.421,1399,4.11,1400,2.421,1412,3.5,1423,2.421,1424,4.842,1425,4.123,1426,5.304,1427,5.304,1428,4.123,1429,5.304,1430,2.853,1431,4.123,1432,2.853,1433,2.853,1434,2.853,1435,4.123,1436,2.853,1437,2.853,1438,2.853,1439,2.853,1440,2.853,1441,2.853,1442,4.123,1443,4.842,1444,4.123,1445,2.853,1446,2.853,1447,2.853,1448,2.853,1449,2.853,1450,2.853,1451,2.853,1452,3.089,1453,4.123,1454,4.123,1455,4.123,1456,4.123,1457,4.123,1458,4.123,1459,4.123,1460,4.123,1461,2.853,1462,2.853,1463,2.853,1464,2.137,1465,2.421,1466,2.853,1467,3.5,1468,2.421,1469,4.123,1470,2.853,1471,2.853,1472,2.853,1473,4.123,1474,2.137,1475,2.853,1476,2.853,1477,2.853,1478,2.853,1479,2.853,1480,2.853,1481,2.853,1482,2.853]],["title/components/PerfilComponent.html",[0,0.136,164,0.778]],["body/components/PerfilComponent.html",[0,0.141,1,0.393,2,0.637,3,0.096,4,0.082,5,0.446,6,0.446,7,0.446,8,0.082,10,0.367,11,0.986,13,0.271,14,0.2,19,0.808,21,1.159,23,1.855,27,0.446,28,1.649,29,1.649,31,0.723,33,0.393,34,0.393,35,0.723,39,0.096,40,0.203,43,1.168,45,1.523,47,0.489,50,0.995,53,0.955,56,0.56,63,0.986,68,0.774,77,1.855,78,0.856,79,0.025,80,0.532,81,0.383,82,0.754,84,0.993,85,1.006,86,1.08,87,0.56,89,0.679,96,1.05,98,0.522,100,1.477,103,0.713,104,0.369,105,0.206,107,0.475,111,0.691,112,0.096,113,0.224,119,1.22,128,1.098,130,1.118,131,0.446,132,0.723,133,0.723,134,0.446,135,1.048,136,0.446,137,0.446,138,0.924,139,0.446,140,0.393,141,0.723,142,0.723,143,0.393,144,0.393,145,0.446,146,0.393,147,0.446,148,0.393,149,0.446,150,0.446,151,0.393,152,0.446,153,0.393,154,0.446,155,0.393,156,0.446,157,0.446,158,0.446,159,0.393,160,0.446,161,0.446,162,0.393,163,0.446,164,0.924,165,0.446,166,0.419,167,1.165,168,0.446,169,0.393,170,0.446,171,0.393,172,0.369,173,0.446,174,0.393,175,0.345,176,0.419,177,0.446,178,0.01,179,0.01,192,0.637,193,1.186,195,0.523,197,0.871,211,2.314,214,1.477,215,1.624,216,1.477,222,0.926,235,0.985,240,4.376,241,0.926,245,1.174,250,1.196,253,1.279,256,1.324,257,0.819,258,1.73,259,0.926,262,1.071,263,1.523,269,0.722,272,1.279,274,0.986,279,1.84,283,0.679,285,2.765,294,1.735,318,1.349,321,1.071,338,1.903,339,2.314,340,2.113,343,0.871,344,0.572,346,1.476,347,1.58,350,1.43,351,1.343,352,1.168,354,0.648,357,1.855,358,0.738,362,0.608,368,1.508,370,2.188,380,3.526,383,1.903,388,1.862,398,1.903,400,1.523,407,0.691,410,0.789,411,2.141,412,1.174,413,1.174,414,1.174,415,0.911,433,1.196,442,1.735,444,1.396,447,1.196,455,0.648,456,0.608,459,0.572,460,0.738,462,0.648,464,0.691,469,2.042,470,1.324,473,2.113,490,2.314,493,2.314,494,1.343,496,2.393,503,2.212,505,1.293,507,3.47,509,1.903,510,1.596,513,2.113,514,2.759,515,3.063,517,2.113,518,2.113,521,3.952,525,1.523,527,1.903,532,1.087,539,1.855,544,0.679,549,2.759,561,2.113,571,2.113,575,1.12,579,4.478,580,2.393,581,2.393,585,1.304,586,0.985,587,1.304,588,1.304,589,0.789,591,1.304,610,3.018,614,1.477,619,1.324,684,2.519,696,2.393,700,2.393,709,1.304,710,1.279,714,0.738,716,3.018,718,1.196,719,0.738,723,1.99,728,0.985,729,2.393,730,1.477,733,0.911,737,2.516,738,2.186,740,1.071,744,0.911,746,1.071,747,0.985,755,0.847,760,1.304,767,1.735,779,1.735,789,1.735,791,3.447,793,2.516,797,3.447,825,2.393,826,1.372,856,1.477,860,3.018,911,1.304,913,1.071,917,1.477,927,2.759,943,0.985,985,2.393,1004,1.477,1020,2.148,1051,1.304,1060,2.113,1062,1.477,1064,1.071,1065,1.071,1066,1.862,1067,1.071,1070,1.304,1071,1.477,1153,1.903,1155,1.477,1156,1.735,1170,1.903,1176,1.071,1192,1.304,1202,1.903,1211,1.071,1221,1.477,1262,2.393,1305,2.393,1306,4.376,1317,1.903,1464,2.113,1465,2.393,1468,2.393,1483,1.477,1484,2.82,1485,4.676,1486,4.81,1487,2.82,1488,4.089,1489,3.555,1490,2.82,1491,3.555,1492,3.555,1493,3.555,1494,4.493,1495,3.795,1496,4.493,1497,4.493,1498,2.82,1499,4.81,1500,4.089,1501,3.555,1502,3.555,1503,3.555,1504,4.493,1505,2.82,1506,1.74,1507,2.82,1508,4.089,1509,2.82,1510,2.82,1511,1.74,1512,4.089,1513,2.393,1514,4.089,1515,2.82,1516,1.74,1517,2.82,1518,1.74,1519,4.089,1520,2.82,1521,2.82,1522,1.74,1523,2.393,1524,1.74,1525,1.74,1526,1.74,1527,1.74,1528,1.74,1529,1.74,1530,1.74,1531,2.82,1532,1.74,1533,2.113,1534,1.74,1535,1.74,1536,1.74,1537,1.74,1538,1.74,1539,2.82,1540,2.113,1541,2.113,1542,3.952,1543,2.113,1544,2.113,1545,2.113,1546,2.113,1547,2.113,1548,2.113,1549,2.113,1550,2.113,1551,2.113,1552,1.903,1553,2.113,1554,3.604,1555,2.113,1556,2.113,1557,2.113,1558,2.113,1559,2.113,1560,3.56,1561,2.113,1562,2.113,1563,2.113,1564,1.903,1565,2.113,1566,2.113,1567,2.113,1568,2.113,1569,2.113,1570,2.113,1571,2.113,1572,2.113,1573,2.113,1574,2.113,1575,1.74,1576,2.82,1577,1.74,1578,4.089,1579,1.74,1580,1.74,1581,1.74,1582,1.74,1583,1.74,1584,1.74,1585,1.74,1586,2.82,1587,2.82,1588,2.82,1589,1.74,1590,1.74,1591,2.82,1592,1.74,1593,1.74,1594,2.82,1595,1.74,1596,1.74,1597,1.74,1598,1.477,1599,3.555,1600,2.82,1601,1.74,1602,1.74,1603,1.74,1604,2.82,1605,1.74,1606,1.74,1607,1.74,1608,3.555,1609,1.74,1610,2.82,1611,1.74,1612,1.74,1613,1.74,1614,2.82,1615,2.82,1616,1.74,1617,2.82,1618,1.74,1619,1.74,1620,1.74,1621,1.74,1622,1.74,1623,2.82,1624,2.82,1625,1.74,1626,1.74,1627,1.74,1628,1.477,1629,1.477,1630,1.74,1631,1.74,1632,1.74,1633,1.74,1634,1.74,1635,1.74,1636,1.74,1637,1.74,1638,1.74,1639,3.555,1640,1.74,1641,1.74,1642,2.82,1643,1.74,1644,1.74,1645,2.82,1646,2.82,1647,2.82,1648,2.82,1649,2.82,1650,2.82,1651,4.81,1652,2.82,1653,2.82,1654,2.82,1655,2.82,1656,1.74,1657,1.477,1658,2.82,1659,2.82,1660,2.82,1661,1.74,1662,1.74,1663,1.74,1664,1.74]],["title/interfaces/Post.html",[503,1.282,761,0.939]],["body/interfaces/Post.html",[3,0.216,4,0.185,8,0.185,10,0.35,13,0.282,14,0.283,16,1.002,19,0.831,39,0.216,40,0.369,46,2.951,68,0.735,79,0.025,81,0.418,90,1.066,98,0.76,102,2.034,112,0.335,178,0.017,179,0.017,192,1.541,193,1.222,195,1.169,252,2.046,269,0.769,283,1.461,318,0.941,440,2.172,459,2.069,474,3.153,477,3.234,503,1.908,504,2.046,505,1.504,525,2.655,532,1.292,533,2.423,544,1.665,619,2.407,641,3.176,642,2.951,669,2.615,671,2.593,710,1.773,761,1.655,762,1.773,763,1.773,764,2.405,765,2.951,766,3.144,767,2.405,768,1.901,769,2.046,770,2.423,771,2.637,772,3.234,773,2.781,774,2.637,775,2.637,776,3.457,777,3.457,778,3.457,779,3.517,780,3.733,781,3.234,782,3.856,783,3.875,784,2.637,785,2.637,786,2.637,787,2.405,788,2.405,789,2.405,790,2.212,791,2.405,792,2.405,1665,3.907]],["title/interfaces/PostCategory.html",[388,1.802,761,0.939]],["body/interfaces/PostCategory.html",[3,0.268,4,0.229,8,0.229,10,0.602,13,0.277,14,0.277,16,1.244,39,0.268,40,0.423,59,2.489,79,0.024,80,0.776,81,0.417,98,0.74,112,0.268,167,0.84,178,0.02,179,0.02,192,1.096,195,0.9,252,2.54,269,0.728,318,1.414,329,4.398,330,4.982,334,4.398,350,1.414,388,3.074,419,4.427,440,2.976,444,1.408,446,4.982,447,2.489,448,3.961,449,3.322,505,1.447,544,1.414,641,3.435,692,3.634,761,1.323,763,2.2,765,2.36,773,2.856,906,3.613,1666,4.116,1667,4.85,1668,5.87,1669,3.613]],["title/injectables/PostCategoryService.html",[218,0.829,411,1.802]],["body/injectables/PostCategoryService.html",[3,0.211,4,0.181,8,0.181,10,0.539,13,0.27,14,0.238,16,1.294,19,0.648,21,1.001,30,1.516,39,0.211,40,0.363,43,1.192,47,0.874,50,0.963,53,1.001,56,1.193,57,4.056,63,1.764,68,0.648,73,2.139,78,1.361,79,0.025,80,0.669,81,0.382,82,1.198,84,1.135,85,0.815,86,0.874,98,0.414,103,0.711,104,0.809,105,0.452,111,1.516,112,0.211,113,0.491,128,1.856,130,1.274,167,1.042,178,0.017,179,0.017,192,1.14,195,1.192,197,1.558,218,1.215,221,1.619,223,2.004,247,2.289,250,2.139,253,2.289,269,0.757,270,2.289,381,2.727,388,3.481,411,2.642,414,2.577,440,2.953,442,4.091,444,1.745,505,1.361,510,2.855,524,3.105,526,2.455,532,1.359,542,2.642,544,1.635,638,3.105,641,2.642,647,3.405,794,1.732,796,2.455,798,2.959,799,2.959,800,4.282,801,3.78,803,4.282,805,3.813,807,3.405,809,3.402,810,3.405,814,3.273,818,3.105,826,2.455,829,2.855,830,4.282,834,2.642,835,2.855,837,1.999,838,1.999,840,2.35,927,3.405,1152,3.78,1420,2.577,1421,2.861,1670,5.558,1671,3.241,1672,4.503,1673,5.045,1674,3.818,1675,6.79,1676,4.282,1677,5.045,1678,3.818,1679,3.818,1680,3.78,1681,5.045,1682,3.818,1683,4.282,1684,5.045,1685,5.045,1686,4.282,1687,3.818,1688,3.818,1689,3.241,1690,3.241,1691,3.818]],["title/injectables/PostService.html",[218,0.829,490,1.948]],["body/injectables/PostService.html",[3,0.191,4,0.163,8,0.163,10,0.559,13,0.274,14,0.268,16,1.209,19,0.742,21,1.145,30,1.371,39,0.191,40,0.339,43,1.157,47,0.817,50,0.958,53,0.936,56,1.238,63,2.017,68,0.742,78,1.455,79,0.025,80,0.715,81,0.396,82,1.28,84,1.126,85,0.761,86,0.817,89,1.389,90,1.286,98,0.374,103,0.683,104,0.731,105,0.408,111,1.371,112,0.191,113,0.444,128,1.865,130,1.321,167,1.175,172,0.999,178,0.016,179,0.016,195,1.237,197,1.456,210,2.294,218,1.135,221,1.464,223,1.872,243,2.468,247,2.139,250,2.446,253,2.139,269,0.866,270,2.617,274,1.648,300,3.532,381,2.617,433,2.446,440,2.446,444,1.675,473,3.532,478,3.181,490,2.668,503,2.322,505,1.437,510,2.668,524,3.551,525,2.602,526,2.294,532,1.506,542,2.468,544,1.654,549,3.181,586,1.953,638,2.901,642,2.294,647,3.181,669,2.58,698,3.181,770,1.999,780,3.551,783,2.901,794,1.566,796,2.294,798,2.811,799,2.811,801,3.532,805,3.623,807,3.181,809,3.265,810,3.181,811,4.001,812,3.532,814,3.274,818,2.901,826,2.294,834,2.468,835,2.668,837,1.807,838,1.807,840,2.124,868,3.181,1169,4.001,1241,4.001,1411,3.181,1420,2.329,1672,3.532,1686,4.001,1692,2.929,1693,4.714,1694,4.714,1695,4.714,1696,4.714,1697,3.451,1698,4.714,1699,4.714,1700,4.714,1701,3.451,1702,4.714,1703,3.532,1704,4.714,1705,3.451,1706,4.714,1707,5.368,1708,2.929,1709,4.714,1710,3.451,1711,4.714,1712,3.451,1713,3.532,1714,4.714,1715,3.451,1716,3.451,1717,3.451,1718,3.451,1719,3.451,1720,3.451]],["title/interfaces/PostView.html",[761,0.939,790,1.948]],["body/interfaces/PostView.html",[3,0.231,4,0.197,8,0.197,10,0.374,13,0.28,14,0.281,19,0.826,39,0.231,40,0.385,46,2.029,68,0.758,79,0.025,81,0.339,90,1.138,98,0.734,102,1.656,112,0.344,178,0.018,179,0.018,192,1.546,193,1.193,195,1.193,269,0.802,283,1.42,318,1.004,440,1.768,459,1.755,474,2.566,477,3.337,503,1.553,504,2.184,505,1.497,525,2.631,532,1.208,533,2.266,544,1.66,619,2.196,641,2.184,642,2.029,669,2.655,671,2.675,710,1.892,761,1.696,762,1.892,763,1.892,764,2.566,765,3.025,766,3.2,767,2.566,768,2.029,769,2.184,770,2.266,771,2.814,772,3.024,773,2.6,774,2.814,775,2.814,776,2.814,777,2.814,778,2.814,779,3.628,780,3.956,781,3.337,782,3.978,783,3.956,784,2.814,785,2.814,786,2.814,787,2.566,788,2.566,789,3.288,790,3.024,791,3.288,792,3.288]],["title/components/RegisterComponent.html",[0,0.136,169,0.778]],["body/components/RegisterComponent.html",[0,0.18,1,0.578,2,0.86,3,0.141,4,0.121,5,0.656,6,0.656,7,0.656,8,0.121,10,0.229,11,1.331,13,0.273,14,0.247,16,1.291,19,0.802,21,0.999,27,0.656,28,1.747,29,1.747,31,0.976,33,0.578,34,0.578,35,0.976,39,0.141,40,0.274,43,1.139,45,1.875,47,0.659,50,0.92,53,0.755,56,0.755,59,1.614,67,2.849,68,0.824,79,0.025,80,0.667,81,0.32,84,0.659,85,0.911,86,0.977,87,0.755,89,0.917,91,3.771,92,1.244,96,1.417,98,0.546,100,1.993,103,0.637,104,0.542,105,0.303,107,0.698,112,0.141,113,0.329,119,0.917,130,0.807,131,0.656,132,0.976,133,0.976,134,0.656,135,1.291,136,0.656,137,0.656,138,0.578,139,0.656,140,0.578,141,0.976,142,0.976,143,0.578,144,0.578,145,0.656,146,0.578,147,0.656,148,0.578,149,0.656,150,0.656,151,0.578,152,0.656,153,0.578,154,0.656,155,0.578,156,0.656,157,0.656,158,0.656,159,0.578,160,0.656,161,0.656,162,0.578,163,0.656,164,0.578,165,0.656,166,0.616,167,0.443,168,0.656,169,1.138,170,0.656,171,0.578,172,1.067,173,0.656,174,0.578,175,0.508,176,0.616,177,0.656,178,0.013,179,0.013,193,1.248,195,0.934,196,2.954,197,1.175,198,3.694,199,3.694,211,2.849,214,2.818,215,2.516,216,2.636,222,1.25,235,1.447,241,1.25,243,1.993,250,2.135,254,2.851,256,1.693,257,1.105,259,1.25,262,1.574,263,1.875,269,0.808,272,1.726,279,1.654,283,1.095,297,1.726,339,2.154,343,1.175,344,0.84,345,1.574,346,1.853,347,1.972,349,1.016,350,0.917,351,1.493,352,0.84,353,1.574,354,1.693,355,1.339,357,1.726,358,1.084,361,1.726,362,0.894,369,2.572,376,2.572,382,2.568,395,2.572,402,2.342,408,1.447,409,1.447,410,1.16,417,1.447,418,1.447,433,1.614,444,1.105,447,2.135,453,0.952,456,1.589,459,0.84,460,1.084,462,0.952,463,1.574,464,1.511,469,1.76,470,0.952,484,1.726,494,1.654,509,2.568,517,2.851,523,2.851,526,1.852,527,3.807,532,0.86,574,3.23,575,1.511,589,1.16,645,1.574,649,2.342,651,1.916,684,2.954,685,2.851,686,2.954,697,1.993,723,1.244,731,1.993,733,1.339,738,1.244,741,1.447,743,1.447,744,1.339,746,1.574,808,2.568,826,1.852,862,1.447,865,2.154,905,1.339,927,2.568,940,1.447,1020,1.927,1052,1.726,1064,1.574,1065,1.574,1066,2.818,1067,1.574,1140,5.502,1143,1.916,1155,2.954,1156,2.342,1167,2.171,1174,3.858,1176,1.574,1195,2.171,1202,2.568,1205,1.574,1206,1.916,1209,1.916,1210,1.726,1215,1.726,1216,1.726,1237,1.726,1265,1.916,1411,3.397,1474,1.916,1485,4.788,1495,4.377,1540,2.851,1541,2.851,1542,4.497,1543,2.851,1544,2.851,1545,2.851,1546,2.851,1547,2.851,1548,2.851,1549,2.851,1550,2.851,1551,2.851,1552,2.568,1553,2.851,1554,4.226,1555,2.851,1556,2.851,1557,2.851,1558,2.851,1559,2.851,1560,4.051,1561,2.851,1562,2.851,1563,2.851,1564,2.568,1565,2.851,1566,2.851,1567,2.851,1568,2.851,1569,2.851,1570,2.851,1571,2.851,1572,2.851,1573,2.851,1574,2.851,1657,2.171,1721,2.171,1722,3.23,1723,4.273,1724,5.034,1725,3.805,1726,4.545,1727,3.805,1728,4.545,1729,5.034,1730,2.557,1731,2.851,1732,2.557,1733,2.557,1734,2.557,1735,2.557,1736,3.771,1737,2.557,1738,3.805,1739,2.557,1740,2.557,1741,2.557,1742,3.805,1743,2.557,1744,3.805,1745,2.557,1746,3.805,1747,2.557,1748,2.557,1749,2.557,1750,2.557,1751,1.726,1752,2.557,1753,2.557,1754,2.557,1755,2.557,1756,2.557,1757,3.805,1758,3.805,1759,3.805,1760,2.557,1761,6.003,1762,2.557,1763,2.557,1764,2.557,1765,2.171,1766,2.171,1767,2.557]],["title/components/ReglasDeLaComunidadComponent.html",[0,0.136,171,0.778]],["body/components/ReglasDeLaComunidadComponent.html",[0,0.139,1,0.388,2,0.63,3,0.095,4,0.081,5,0.44,6,0.44,7,0.44,8,0.081,10,0.154,11,0.975,13,0.283,14,0.277,16,1.346,18,1.46,19,0.614,21,1.313,27,0.44,28,1.645,29,1.645,31,0.715,33,0.388,34,0.388,35,0.715,39,0.095,40,0.201,43,0.887,45,1.511,47,0.483,50,0.788,53,1.107,56,1.207,59,1.183,68,0.835,72,3.443,73,1.72,79,0.025,80,0.33,81,0.109,84,0.703,85,0.655,86,0.703,87,0.949,89,0.848,90,1.679,91,2.09,96,1.039,100,1.46,102,1.108,103,0.528,104,0.364,105,0.203,107,0.468,112,0.095,113,0.221,119,0.977,125,1.157,131,0.44,132,0.715,133,0.715,134,0.44,135,1.04,136,0.44,137,0.44,138,0.388,139,0.44,140,0.388,141,0.715,142,0.715,143,0.388,144,0.388,145,0.44,146,0.388,147,0.44,148,0.388,149,0.44,150,0.44,151,0.388,152,0.44,153,0.388,154,0.44,155,0.917,156,1.292,157,0.44,158,0.44,159,0.388,160,0.44,161,0.44,162,0.388,163,0.44,164,0.388,165,0.44,166,0.413,167,0.773,168,0.44,169,0.388,170,0.44,171,0.917,172,1.431,173,0.44,174,0.388,175,1,176,0.413,177,0.44,178,0.009,179,0.009,185,1.882,191,2.367,192,1.26,193,0.887,195,0.887,196,2.503,197,1.797,200,2.367,210,1.974,214,1.46,215,1.772,230,2.09,233,2.367,239,2.09,241,0.916,250,1.183,252,1.46,253,1.265,257,0.81,259,0.916,269,0.913,272,1.598,274,2.1,279,1.333,283,1.264,285,1.056,318,1.151,329,2.09,331,2.09,333,2.09,338,2.737,339,1.579,343,0.861,344,0.564,345,1.056,346,1.912,347,2.145,348,1.882,349,1.772,350,1.213,351,1.912,352,1.57,354,1.662,355,0.899,357,1.265,358,1.72,361,1.598,362,1.56,370,2.168,380,1.716,381,1.265,410,0.779,433,2.027,444,1.85,445,1.95,448,1.882,453,2.431,455,1.312,456,1.995,459,0.564,460,0.728,462,1.039,464,1.108,466,2.027,467,1.056,468,0.899,469,1.897,470,1.511,471,1.265,494,1.333,510,1.579,515,3.039,520,2.09,525,1.039,526,0.835,532,1.226,533,2.226,534,2.09,535,2.09,539,1.265,542,1.46,556,1.716,575,1.108,589,0.779,600,1.882,649,1.056,684,0.899,685,2.09,686,3.047,692,3.039,693,4.057,697,0.899,698,2.737,710,1.265,714,1.494,717,1.994,718,0.728,719,0.728,721,0.835,723,1.714,725,1.056,728,1.579,731,2.124,732,1.158,733,1.845,736,1.579,738,1.714,740,1.056,741,1.579,744,1.845,747,1.579,755,1.974,758,2.09,797,1.716,810,2.737,812,2.09,824,1.108,826,1.357,829,1.579,865,1.579,866,1.882,868,1.158,885,4.057,896,2.09,906,1.716,913,1.716,930,3.443,931,2.367,938,2.639,940,1.579,943,0.972,950,1.457,987,2.09,988,2.367,1020,1.183,1050,2.367,1055,2.367,1056,1.457,1064,2.168,1065,1.056,1066,1.46,1067,1.056,1099,2.367,1105,3.581,1108,2.367,1137,2.09,1143,3.039,1153,1.882,1155,2.336,1163,2.737,1164,2.639,1202,1.882,1205,1.056,1210,1.158,1215,1.882,1216,2.377,1217,2.367,1226,1.158,1229,3.039,1231,1.457,1243,2.367,1251,1.882,1253,2.367,1259,1.286,1263,1.457,1264,2.367,1265,1.286,1280,2.746,1290,1.457,1291,1.457,1306,2.09,1315,2.367,1331,2.99,1381,1.457,1467,1.457,1474,2.09,1513,2.367,1533,2.09,1598,2.367,1628,2.367,1629,2.367,1703,2.09,1722,2.367,1723,2.367,1751,3.399,1765,1.457,1766,1.457,1768,4.605,1769,4.605,1770,1.457,1771,2.789,1772,2.789,1773,4.056,1774,2.789,1775,3.523,1776,2.789,1777,3.523,1778,4.056,1779,4.056,1780,4.056,1781,4.056,1782,1.717,1783,2.789,1784,2.789,1785,2.789,1786,2.367,1787,2.789,1788,1.717,1789,2.789,1790,4.78,1791,2.789,1792,1.717,1793,2.789,1794,1.717,1795,2.789,1796,2.789,1797,1.717,1798,4.78,1799,2.789,1800,2.789,1801,6.456,1802,2.789,1803,2.789,1804,2.789,1805,2.789,1806,2.789,1807,4.056,1808,2.789,1809,2.789,1810,2.789,1811,2.789,1812,2.789,1813,2.789,1814,4.056,1815,2.789,1816,2.789,1817,2.789,1818,2.789,1819,2.789,1820,2.367,1821,2.789,1822,2.789,1823,4.78,1824,2.789,1825,2.789,1826,2.789,1827,2.789,1828,2.789,1829,2.789,1830,2.789,1831,2.789,1832,2.789,1833,2.789,1834,2.789,1835,4.056,1836,2.789,1837,2.789,1838,2.789,1839,2.789,1840,2.789,1841,2.789,1842,2.789,1843,2.789,1844,2.789,1845,2.789,1846,2.789,1847,2.789,1848,2.789,1849,4.056,1850,2.789,1851,2.789,1852,2.789,1853,2.789,1854,2.789,1855,2.789,1856,2.789,1857,2.789,1858,2.789,1859,2.367,1860,2.789,1861,2.789,1862,2.789,1863,2.789,1864,2.789,1865,2.789,1866,2.789,1867,2.789,1868,2.789,1869,2.639,1870,2.789,1871,2.789,1872,2.789,1873,2.789,1874,2.789,1875,2.789,1876,2.789,1877,2.789,1878,2.789,1879,2.789,1880,2.789,1881,2.789,1882,2.789,1883,2.789,1884,2.789,1885,2.789,1886,2.789,1887,3.443,1888,2.789,1889,2.789,1890,2.789,1891,2.789,1892,2.09,1893,2.789,1894,2.789,1895,1.717,1896,1.717,1897,1.717,1898,1.717,1899,1.717,1900,2.789,1901,1.717,1902,1.717,1903,2.789,1904,1.717,1905,1.717,1906,2.789,1907,2.367,1908,2.789,1909,2.789,1910,2.789,1911,1.717,1912,1.286,1913,1.717,1914,2.789,1915,2.789,1916,2.789,1917,2.789,1918,2.789,1919,2.789,1920,2.789,1921,2.789,1922,2.789,1923,2.789,1924,2.789,1925,2.789,1926,2.789,1927,2.789,1928,2.789,1929,2.789,1930,2.789,1931,2.789,1932,2.789,1933,2.789,1934,2.789,1935,2.789,1936,2.789,1937,2.789,1938,2.789,1939,2.789,1940,4.056,1941,4.056,1942,1.717,1943,2.789,1944,1.717,1945,1.717,1946,1.717,1947,1.717,1948,3.523,1949,1.717,1950,1.717,1951,1.717,1952,2.789,1953,3.523,1954,1.717,1955,1.717,1956,2.789,1957,1.717,1958,1.717,1959,2.789,1960,1.717,1961,1.717,1962,1.717,1963,1.717]],["title/interfaces/Report.html",[761,0.939,1964,2.322]],["body/interfaces/Report.html",[3,0.237,4,0.203,8,0.203,10,0.385,13,0.215,14,0.215,19,0.875,39,0.237,40,0.392,68,0.699,79,0.025,81,0.44,82,1.485,89,1.513,90,1.484,98,0.739,103,0.508,112,0.237,178,0.018,179,0.018,192,1.23,193,1.01,195,1.01,269,0.816,274,2.197,283,1.513,291,5.332,318,1.31,350,1.31,419,4.239,449,3.079,476,4.674,503,2.56,505,1.502,525,2.34,532,1.23,544,1.595,619,2.34,642,3.057,654,4.239,659,4.076,669,2.495,761,1.171,762,3.053,763,1.946,765,2.647,766,3.057,769,3.29,770,2.307,772,3.079,773,2.647,1036,4.617,1293,4.076,1676,4.617,1912,4.076,1964,3.671,1965,3.641,1966,3.671,1967,5.332,1968,6.282,1969,5.44,1970,5.44,1971,5.974,1972,5.974,1973,4.617]],["title/injectables/ReportService.html",[218,0.829,492,2.118]],["body/injectables/ReportService.html",[3,0.185,4,0.158,8,0.158,10,0.51,13,0.255,14,0.225,16,1.183,19,0.851,21,1.13,30,1.328,39,0.185,40,0.332,43,1.215,47,0.8,50,0.95,53,0.916,56,1.226,63,1.613,68,0.851,78,1.272,79,0.025,80,0.625,81,0.362,82,1.119,84,1.117,85,0.853,86,0.915,98,0.686,103,0.707,104,0.709,105,0.396,111,1.328,112,0.185,113,0.43,119,1.487,128,1.907,130,1.207,167,0.8,178,0.016,179,0.016,195,0.856,197,1.758,218,1.111,221,1.418,223,1.832,243,2.416,247,2.093,269,0.854,270,2.093,272,2.093,283,1.553,318,1.371,350,1.524,419,4.271,445,1.613,449,3.223,476,4.697,478,3.113,492,2.839,494,1.871,505,1.43,523,4.266,525,2.121,532,1.287,535,4.266,544,1.487,575,1.832,612,2.093,619,2.3,620,3.457,642,2.245,643,2.839,654,4.47,669,2.097,766,2.77,768,1.628,769,2.766,787,2.839,794,1.518,796,2.245,797,2.839,798,2.766,799,2.766,808,3.113,814,3.306,815,4.833,824,1.832,826,2.245,829,2.611,831,3.916,834,2.416,835,2.611,837,1.752,838,1.752,896,4.627,1127,3.916,1293,3.457,1452,3.457,1680,3.457,1703,3.457,1859,3.916,1912,4.266,1964,4.416,1966,4.167,1967,3.916,1973,3.916,1974,2.839,1975,5.693,1976,4.614,1977,4.614,1978,4.614,1979,3.345,1980,3.916,1981,4.614,1982,3.916,1983,4.614,1984,4.614,1985,3.345,1986,4.614,1987,4.614,1988,3.345,1989,4.614,1990,3.345,1991,4.614,1992,4.614,1993,3.916,1994,4.614,1995,3.345,1996,3.345,1997,3.345,1998,3.345,1999,3.345,2000,3.345,2001,4.614,2002,3.345,2003,3.345,2004,3.345,2005,3.345,2006,3.345,2007,3.345,2008,3.345,2009,3.345,2010,3.345,2011,3.345,2012,3.345,2013,3.345]],["title/guards/RoleGuard.html",[180,1.948,2014,2.578]],["body/guards/RoleGuard.html",[3,0.238,4,0.204,8,0.204,10,0.489,12,4.632,13,0.262,14,0.262,19,0.701,21,1.083,23,2.476,26,3.4,30,1.712,39,0.238,40,0.31,43,1.168,44,3.358,45,2.23,47,0.946,50,0.647,53,1.083,56,1.189,68,0.908,70,3.358,75,4.088,77,2.476,78,1.038,79,0.025,80,0.51,81,0.274,82,0.914,84,0.946,87,1.189,89,1.597,90,1.489,96,1.606,98,0.468,103,0.708,104,0.914,105,0.51,107,1.176,112,0.238,113,0.554,119,1.314,125,1.967,128,1.331,130,1.157,178,0.018,179,0.018,180,3.089,182,2.909,192,1.234,193,1.231,195,1.013,202,5.342,204,5.342,206,3.089,207,4.247,209,3.089,210,2.098,213,4.088,214,2.858,218,1.314,221,1.828,222,1.416,235,2.44,269,0.995,494,2.133,532,1.234,575,1.712,698,2.909,856,3.4,916,3.659,1129,4.088,1280,3.358,1317,3.683,1820,4.632,1869,4.088,2014,4.088,2015,3.659,2016,5.457,2017,5.457,2018,5.457,2019,5.457,2020,6.294,2021,4.311,2022,5.457,2023,5.457,2024,5.457,2025,5.457,2026,5.457,2027,4.311,2028,4.311,2029,4.311,2030,5.988,2031,4.311,2032,4.311,2033,4.311,2034,4.311]],["title/injectables/RoleService.html",[218,0.829,2035,2.578]],["body/injectables/RoleService.html",[3,0.222,4,0.19,8,0.19,10,0.468,13,0.242,14,0.242,15,3.909,21,1.036,30,1.596,39,0.222,47,0.904,50,0.92,56,1.217,63,1.825,68,0.901,73,2.6,77,3.049,78,0.968,79,0.025,80,0.476,81,0.255,82,0.852,84,1.165,87,1.293,89,1.688,90,1.424,98,0.719,103,0.476,105,0.476,112,0.222,113,0.517,119,0.968,125,2.139,128,1.241,130,1.3,178,0.018,179,0.018,192,1.179,193,1.138,206,3.686,207,3.521,209,3.686,210,2.539,213,4.879,218,1.257,221,1.705,223,2.072,237,4.429,269,1.028,272,2.367,274,1.825,283,1.477,400,2.284,794,1.824,856,3.696,862,2.953,869,3.911,905,3.327,1129,3.909,1280,3.774,1452,3.909,1669,3.211,1869,4.879,1982,4.429,2035,3.909,2036,3.412,2037,5.218,2038,6.131,2039,5.204,2040,5.218,2041,6.131,2042,6.131,2043,4.02,2044,4.429,2045,5.218,2046,5.218,2047,4.02,2048,5.218,2049,5.793,2050,5.218,2051,5.218,2052,4.02,2053,6.131,2054,4.02,2055,5.218,2056,3.412,2057,5.793]],["title/interfaces/Score.html",[671,1.561,761,0.939]],["body/interfaces/Score.html",[3,0.227,4,0.194,8,0.194,10,0.367,13,0.279,14,0.281,19,0.841,39,0.227,40,0.38,46,1.993,68,0.751,79,0.025,81,0.371,90,1.118,98,0.732,102,1.626,112,0.342,178,0.018,179,0.018,192,1.554,193,1.236,195,1.215,269,0.793,283,1.487,318,1.272,440,1.737,459,1.735,474,2.52,477,3.704,503,1.525,504,2.765,505,1.503,525,2.626,532,1.321,533,2.24,544,1.667,619,2.438,641,2.145,642,1.993,669,2.644,671,3.061,710,2.396,761,1.685,762,1.858,763,1.858,764,2.52,765,3.005,766,3.184,767,2.52,768,1.993,769,2.145,770,2.24,771,2.764,772,2.989,773,2.57,774,2.764,775,2.764,776,2.764,777,2.764,778,2.764,779,3.25,780,3.597,781,2.989,782,3.564,783,3.25,784,3.564,785,3.564,786,3.564,787,3.25,788,3.25,789,2.52,790,2.318,791,2.52,792,2.52]],["title/injectables/ScoreService.html",[218,0.829,493,1.948]],["body/injectables/ScoreService.html",[3,0.191,4,0.164,8,0.164,10,0.542,13,0.279,14,0.268,16,1.211,19,0.857,21,1.29,23,2.142,25,2.906,30,1.374,39,0.191,40,0.34,43,1.158,47,0.818,50,0.936,53,0.937,63,2.182,68,0.742,78,1.391,79,0.025,80,0.683,81,0.384,82,1.224,84,1.107,85,0.762,86,0.818,89,1.137,98,0.375,103,0.683,104,0.733,105,0.409,111,1.374,112,0.191,113,0.445,128,1.927,130,1.224,167,1.001,175,0.937,178,0.016,179,0.016,192,1.067,193,1.259,195,1.158,197,1.783,218,1.137,221,1.467,223,1.875,239,3.537,243,2.472,247,2.62,250,2.002,253,2.142,269,0.867,270,2.142,274,2.019,283,1.503,294,2.906,300,3.537,321,2.129,382,3.186,400,1.759,433,2.002,440,2.002,444,1.676,445,1.651,477,3.774,478,3.186,493,2.672,503,1.759,504,2.472,505,1.463,513,4.674,514,4.386,525,2.527,544,1.634,549,3.186,554,4.008,564,4.008,586,1.958,619,2.324,669,2.293,671,3.054,712,4.008,781,2.672,794,1.569,796,2.297,798,2.815,799,2.815,809,3.269,814,3.208,829,2.672,834,2.472,835,2.672,837,1.812,838,1.812,1411,3.186,1669,2.906,1680,3.537,1708,2.936,1713,3.537,1966,3.186,2058,2.936,2059,4.721,2060,4.721,2061,4.721,2062,4.721,2063,4.721,2064,4.721,2065,4.721,2066,4.721,2067,3.459,2068,4.721,2069,4.721,2070,6.045,2071,3.459,2072,4.721,2073,4.008,2074,4.721,2075,4.721,2076,3.459,2077,4.721,2078,4.721,2079,4.721,2080,3.459,2081,4.721,2082,3.459,2083,3.459,2084,3.459,2085,3.459,2086,3.459,2087,3.459,2088,3.459,2089,3.459]],["title/interfaces/User.html",[761,0.939,1020,1.459]],["body/interfaces/User.html",[3,0.26,4,0.222,8,0.222,10,0.421,13,0.228,14,0.186,16,1.205,19,0.903,39,0.26,40,0.414,79,0.025,80,0.768,81,0.43,82,1.375,98,0.769,112,0.26,172,1.22,178,0.019,179,0.019,193,1.31,269,0.705,283,1.131,318,1.131,350,1.131,444,1.671,445,1.643,447,2.441,449,3.258,505,1.436,544,1.387,619,2.417,684,2.46,761,1.282,763,2.131,765,2.286,773,2.801,856,3.015,862,3.673,869,3.543,905,3.015,906,3.543,1020,2.441,1066,3.398,1155,3.398,1156,3.543,1485,3.885,1552,3.885,1560,3.885,1564,3.885,1669,3.993,1731,3.52,1736,4.313,1751,4.379,1892,4.313,2090,3.987,2091,5.757]],["title/injectables/UserService.html",[218,0.829,494,1.131]],["body/injectables/UserService.html",[3,0.133,4,0.114,8,0.114,10,0.551,13,0.265,14,0.256,16,0.931,19,0.902,21,0.969,23,1.648,30,0.954,39,0.133,40,0.261,43,1.188,47,0.629,49,2.955,50,1.014,53,1.22,56,0.969,59,1.54,63,2.261,67,3.119,68,0.869,78,1.452,79,0.025,80,0.749,81,0.397,82,1.278,84,1.147,85,0.846,86,0.908,87,0.721,89,1.419,98,0.736,103,0.62,104,0.509,105,0.284,111,0.954,112,0.133,113,0.309,119,1.327,125,1.193,128,1.898,130,1.341,175,1.094,178,0.012,179,0.012,185,2.451,193,1.318,196,1.902,197,1.819,198,3.003,199,3.003,203,3.293,206,2.056,210,1.767,211,2.762,218,0.875,219,1.479,220,1.258,221,1.019,223,1.442,225,2.451,228,3.293,229,2.721,247,1.648,250,2.069,269,0.961,270,2.789,274,1.27,279,1.603,283,1.48,292,2.04,381,1.648,400,2.357,433,2.788,445,1.27,447,2.498,494,1.193,505,1.324,532,1.103,544,1.604,612,1.648,619,1.818,697,1.902,794,1.09,796,1.767,798,2.555,799,2.293,808,3.293,809,2.762,814,3.199,818,3.003,824,1.442,829,2.056,834,1.902,835,2.056,837,1.258,838,1.258,840,1.479,856,3.085,862,2.478,863,3.28,869,2.235,905,1.902,914,1.8,1020,2.807,1137,2.721,1139,3.083,1152,2.721,1153,3.862,1155,3.158,1156,3.626,1170,2.451,1176,1.479,1280,3.522,1317,2.451,1410,3.083,1420,1.622,1421,1.8,1669,2.235,1672,3.656,1683,3.083,1689,2.04,1690,2.04,1713,2.721,1731,2.721,1736,4.129,1887,3.083,1892,2.721,1907,2.04,1966,2.451,1980,3.083,1993,2.04,2039,4.142,2044,4.678,2056,2.04,2073,3.083,2092,2.04,2093,3.632,2094,3.632,2095,3.632,2096,4.378,2097,3.632,2098,4.88,2099,3.632,2100,4.88,2101,4.88,2102,4.88,2103,3.632,2104,3.632,2105,3.632,2106,3.632,2107,3.632,2108,3.632,2109,3.632,2110,3.632,2111,3.632,2112,2.403,2113,3.632,2114,2.403,2115,3.632,2116,2.403,2117,2.403,2118,2.403,2119,2.403,2120,2.403,2121,2.403,2122,3.632,2123,2.403,2124,3.632,2125,2.403,2126,4.88,2127,3.632,2128,2.403,2129,3.632,2130,2.403,2131,3.632,2132,2.403,2133,3.632,2134,3.632,2135,3.632,2136,2.403,2137,3.632,2138,3.632,2139,2.403,2140,3.632,2141,2.403,2142,2.403,2143,2.403,2144,3.632,2145,3.632,2146,2.403,2147,3.632,2148,2.403,2149,2.403,2150,2.403,2151,2.403,2152,4.378,2153,3.632,2154,4.378,2155,3.632,2156,3.632,2157,2.403,2158,2.403,2159,2.403,2160,2.403,2161,2.403,2162,2.403,2163,2.403,2164,2.403,2165,2.403,2166,2.403,2167,2.403,2168,2.403,2169,3.632,2170,2.403,2171,2.403,2172,2.403,2173,2.403]],["title/components/UsuariosComponent.html",[0,0.136,174,0.778]],["body/components/UsuariosComponent.html",[0,0.195,1,0.665,2,0.952,3,0.163,4,0.139,5,0.754,6,0.754,7,0.754,8,0.139,13,0.251,14,0.195,19,0.542,27,0.754,28,1.777,29,1.777,31,1.08,33,0.665,34,0.665,35,1.08,39,0.163,40,0.303,43,1.1,47,0.73,50,0.998,53,0.836,57,2.843,78,0.708,79,0.025,80,0.636,81,0.376,82,0.623,84,0.987,85,0.956,86,1.027,87,0.836,98,0.583,103,0.722,104,0.623,105,0.348,107,0.802,112,0.163,113,0.378,119,1.015,130,1.207,131,0.754,132,1.08,133,1.08,134,0.754,135,1.379,136,0.754,137,0.754,138,1.216,139,0.754,140,0.665,141,1.379,142,1.08,143,0.665,144,0.665,145,0.754,146,0.665,147,0.754,148,0.665,149,0.754,150,0.754,151,0.665,152,0.754,153,0.665,154,0.754,155,0.665,156,0.754,157,0.754,158,0.754,159,0.665,160,0.754,161,0.754,162,0.665,163,0.754,164,0.665,165,0.754,166,0.708,167,0.509,168,0.754,169,0.665,170,0.754,171,0.665,172,0.623,173,0.754,174,1.216,175,1.211,176,0.708,177,0.754,178,0.014,179,0.014,193,0.546,222,1.384,241,1.384,256,1.834,257,1.223,258,2.396,259,1.384,263,2.003,279,2.144,318,0.708,343,1.301,344,0.966,346,0.966,347,1.384,350,0.708,351,1.384,352,0.966,354,1.095,362,1.028,363,1.43,368,2.088,369,2.787,370,3.031,375,4.18,376,2.787,378,2.843,380,3.31,382,3.629,383,2.843,395,2.787,400,2.12,402,2.593,407,1.167,408,1.664,409,1.664,410,1.334,415,1.539,417,1.664,418,3.044,423,2.495,429,3.576,433,1.247,436,2.495,439,2.495,443,2.843,445,1.473,447,1.787,453,1.095,454,1.809,455,1.095,456,1.028,457,1.539,458,1.664,459,0.966,460,1.247,461,1.809,462,1.095,463,1.809,464,1.167,465,1.539,466,1.247,467,1.809,468,1.539,469,1.028,470,1.095,471,1.334,494,1.767,575,1.673,589,1.334,856,2.206,862,2.385,869,2.593,905,2.816,1020,2.796,1066,1.539,1155,2.579,1176,1.809,1192,2.202,1485,4.832,1495,3.689,1540,3.157,1541,3.157,1542,4.676,1543,3.157,1544,3.157,1545,3.157,1546,3.157,1547,3.157,1548,3.157,1549,3.157,1550,3.157,1551,3.157,1552,2.843,1553,3.157,1554,4.438,1555,3.157,1556,3.157,1557,3.157,1558,3.157,1559,3.157,1560,4.212,1561,3.157,1562,3.157,1563,3.157,1564,2.843,1565,3.157,1566,3.157,1567,3.157,1568,3.157,1569,3.157,1570,3.157,1571,3.157,1572,3.157,1573,3.157,1574,3.157,1751,1.984,2174,2.495,2175,4.924,2176,4.213,2177,4.924,2178,4.924,2179,5.378,2180,5.378,2181,5.378,2182,4.924,2183,2.94,2184,2.94,2185,4.213,2186,2.94,2187,2.94,2188,2.94,2189,2.94,2190,2.94,2191,2.94,2192,2.94,2193,2.94,2194,2.94,2195,2.94,2196,2.94,2197,2.94,2198,2.94,2199,2.94,2200,4.924,2201,2.94,2202,4.213,2203,2.94,2204,2.94,2205,2.94,2206,2.94,2207,2.94,2208,2.94,2209,2.94,2210,2.94,2211,2.94,2212,2.94,2213,2.94,2214,2.94,2215,2.94,2216,2.94,2217,4.213,2218,4.213,2219,4.213,2220,4.213,2221,4.213]],["title/coverage.html",[2222,3.993]],["body/coverage.html",[0,0.283,1,0.959,8,0.201,9,3.602,13,0.214,14,0.214,33,0.959,34,0.959,79,0.025,81,0.27,138,0.959,140,0.959,143,0.959,144,0.959,146,0.959,148,0.959,151,0.959,153,0.959,155,0.959,159,0.959,162,0.959,164,0.959,166,1.022,169,0.959,171,0.959,174,0.959,178,0.018,179,0.018,180,3.058,181,2.864,183,3.602,218,1.637,242,3.602,350,1.556,364,3.602,365,3.602,366,3.602,388,2.222,411,2.222,472,3.602,490,2.402,492,2.612,493,2.402,494,1.394,503,1.581,583,2.612,612,1.925,671,1.925,753,4.356,761,1.854,762,1.925,764,3.851,790,2.402,793,2.612,795,3.602,843,3.602,853,3.602,963,3.602,1020,1.799,1082,3.602,1123,3.602,1136,3.602,1211,2.612,1225,3.602,1226,2.864,1227,3.602,1267,3.602,1312,3.602,1313,3.602,1340,2.402,1357,2.612,1397,3.602,1403,3.602,1423,3.602,1483,3.602,1666,3.602,1670,3.602,1671,3.602,1692,3.602,1721,3.602,1768,3.602,1769,3.602,1770,3.602,1964,2.864,1965,3.602,1974,3.602,2014,3.179,2015,3.602,2035,3.179,2036,3.602,2058,3.602,2090,3.602,2092,3.602,2174,3.602,2222,3.602,2223,4.243,2224,4.243,2225,4.243,2226,5.944,2227,5.403,2228,3.602,2229,5.403,2230,3.602,2231,5.944,2232,3.602,2233,3.602,2234,4.243,2235,4.243,2236,4.243,2237,4.243,2238,4.243,2239,5.403,2240,4.243,2241,4.243,2242,5.944,2243,5.403,2244,4.243,2245,5.403,2246,5.403,2247,4.243,2248,4.243,2249,4.243,2250,4.243,2251,4.243,2252,4.243,2253,4.243,2254,4.243,2255,4.243,2256,5.403,2257,4.243,2258,6.257,2259,6.257,2260,4.243,2261,4.243,2262,5.403,2263,4.243,2264,5.944,2265,4.243,2266,4.243,2267,4.243,2268,4.243,2269,4.243,2270,4.243,2271,4.243]],["title/dependencies.html",[2272,2.436,2273,3.515]],["body/dependencies.html",[79,0.025,105,0.629,107,1.451,111,2.112,178,0.021,179,0.021,219,3.273,220,2.785,407,2.112,410,2.413,2273,4.515,2274,5.319,2275,7.081,2276,5.319,2277,5.319,2278,5.319,2279,6.201,2280,5.263,2281,5.319,2282,5.319,2283,5.319,2284,5.319,2285,5.319,2286,5.319,2287,5.319,2288,5.319,2289,5.319,2290,5.319,2291,5.319,2292,5.319]],["title/index.html",[39,0.159,2293,2.87,2294,2.87]],["body/index.html",[0,0.249,2,1.087,4,0.227,16,1.233,79,0.02,85,0.943,176,1.158,178,0.02,179,0.02,220,3.425,343,1.484,612,2.181,884,4.08,1464,3.601,2280,4.08,2295,6.288,2296,4.807,2297,5.838,2298,6.701,2299,4.08,2300,4.807,2301,5.838,2302,6.288,2303,4.807,2304,4.807,2305,6.701,2306,6.813,2307,6.813,2308,4.807,2309,5.838,2310,4.807,2311,4.807,2312,5.838,2313,4.807,2314,4.807,2315,4.807,2316,4.807,2317,4.807,2318,5.838,2319,5.838,2320,4.807,2321,4.807,2322,4.807,2323,6.288,2324,4.807,2325,4.807,2326,4.807,2327,4.807,2328,4.807,2329,4.807,2330,4.807,2331,6.288,2332,4.807,2333,4.807,2334,4.807,2335,4.807,2336,4.807,2337,4.807,2338,4.807,2339,4.807,2340,4.807,2341,4.807,2342,5.838,2343,6.288,2344,4.807,2345,4.807,2346,4.807,2347,4.807,2348,4.807,2349,6.288,2350,4.807,2351,6.813,2352,4.807,2353,5.838,2354,4.807,2355,4.807,2356,4.807,2357,4.807,2358,4.807,2359,4.807,2360,4.807,2361,4.807,2362,4.807,2363,4.807,2364,4.807,2365,4.807,2366,4.807,2367,4.807,2368,4.807,2369,3.601,2370,4.807,2371,4.807]],["title/modules.html",[2372,3.993]],["body/modules.html",[79,0.022,178,0.022,179,0.022,2372,4.809]],["title/overview.html",[2369,3.525]],["body/overview.html",[2,1.268,79,0.022,178,0.022,179,0.022,182,3.784,763,2.544,794,2.544,987,4.201,1533,4.789,2369,4.201,2373,5.607]],["title/properties.html",[40,0.298,2272,2.436]],["body/properties.html",[40,0.406,79,0.023,178,0.022,179,0.022,2299,4.79,2374,5.644]],["title/miscellaneous/variables.html",[2375,2.436,2376,3.515]],["body/miscellaneous/variables.html",[13,0.277,14,0.273,15,4.257,21,1.128,24,3.445,26,2.408,39,0.254,45,1.713,53,1.128,54,4.823,56,1.278,68,0.851,70,3.497,73,1.95,79,0.025,81,0.292,83,2.83,85,0.917,86,0.985,87,1.278,88,3.903,89,1.368,90,1.255,96,1.713,119,1.368,125,1.511,130,1.204,172,1.204,178,0.019,179,0.019,180,2.603,181,3.103,192,1.039,193,0.854,197,1.754,206,2.603,212,3.445,214,2.408,215,1.826,220,3.229,236,3.903,269,0.853,272,2.086,276,3.903,444,1.649,686,3.229,781,3.216,857,2.603,1084,3.834,1339,3.903,1523,3.903,1786,3.903,2228,3.903,2230,4.823,2232,3.903,2233,4.823,2375,3.903,2376,3.903,2377,4.598,2378,4.598,2379,4.598,2380,4.598,2381,5.682,2382,4.598,2383,5.682,2384,5.682,2385,4.598,2386,4.598,2387,4.598,2388,4.598,2389,4.598,2390,4.598,2391,4.598,2392,5.682,2393,4.598,2394,5.682,2395,4.598,2396,4.598,2397,4.598,2398,4.598,2399,4.598,2400,4.598,2401,4.598,2402,4.598,2403,4.598,2404,4.598,2405,4.598,2406,4.598,2407,4.598,2408,4.598,2409,5.682,2410,4.598,2411,4.598,2412,4.598,2413,4.598,2414,4.598,2415,4.598,2416,4.598,2417,4.598]]],"invertedIndex":[["",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":350,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2374,"title":{},"body":{"properties.html":{}}}],["0.04",{"_index":1061,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.05",{"_index":722,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["0.06",{"_index":732,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.08",{"_index":750,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["0.1",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["0.15",{"_index":1310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.15.0",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1476,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.25",{"_index":1478,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.25rem",{"_index":1075,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.2s",{"_index":746,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["0.35rem",{"_index":1307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.3rem",{"_index":1471,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.3s",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.4s",{"_index":1383,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.5rem",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.6",{"_index":1257,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["0.6rem",{"_index":1472,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.6s",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.7",{"_index":1393,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["0.75rem",{"_index":736,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.7rem",{"_index":1957,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["0.85rem",{"_index":1660,"title":{},"body":{"components/PerfilComponent.html":{}}}],["0.875rem",{"_index":1058,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.8rem",{"_index":1073,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.95rem",{"_index":353,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["0/1",{"_index":2240,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2241,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2238,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["098",{"_index":1111,"title":{},"body":{"components/FooterComponent.html":{}}}],["0d6efd",{"_index":1661,"title":{},"body":{"components/PerfilComponent.html":{}}}],["1",{"_index":318,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["1).padstart(2",{"_index":2004,"title":{},"body":{"injectables/ReportService.html":{}}}],["1.05rem",{"_index":1467,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.125rem",{"_index":1054,"title":{},"body":{"components/DetalleComponent.html":{}}}],["1.15rem",{"_index":1946,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.25rem",{"_index":1052,"title":{},"body":{"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{}}}],["1.2rem",{"_index":1949,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.4rem",{"_index":1958,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.5rem",{"_index":717,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.6",{"_index":1950,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.7",{"_index":1947,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.75rem",{"_index":1056,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.8s",{"_index":1387,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["1.amazonaws.com/api/usuarios",{"_index":2151,"title":{},"body":{"injectables/UserService.html":{}}}],["1/1",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["100",{"_index":753,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1258,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["100vh",{"_index":1760,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":727,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["11",{"_index":1886,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["11/11",{"_index":2249,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1113,"title":{},"body":{"components/FooterComponent.html":{}}}],["1200px",{"_index":1379,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["12px",{"_index":1953,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["140px",{"_index":1266,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["14px",{"_index":1944,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["15px",{"_index":1390,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["16/19",{"_index":2255,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1259,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["17/22",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["17/28",{"_index":2237,"title":{},"body":{"coverage.html":{}}}],["18/24",{"_index":2250,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1963,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["19",{"_index":2373,"title":{},"body":{"overview.html":{}}}],["19.0.6",{"_index":2300,"title":{},"body":{"index.html":{}}}],["1px",{"_index":737,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["1rem",{"_index":714,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["2",{"_index":987,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"overview.html":{}}}],["2.25rem",{"_index":724,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["2.3.0",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["2/2",{"_index":2244,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2257,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1482,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["20.0.3",{"_index":2278,"title":{},"body":{"dependencies.html":{}}}],["20.0.4",{"_index":2275,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":1110,"title":{},"body":{"components/FooterComponent.html":{}}}],["2025",{"_index":1115,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["20px",{"_index":749,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["212529",{"_index":1662,"title":{},"body":{"components/PerfilComponent.html":{}}}],["227",{"_index":1112,"title":{},"body":{"components/FooterComponent.html":{}}}],["245",{"_index":1114,"title":{},"body":{"components/FooterComponent.html":{}}}],["24px",{"_index":1053,"title":{},"body":{"components/DetalleComponent.html":{}}}],["25",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["255",{"_index":1309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2px",{"_index":471,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["2rem",{"_index":455,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["3",{"_index":758,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["3/3",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":1072,"title":{},"body":{"components/DetalleComponent.html":{}}}],["3663",{"_index":1100,"title":{},"body":{"components/FooterComponent.html":{}}}],["36px",{"_index":1063,"title":{},"body":{"components/DetalleComponent.html":{}}}],["3px",{"_index":730,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["3rem",{"_index":1943,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["4",{"_index":988,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["4.0.12",{"_index":2282,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2068,"title":{},"body":{"injectables/ScoreService.html":{}}}],["4/4",{"_index":2256,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{}}}],["442",{"_index":1109,"title":{},"body":{"components/FooterComponent.html":{}}}],["444",{"_index":1057,"title":{},"body":{"components/DetalleComponent.html":{}}}],["45px",{"_index":1311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["48px",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["4px",{"_index":465,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["5",{"_index":710,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["5.3.6",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["500",{"_index":1381,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["555",{"_index":1078,"title":{},"body":{"components/DetalleComponent.html":{}}}],["56",{"_index":1098,"title":{},"body":{"components/FooterComponent.html":{}}}],["5px",{"_index":1657,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1848,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["6.7.2",{"_index":2285,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2259,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2227,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":733,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["60px",{"_index":463,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["63",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2234,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":720,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["7",{"_index":1331,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["7.8.0",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":2246,"title":{},"body":{"coverage.html":{}}}],["7/11",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2243,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2245,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":725,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["72",{"_index":2247,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":1395,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["77",{"_index":2242,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1533,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"overview.html":{}}}],["8/11",{"_index":2248,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":729,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["84",{"_index":2254,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2258,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2260,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":1059,"title":{},"body":{"components/DetalleComponent.html":{}}}],["8px",{"_index":467,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["9",{"_index":1099,"title":{},"body":{"components/FooterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["90",{"_index":1260,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["90px",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["920px",{"_index":1942,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["9565",{"_index":1101,"title":{},"body":{"components/FooterComponent.html":{}}}],["999",{"_index":1074,"title":{},"body":{"components/DetalleComponent.html":{}}}],["9]+/g",{"_index":665,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["_",{"_index":1643,"title":{},"body":{"components/PerfilComponent.html":{}}}],["abre",{"_index":1795,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["absolute",{"_index":726,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["academicas",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["académico",{"_index":1861,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["académicos",{"_index":1102,"title":{},"body":{"components/FooterComponent.html":{}}}],["acc",{"_index":1617,"title":{},"body":{"components/PerfilComponent.html":{}}}],["acceder",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{}}}],["acceso",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["accesos",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accessors",{"_index":383,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["acciones",{"_index":1231,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["acción",{"_index":1241,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"injectables/PostService.html":{}}}],["account",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["account.idtokenclaims",{"_index":1299,"title":{},"body":{"components/NavbarComponent.html":{}}}],["account.name",{"_index":2155,"title":{},"body":{"injectables/UserService.html":{}}}],["account.username",{"_index":2156,"title":{},"body":{"injectables/UserService.html":{}}}],["acept",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["acepta",{"_index":1783,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptación",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptadas",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aceptado",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aceptarlas",{"_index":1772,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptarreglas",{"_index":1778,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["acosadores",{"_index":1805,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["activa",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["activas",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{}}}],["activatedroute",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["activatedroutesnapshot",{"_index":2020,"title":{},"body":{"guards/RoleGuard.html":{}}}],["active",{"_index":360,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["actividades",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["activo",{"_index":1293,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["actual",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/FooterComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["actual.mensaje",{"_index":1373,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["actual.titulo",{"_index":1372,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["actual_component",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["actuales",{"_index":1454,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["actualiza",{"_index":829,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["actualizaciones",{"_index":1287,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actualizada",{"_index":1685,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["actualizado",{"_index":831,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{}}}],["actualizar",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"injectables/PostCategoryService.html":{},"components/UsuariosComponent.html":{}}}],["actualmente",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/UserService.html":{}}}],["actuar",{"_index":1874,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["acuerdo",{"_index":1941,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ad",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["additional",{"_index":2361,"title":{},"body":{"index.html":{}}}],["adecuado",{"_index":1820,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{}}}],["adecuados",{"_index":821,"title":{},"body":{"injectables/CommentService.html":{}}}],["admin",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["admin.component.html",{"_index":372,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.scss",{"_index":371,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts",{"_index":366,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["admin.component.ts:17",{"_index":403,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:18",{"_index":399,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:20",{"_index":397,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:21",{"_index":396,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:22",{"_index":401,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:23",{"_index":404,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:25",{"_index":394,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:35",{"_index":406,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:42",{"_index":386,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:46",{"_index":389,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:51",{"_index":385,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:56",{"_index":393,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:72",{"_index":392,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin/categorias",{"_index":365,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["administra",{"_index":443,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["administrador",{"_index":1982,"title":{},"body":{"injectables/ReportService.html":{},"injectables/RoleService.html":{}}}],["administradores",{"_index":1315,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["administrar",{"_index":849,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["adminonly",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["agregar",{"_index":322,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{}}}],["ahora",{"_index":1904,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["al",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["alameda",{"_index":1544,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["alert",{"_index":1076,"title":{},"body":{"components/DetalleComponent.html":{}}}],["alert('comentario",{"_index":1035,"title":{},"body":{"components/DetalleComponent.html":{}}}],["alert('error",{"_index":652,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alert('no",{"_index":636,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alert('publicación",{"_index":658,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["alert('¡publicación",{"_index":646,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alerta",{"_index":1385,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["algún",{"_index":1911,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["align",{"_index":1065,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["all.length",{"_index":1625,"title":{},"body":{"components/PerfilComponent.html":{}}}],["all.reduce((acc",{"_index":1615,"title":{},"body":{"components/PerfilComponent.html":{}}}],["almacenada",{"_index":2018,"title":{},"body":{"guards/RoleGuard.html":{}}}],["almacenado",{"_index":2044,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["almacenar",{"_index":2037,"title":{},"body":{"injectables/RoleService.html":{}}}],["alonso",{"_index":1546,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["alt",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["alto",{"_index":1559,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["amarillo",{"_index":354,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["amigable",{"_index":289,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["andrés",{"_index":1570,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["angular",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":2274,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":407,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":838,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2276,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":410,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2277,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2279,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["anidadas",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["animation",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ante",{"_index":1799,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["anterior",{"_index":1654,"title":{},"body":{"components/PerfilComponent.html":{}}}],["anteriores",{"_index":255,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["antes",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["antonio",{"_index":1548,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["anónimo",{"_index":1028,"title":{},"body":{"components/DetalleComponent.html":{}}}],["api",{"_index":834,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["api.us",{"_index":2149,"title":{},"body":{"injectables/UserService.html":{}}}],["apiurl",{"_index":798,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["aplica",{"_index":291,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/Report.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["apología",{"_index":1827,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["apoquindo",{"_index":1563,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["apoyo",{"_index":1937,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["app",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["app.component.html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.ts",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":2312,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apuestas",{"_index":1829,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aqu",{"_index":676,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NavbarComponent.html":{}}}],["arauco",{"_index":1568,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["archivo",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr",{"_index":1616,"title":{},"body":{"components/PerfilComponent.html":{}}}],["arr.length",{"_index":1618,"title":{},"body":{"components/PerfilComponent.html":{}}}],["array.from",{"_index":1640,"title":{},"body":{"components/PerfilComponent.html":{}}}],["arreglo",{"_index":294,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["artifacts",{"_index":2335,"title":{},"body":{"index.html":{}}}],["asegura",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["asociada",{"_index":777,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["asociados",{"_index":825,"title":{},"body":{"injectables/CommentService.html":{},"components/PerfilComponent.html":{}}}],["aspectos",{"_index":847,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["asterisk",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":1304,"title":{},"body":{"components/NavbarComponent.html":{}}}],["autenticación",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["autenticado",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":181,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":468,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["automatically",{"_index":2313,"title":{},"body":{"index.html":{}}}],["automática",{"_index":1330,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["automáticamente",{"_index":1699,"title":{},"body":{"injectables/PostService.html":{}}}],["automático",{"_index":1352,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["autor",{"_index":993,"title":{},"body":{"components/DetalleComponent.html":{}}}],["autorizada",{"_index":1126,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["autorizado",{"_index":2034,"title":{},"body":{"guards/RoleGuard.html":{}}}],["available",{"_index":2326,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":1062,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["avg",{"_index":675,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["ayudantias",{"_index":328,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["ayudantías",{"_index":329,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["azul",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["azure",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["azure/msal",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["azureuser",{"_index":1742,"title":{},"body":{"components/RegisterComponent.html":{}}}],["azureuser.email",{"_index":1745,"title":{},"body":{"components/RegisterComponent.html":{}}}],["azureuser.fullname",{"_index":1747,"title":{},"body":{"components/RegisterComponent.html":{}}}],["año",{"_index":1085,"title":{},"body":{"components/FooterComponent.html":{}}}],["aún",{"_index":696,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["backend",{"_index":526,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["background",{"_index":346,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["badge",{"_index":756,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{}}}],["banner",{"_index":582,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["banner'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["banner.component",{"_index":584,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{}}}],["banner.component.html",{"_index":1321,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.scss",{"_index":1320,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts",{"_index":1313,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["banner.component.ts:20",{"_index":1346,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:23",{"_index":1345,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:26",{"_index":1341,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:29",{"_index":1343,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:32",{"_index":1354,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:35",{"_index":1349,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:40",{"_index":1337,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:58",{"_index":1329,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:68",{"_index":1326,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:76",{"_index":1333,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner/notificacion",{"_index":583,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["bar",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barra",{"_index":1268,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basa",{"_index":2017,"title":{},"body":{"guards/RoleGuard.html":{}}}],["base",{"_index":270,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":2147,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":2145,"title":{},"body":{"injectables/UserService.html":{}}}],["bernardo",{"_index":1561,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["bg",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["bienvenido/a",{"_index":1757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["blanco",{"_index":731,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["block",{"_index":461,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["body",{"_index":757,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{}}}],["bold",{"_index":363,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["book",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["bootstrap",{"_index":2286,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":469,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["boton",{"_index":1767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["botones",{"_index":1959,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["bottom",{"_index":723,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["botón",{"_index":1858,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["box",{"_index":718,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["breadcrumb",{"_index":245,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["breadcrumb'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["breadcrumb.component.html",{"_index":261,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":260,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":415,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["breadcrumbcomponent",{"_index":138,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["breve",{"_index":1668,"title":{},"body":{"interfaces/PostCategory.html":{}}}],["browser",{"_index":2280,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["btn",{"_index":755,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["build",{"_index":2331,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":2332,"title":{},"body":{"index.html":{}}}],["button",{"_index":740,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["búsqueda",{"_index":548,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["c",{"_index":428,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.description",{"_index":451,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.name",{"_index":450,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.name.tolowercase().includes(filtro",{"_index":426,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.status",{"_index":452,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["cabecera",{"_index":715,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cada",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/ScoreService.html":{}}}],["calcula",{"_index":1512,"title":{},"body":{"components/PerfilComponent.html":{}}}],["calcular",{"_index":2061,"title":{},"body":{"injectables/ScoreService.html":{}}}],["calificaciones",{"_index":1487,"title":{},"body":{"components/PerfilComponent.html":{}}}],["calificación",{"_index":1648,"title":{},"body":{"components/PerfilComponent.html":{}}}],["calificar",{"_index":495,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["calificar(pub",{"_index":502,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["calificar(valor",{"_index":974,"title":{},"body":{"components/DetalleComponent.html":{}}}],["cambia",{"_index":1507,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cambiarpagina",{"_index":1498,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cambiarpagina(pagina",{"_index":1505,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cambio",{"_index":1523,"title":{},"body":{"components/PerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["cambios",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":1474,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["campus",{"_index":1542,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["canactivate",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":2019,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cancela",{"_index":1251,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cancelar",{"_index":378,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/UsuariosComponent.html":{}}}],["cancelaredicion",{"_index":2180,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cancelarlogout",{"_index":1273,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cancelarrechazo",{"_index":1779,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cantidad",{"_index":789,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["card",{"_index":743,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["carga",{"_index":509,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["cargadas",{"_index":566,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cargado",{"_index":596,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cargando",{"_index":519,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cargar",{"_index":379,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["cargarnotificaciones",{"_index":1427,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["cargarpublicaciones",{"_index":496,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["cargarpublicaciones(iduser",{"_index":1510,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cargarusuarios",{"_index":2181,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cariño",{"_index":1119,"title":{},"body":{"components/FooterComponent.html":{}}}],["carlos",{"_index":1562,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["caso",{"_index":1869,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["cat",{"_index":390,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{}}}],["cat.adminonly",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.description",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.name",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.status",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria",{"_index":275,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["categoria.idcategory",{"_index":602,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoria.name",{"_index":604,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoria/${slug",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoriaform",{"_index":373,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categoriaid",{"_index":481,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorianombre",{"_index":482,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorias",{"_index":367,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{}}}],["categorias'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["categorias.component.html",{"_index":480,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorias.component.scss",{"_index":479,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoriasadmincomponent",{"_index":140,"title":{"components/CategoriasAdminComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["categoriascomponent",{"_index":143,"title":{"components/CategoriasComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["categoriasfiltradas",{"_index":384,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categories",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["categories.find(cat",{"_index":598,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["category",{"_index":1675,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service",{"_index":413,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["category.service.ts",{"_index":1671,"title":{},"body":{"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:15",{"_index":1687,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:16",{"_index":1688,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:22",{"_index":1679,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:35",{"_index":1674,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:45",{"_index":1682,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:53",{"_index":1678,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["categoryid",{"_index":1707,"title":{},"body":{"injectables/PostService.html":{}}}],["categoryservice",{"_index":374,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categoría",{"_index":440,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["categorías",{"_index":442,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{}}}],["cats",{"_index":1597,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ced4da",{"_index":739,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["center",{"_index":1066,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["cerrando",{"_index":1791,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cerrar",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["chart",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["checkandredirect",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkandredirect(email",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkuserexists",{"_index":2097,"title":{},"body":{"injectables/UserService.html":{}}}],["checkuserexists(email",{"_index":2111,"title":{},"body":{"injectables/UserService.html":{}}}],["child",{"_index":1468,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["choose",{"_index":2357,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cierre",{"_index":1276,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cl",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claims",{"_index":1298,"title":{},"body":{"components/NavbarComponent.html":{}}}],["claro",{"_index":1852,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["clases",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["clasificarse",{"_index":1667,"title":{},"body":{"interfaces/PostCategory.html":{}}}],["class",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["clave",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["clearrole",{"_index":2098,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":2298,"title":{},"body":{"index.html":{}}}],["close",{"_index":1389,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["code",{"_index":2318,"title":{},"body":{"index.html":{}}}],["cog",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coincide",{"_index":2051,"title":{},"body":{"injectables/RoleService.html":{}}}],["colaboración",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["colaborativa",{"_index":1915,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["colaborativo",{"_index":1815,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["color",{"_index":347,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["color.adjust($amarillo",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["color.adjust($azul",{"_index":1479,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["color.adjust($gris",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["com",{"_index":980,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.content",{"_index":1048,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.date",{"_index":1046,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.iduser",{"_index":1045,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.iduser.charat(0).touppercase",{"_index":1044,"title":{},"body":{"components/DetalleComponent.html":{}}}],["come",{"_index":2355,"title":{},"body":{"index.html":{}}}],["comentar",{"_index":972,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentario",{"_index":766,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["comentario:hover",{"_index":1068,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentarioform",{"_index":967,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentarios",{"_index":797,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["comercial",{"_index":1819,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comienzo",{"_index":324,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["command",{"_index":2349,"title":{},"body":{"index.html":{}}}],["comment",{"_index":762,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["commentrequests",{"_index":1609,"title":{},"body":{"components/PerfilComponent.html":{}}}],["commentrequests.length",{"_index":1612,"title":{},"body":{"components/PerfilComponent.html":{}}}],["comments",{"_index":968,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comments.length",{"_index":1043,"title":{},"body":{"components/DetalleComponent.html":{}}}],["commentservice",{"_index":793,"title":{"injectables/CommentService.html":{}},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["commonmodule",{"_index":368,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["como",{"_index":272,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["compartir",{"_index":678,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["compile",{"_index":2333,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2325,"title":{},"body":{"index.html":{}}}],["completo",{"_index":1736,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["componen",{"_index":295,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["components/navbar/navbar.component",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["comunicar",{"_index":1316,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["comunidad",{"_index":686,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["comunidad'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["comunidad.component.html",{"_index":1776,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.scss",{"_index":1775,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts",{"_index":1770,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["comunidad.component.ts:102",{"_index":1794,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:110",{"_index":1792,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:137",{"_index":1788,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:21",{"_index":1897,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:22",{"_index":1896,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:25",{"_index":1797,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:30",{"_index":1895,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:81",{"_index":1782,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad/reglas",{"_index":1769,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["comunitarias",{"_index":2091,"title":{},"body":{"interfaces/User.html":{}}}],["con",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["concedido",{"_index":1971,"title":{},"body":{"interfaces/Report.html":{}}}],["concepción",{"_index":1571,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["concretarse",{"_index":1870,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conecta",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["conectaduoc",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["config",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["configura",{"_index":1339,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"miscellaneous/variables.html":{}}}],["configuracion",{"_index":844,"title":{},"body":{"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{}}}],["configuracion'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["configuracion.component.html",{"_index":845,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracion.component.scss",{"_index":846,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracioncomponent",{"_index":144,"title":{"components/ConfiguracionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["configuraciones",{"_index":1690,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["configuración",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ConfiguracionComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm('¿eliminar",{"_index":439,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["confirma",{"_index":1253,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmacion",{"_index":1233,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["confirmacion.component",{"_index":1291,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmacion.component.html",{"_index":1235,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.scss",{"_index":1234,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts",{"_index":1227,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["confirmacion.component.ts:18",{"_index":1244,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:23",{"_index":1239,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:29",{"_index":1246,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:34",{"_index":1252,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:39",{"_index":1248,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion/modal",{"_index":1226,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["confirmación",{"_index":1229,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmar",{"_index":1230,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmarlogout",{"_index":1274,"title":{},"body":{"components/NavbarComponent.html":{}}}],["confirmarrechazo",{"_index":1780,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conjunto",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conos",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consentimiento",{"_index":1836,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["consola",{"_index":1292,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.error('error",{"_index":651,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.error('login",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('logout",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('account",{"_index":1295,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('existe",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('id",{"_index":1296,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('redirijo",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('slug",{"_index":595,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["console.warn('no",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.warn(`acceso",{"_index":2032,"title":{},"body":{"guards/RoleGuard.html":{}}}],["const",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/UserService.html":{}}}],["constructor(http",{"_index":1406,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["constructor(notificacionservice",{"_index":1430,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["constructor(private",{"_index":1419,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["construido",{"_index":1931,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["construir",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["construye",{"_index":267,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["consultar",{"_index":2060,"title":{},"body":{"injectables/ScoreService.html":{}}}],["container",{"_index":345,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["contenedor",{"_index":711,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{}}}],["contenido",{"_index":533,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["content",{"_index":459,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{},"components/UsuariosComponent.html":{}}}],["continua",{"_index":1551,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["continuar",{"_index":1759,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contrario",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["control",{"_index":1081,"title":{},"body":{"components/DetalleComponent.html":{}}}],["controla",{"_index":556,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["controlado",{"_index":1894,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conversación",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["convierte",{"_index":282,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["convivencia",{"_index":1926,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["core/services/comment.service",{"_index":1004,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/notificacion.service",{"_index":1358,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["core/services/post",{"_index":412,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/post.service",{"_index":588,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/report.service",{"_index":590,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["core/services/score.service",{"_index":591,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/user.service",{"_index":589,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["correctamente",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["correcto",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correo",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["correos",{"_index":1840,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["correspondan",{"_index":1885,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["corresponde",{"_index":2053,"title":{},"body":{"injectables/RoleService.html":{}}}],["correspondiente",{"_index":520,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["correspondientes",{"_index":1594,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cortesía",{"_index":1811,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["coverage",{"_index":2222,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":778,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["crea",{"_index":807,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["creación",{"_index":474,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["creada",{"_index":647,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["creado",{"_index":815,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{}}}],["crear",{"_index":542,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["crear(nueva",{"_index":1408,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["create",{"_index":800,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["create(category",{"_index":1673,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["create(comment",{"_index":804,"title":{},"body":{"injectables/CommentService.html":{}}}],["createddate",{"_index":642,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["createpost",{"_index":1693,"title":{},"body":{"injectables/PostService.html":{}}}],["createpost(post",{"_index":1696,"title":{},"body":{"injectables/PostService.html":{}}}],["creemos",{"_index":1914,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["creencias",{"_index":1857,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["crud",{"_index":2095,"title":{},"body":{"injectables/UserService.html":{}}}],["críticas",{"_index":1232,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["cualquier",{"_index":1830,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cuando",{"_index":1124,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["cuenta",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cuentas",{"_index":1889,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cuerpo",{"_index":1402,"title":{},"body":{"interfaces/NotificacionGlobal.html":{}}}],["cuidar",{"_index":1875,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["culturales",{"_index":331,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cumple",{"_index":2024,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cumulativepath",{"_index":311,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["currentindex",{"_index":1322,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["currentroute",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.snapshot.data",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["currentyear",{"_index":1091,"title":{},"body":{"components/FooterComponent.html":{}}}],["cursor",{"_index":1954,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dark",{"_index":1956,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dashboard",{"_index":273,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{}}}],["dashboard'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["dashboard.component.html",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/${slug",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":146,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/NotificacionesComponent.html":{}}}],["data['showfooter",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["data['shownavbar",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":768,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["date().getfullyear",{"_index":1092,"title":{},"body":{"components/FooterComponent.html":{}}}],["date().toisostring",{"_index":643,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ReportService.html":{}}}],["date().toisostring().split('t')[0",{"_index":1446,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":703,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":759,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{}}}],["datos",{"_index":433,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["datos).subscribe",{"_index":436,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["ddd",{"_index":1080,"title":{},"body":{"components/DetalleComponent.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["deben",{"_index":1872,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["debes",{"_index":1891,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["decoration",{"_index":356,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1245,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["define",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["definidas",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definido",{"_index":2045,"title":{},"body":{"injectables/RoleService.html":{}}}],["del",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["delete",{"_index":801,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["delete(id",{"_index":1677,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["delete(idcomment",{"_index":816,"title":{},"body":{"injectables/CommentService.html":{}}}],["delete(idpost",{"_index":1700,"title":{},"body":{"injectables/PostService.html":{}}}],["deleteuser",{"_index":2099,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":2115,"title":{},"body":{"injectables/UserService.html":{}}}],["denegado",{"_index":2033,"title":{},"body":{"guards/RoleGuard.html":{}}}],["dentro",{"_index":252,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["denuncias",{"_index":1859,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["dependencies",{"_index":2273,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deportes",{"_index":330,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/PostCategory.html":{}}}],["deportivas",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["derechos",{"_index":1116,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["derivar",{"_index":1846,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["desarrollado",{"_index":1118,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["desarrollar",{"_index":1133,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["desconocido",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"injectables/UserService.html":{}}}],["describe",{"_index":1240,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["descripcion",{"_index":1801,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["descripción",{"_index":448,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["desde",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["desea",{"_index":2050,"title":{},"body":{"injectables/RoleService.html":{}}}],["deseada",{"_index":1509,"title":{},"body":{"components/PerfilComponent.html":{}}}],["después",{"_index":1753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["destruir",{"_index":1334,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["detailed",{"_index":2366,"title":{},"body":{"index.html":{}}}],["detallado",{"_index":776,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["detalle",{"_index":964,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detalle'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["detalle.component.html",{"_index":966,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detalle.component.scss",{"_index":965,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detallecomponent",{"_index":148,"title":{"components/DetalleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["detecciones",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detección",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detiene",{"_index":1327,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["dev",{"_index":1121,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["development",{"_index":2301,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":579,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["diccionario",{"_index":553,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["dignidad",{"_index":1810,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dinámicamente",{"_index":246,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["dio",{"_index":2077,"title":{},"body":{"injectables/ScoreService.html":{}}}],["direcciones",{"_index":1841,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["directive",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["directives",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["directory",{"_index":2337,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1480,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["discriminatorios",{"_index":1804,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["display",{"_index":460,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["disponible",{"_index":1521,"title":{},"body":{"components/PerfilComponent.html":{}}}],["disponibles",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"components/RegisterComponent.html":{}}}],["dist",{"_index":2336,"title":{},"body":{"index.html":{}}}],["diversidad",{"_index":1854,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["document.title",{"_index":1011,"title":{},"body":{"components/DetalleComponent.html":{}}}],["documentation",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["drogas",{"_index":1828,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dudas",{"_index":680,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["duoc",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["dynamic",{"_index":2281,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1415,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["e0e0e0",{"_index":1663,"title":{},"body":{"components/PerfilComponent.html":{}}}],["e2e",{"_index":2352,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":2354,"title":{},"body":{"index.html":{}}}],["e8f0fb",{"_index":1377,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["ease",{"_index":747,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["east",{"_index":2150,"title":{},"body":{"injectables/UserService.html":{}}}],["ecoduoc",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["edición",{"_index":1517,"title":{},"body":{"components/PerfilComponent.html":{}}}],["editar",{"_index":380,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["editar(cat",{"_index":387,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["editar(post",{"_index":1515,"title":{},"body":{"components/PerfilComponent.html":{}}}],["editar(user",{"_index":2185,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["editing",{"_index":375,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["educación",{"_index":1550,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["eee",{"_index":1060,"title":{},"body":{"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["ej",{"_index":1669,"title":{},"body":{"interfaces/PostCategory.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ejemplo",{"_index":787,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["el",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["elimina",{"_index":818,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["eliminadas",{"_index":694,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["eliminando",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eliminar",{"_index":381,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["eliminar(cat",{"_index":391,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["eliminar(id",{"_index":1412,"title":{},"body":{"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["eliminar(user",{"_index":2215,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["email",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["emitido",{"_index":1250,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["empático",{"_index":1850,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["en",{"_index":269,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["encargado",{"_index":243,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["encodedemail",{"_index":2160,"title":{},"body":{"injectables/UserService.html":{}}}],["encodeuricomponent(email",{"_index":2161,"title":{},"body":{"injectables/UserService.html":{}}}],["encontr",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["encuentros",{"_index":1867,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["end",{"_index":2351,"title":{},"body":{"index.html":{}}}],["enlaces",{"_index":1086,"title":{},"body":{"components/FooterComponent.html":{}}}],["enrutador",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enrutamiento",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["entorno",{"_index":1893,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["entre",{"_index":1962,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["enviar",{"_index":851,"title":{},"body":{"components/ConfiguracionComponent.html":{},"components/DetalleComponent.html":{}}}],["envía",{"_index":523,"title":{},"body":{"components/CategoriasComponent.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{}}}],["err",{"_index":650,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":649,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["es",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/PostCategoryService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["esa",{"_index":303,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["esactiva",{"_index":1428,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["esactiva(fechafin",{"_index":1435,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["esactiva(n.fechafin",{"_index":1456,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["escribi",{"_index":775,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["escucha",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["espacio",{"_index":1814,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["espacios",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["específica",{"_index":478,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["específico",{"_index":1986,"title":{},"body":{"injectables/ReportService.html":{}}}],["espera",{"_index":1863,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["esperado",{"_index":2048,"title":{},"body":{"injectables/RoleService.html":{}}}],["esperados",{"_index":2023,"title":{},"body":{"guards/RoleGuard.html":{}}}],["est",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["esta",{"_index":698,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{}}}],["establece",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estado",{"_index":449,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/User.html":{}}}],["estadísticas",{"_index":1486,"title":{},"body":{"components/PerfilComponent.html":{}}}],["estas",{"_index":1928,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["este",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["esto",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["estoy",{"_index":1940,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estrellas",{"_index":788,"title":{},"body":{"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["estrictamente",{"_index":1880,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiante",{"_index":2055,"title":{},"body":{"injectables/RoleService.html":{}}}],["estudiantes",{"_index":1932,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiantil",{"_index":1105,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiantiles",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["estás",{"_index":1242,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["estén",{"_index":1864,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["etc",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{}}}],["event",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1247,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["evento",{"_index":1249,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["eventos",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evitar",{"_index":276,"title":{},"body":{"components/BreadcrumbComponent.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":2306,"title":{},"body":{"index.html":{}}}],["exchange",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exclusivo",{"_index":1888,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["execute",{"_index":2344,"title":{},"body":{"index.html":{}}}],["existe",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["existente",{"_index":830,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["exists",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{}}}],["exitoso",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["expectedrole",{"_index":2049,"title":{},"body":{"injectables/RoleService.html":{}}}],["expectedroles",{"_index":2028,"title":{},"body":{"guards/RoleGuard.html":{}}}],["expectedroles.includes(userrole",{"_index":2031,"title":{},"body":{"guards/RoleGuard.html":{}}}],["experiencia",{"_index":1919,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["expirada",{"_index":1457,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["explora",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explícito",{"_index":1837,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["export",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["f0f0f0",{"_index":1071,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["f0f8ff",{"_index":1077,"title":{},"body":{"components/DetalleComponent.html":{}}}],["f4b942",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["f6f9ff",{"_index":1378,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["f8f9fa",{"_index":1664,"title":{},"body":{"components/PerfilComponent.html":{}}}],["f9f9f9",{"_index":1069,"title":{},"body":{"components/DetalleComponent.html":{}}}],["f9fafb",{"_index":1763,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fa",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fadeinup",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fafafa",{"_index":1079,"title":{},"body":{"components/DetalleComponent.html":{}}}],["fallback",{"_index":1901,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["false",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["falsos",{"_index":1883,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["family",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["far",{"_index":705,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["fas",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fb",{"_index":376,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["fecha",{"_index":770,"title":{},"body":{"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["fechafin",{"_index":1399,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{}}}],["fechainicio",{"_index":1400,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{}}}],["fechas",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":1051,"title":{},"body":{"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["fff7e6",{"_index":1656,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ffffff",{"_index":1461,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["files",{"_index":2317,"title":{},"body":{"index.html":{}}}],["filter",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(cat",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filtra",{"_index":1706,"title":{},"body":{"injectables/PostService.html":{}}}],["filtradas",{"_index":580,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["filtrado",{"_index":475,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["filtrados",{"_index":1588,"title":{},"body":{"components/PerfilComponent.html":{}}}],["filtrando",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filtrar",{"_index":549,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["filtro",{"_index":423,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["filtrobusqueda",{"_index":483,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["filtrocategoria",{"_index":377,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["filtronombre",{"_index":2177,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["filtropost",{"_index":1491,"title":{},"body":{"components/PerfilComponent.html":{}}}],["fin",{"_index":1453,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["final",{"_index":1951,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["financiamiento",{"_index":1103,"title":{},"body":{"components/FooterComponent.html":{}}}],["fines",{"_index":1812,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fixed",{"_index":1256,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["flex",{"_index":1064,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["flujo",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["focus",{"_index":1475,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["following",{"_index":2348,"title":{},"body":{"index.html":{}}}],["fomentamos",{"_index":1851,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["font",{"_index":351,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["fontawesome",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{}}}],["footer",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["footer'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["footer.component.html",{"_index":1089,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1090,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":34,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["forbidden",{"_index":1130,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["forbidden.component.html",{"_index":1131,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":1132,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":151,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["forkjoin",{"_index":1595,"title":{},"body":{"components/PerfilComponent.html":{}}}],["forkjoin(commentrequests).subscribe(all",{"_index":1613,"title":{},"body":{"components/PerfilComponent.html":{}}}],["forkjoin(scorerequests).subscribe(all",{"_index":1622,"title":{},"body":{"components/PerfilComponent.html":{}}}],["form",{"_index":484,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["formato",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NotificacionGlobal.html":{}}}],["formbuilder",{"_index":408,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formgroup",{"_index":395,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formsmodule",{"_index":370,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["formulario",{"_index":527,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["foro",{"_index":713,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["fortalecer",{"_index":1935,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2283,"title":{},"body":{"dependencies.html":{}}}],["fragmento",{"_index":288,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["framework",{"_index":2356,"title":{},"body":{"index.html":{}}}],["free",{"_index":2284,"title":{},"body":{"dependencies.html":{}}}],["frontend",{"_index":2137,"title":{},"body":{"injectables/UserService.html":{}}}],["fuera",{"_index":1871,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fulldate",{"_index":1042,"title":{},"body":{"components/DetalleComponent.html":{}}}],["fullname",{"_index":2154,"title":{},"body":{"injectables/UserService.html":{}}}],["fullpath",{"_index":307,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["fullpath.split('/').filter(boolean",{"_index":310,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["funcionamiento",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futbol",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["futuro",{"_index":1134,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["g",{"_index":667,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["gap",{"_index":1263,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["garantizar",{"_index":1918,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["gener",{"_index":1969,"title":{},"body":{"interfaces/Report.html":{}}}],["generadas",{"_index":1698,"title":{},"body":{"injectables/PostService.html":{}}}],["generado",{"_index":1676,"title":{},"body":{"injectables/PostCategoryService.html":{},"interfaces/Report.html":{}}}],["generados",{"_index":813,"title":{},"body":{"injectables/CommentService.html":{}}}],["general",{"_index":712,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["generales",{"_index":848,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["generalmente",{"_index":1127,"title":{},"body":{"components/ForbiddenComponent.html":{},"injectables/ReportService.html":{}}}],["generar",{"_index":244,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["generate",{"_index":2323,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2296,"title":{},"body":{"index.html":{}}}],["gestiona",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{}}}],["gestionar",{"_index":796,"title":{},"body":{"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["gestión",{"_index":1452,"title":{},"body":{"components/NotificacionesComponent.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{}}}],["getall",{"_index":1672,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["getall(categoryid",{"_index":1704,"title":{},"body":{"injectables/PostService.html":{}}}],["getallreports",{"_index":1975,"title":{},"body":{"injectables/ReportService.html":{}}}],["getaveragescore",{"_index":2062,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getaveragescore(idpost",{"_index":2066,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getazureuser",{"_index":2100,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid",{"_index":1694,"title":{},"body":{"injectables/PostService.html":{}}}],["getbyid(idpost",{"_index":1709,"title":{},"body":{"injectables/PostService.html":{}}}],["getbypostid",{"_index":802,"title":{},"body":{"injectables/CommentService.html":{}}}],["getbypostid(idpost",{"_index":822,"title":{},"body":{"injectables/CommentService.html":{}}}],["getcategoriasfiltradas",{"_index":405,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["getchild",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(route",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["gethoyiso",{"_index":1429,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["getiduser",{"_index":2101,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":2102,"title":{},"body":{"injectables/UserService.html":{}}}],["getpaginas",{"_index":1589,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getpostsfiltrados",{"_index":1582,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getpostspaginados",{"_index":1592,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getpublicacionesfiltradas",{"_index":577,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["getresumenscores",{"_index":2063,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getresumenscores(iduser",{"_index":2069,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getrole",{"_index":2039,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":2293,"title":{"index.html":{}},"body":{}}],["gettodas",{"_index":1404,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["gettotalpaginas",{"_index":1584,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getuser",{"_index":2103,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(email",{"_index":2122,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid",{"_index":2104,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(iduser",{"_index":2124,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserinitial",{"_index":1499,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getuserscore",{"_index":2064,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getuserscore(idpost",{"_index":2075,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getusuariosfiltrados",{"_index":2196,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["getvigentes",{"_index":1405,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["global",{"_index":1084,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"miscellaneous/variables.html":{}}}],["globales",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"miscellaneous/variables.html":{}}}],["gracias",{"_index":1939,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["gradient(to",{"_index":1375,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["gris",{"_index":361,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["group",{"_index":1465,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["gráfica",{"_index":1826,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["guard",{"_index":180,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guarda",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["guardar",{"_index":382,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/RegisterComponent.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["guardarregistro",{"_index":1729,"title":{},"body":{"components/RegisterComponent.html":{}}}],["guardarsede",{"_index":1500,"title":{},"body":{"components/PerfilComponent.html":{}}}],["guards",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["género",{"_index":1855,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["h2",{"_index":1261,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["h4",{"_index":1658,"title":{},"body":{"components/PerfilComponent.html":{}}}],["h5",{"_index":1659,"title":{},"body":{"components/PerfilComponent.html":{}}}],["h6",{"_index":1466,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["ha",{"_index":781,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"miscellaneous/variables.html":{}}}],["hacia",{"_index":302,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["hasrole",{"_index":2040,"title":{},"body":{"injectables/RoleService.html":{}}}],["hasrole(expectedrole",{"_index":2046,"title":{},"body":{"injectables/RoleService.html":{}}}],["hay",{"_index":697,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["hazlo",{"_index":1303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["header",{"_index":1070,"title":{},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["hecho",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":464,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["helpbuilding",{"_index":2330,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":1047,"title":{},"body":{"components/DetalleComponent.html":{}}}],["hidden",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{}}}],["highlight",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hija",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["históricas",{"_index":1416,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["hover",{"_index":358,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["hoy",{"_index":1426,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["hoy.toisostring().split('t')[0",{"_index":1445,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["hoystr",{"_index":1444,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["http",{"_index":799,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2311,"title":{},"body":{"index.html":{}}}],["http://localhost:9090/api/comment",{"_index":832,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:9090/api/notificaciones",{"_index":1418,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["http://localhost:9090/api/post",{"_index":1686,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["http://localhost:9090/api/report",{"_index":1994,"title":{},"body":{"injectables/ReportService.html":{}}}],["http://localhost:9090/api/score",{"_index":2081,"title":{},"body":{"injectables/ScoreService.html":{}}}],["http://localhost:9090/api/usuarios",{"_index":2140,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclient",{"_index":837,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["https://yr3rp1l7fd.execute",{"_index":2148,"title":{},"body":{"injectables/UserService.html":{}}}],["iconmap",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["icono",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["id",{"_index":544,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idcategoria",{"_index":2070,"title":{},"body":{"injectables/ScoreService.html":{}}}],["idcategoria=${idcategoria",{"_index":2088,"title":{},"body":{"injectables/ScoreService.html":{}}}],["idcategory",{"_index":641,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["idcomment",{"_index":769,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["identidad",{"_index":1879,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["identifier",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idpost",{"_index":669,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["idreport",{"_index":1967,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["ids",{"_index":611,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["ids.foreach(id",{"_index":615,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["iduser",{"_index":619,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iduser).subscribe(score",{"_index":1016,"title":{},"body":{"components/DetalleComponent.html":{}}}],["iduser.tostring",{"_index":2168,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoran",{"_index":271,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["igual",{"_index":1913,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ilícito",{"_index":1831,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["impersonar",{"_index":1884,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["implements",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{}}}],["implica",{"_index":1927,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["import",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["important",{"_index":1761,"title":{},"body":{"components/RegisterComponent.html":{}}}],["importante",{"_index":1318,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["imports",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["inactiva",{"_index":446,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{}}}],["inactivo",{"_index":1973,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["inapropiadas",{"_index":691,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["inapropiado",{"_index":534,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["includes",{"_index":2320,"title":{},"body":{"index.html":{}}}],["including",{"_index":2365,"title":{},"body":{"index.html":{}}}],["inclusiva",{"_index":1916,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["inclusivo",{"_index":1849,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["incluye",{"_index":1838,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["incluyendo",{"_index":2073,"title":{},"body":{"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["indexados",{"_index":559,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["indica",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PostService.html":{}}}],["indicado",{"_index":2113,"title":{},"body":{"injectables/UserService.html":{}}}],["infinite",{"_index":1388,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["información",{"_index":1317,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{}}}],["information",{"_index":2364,"title":{},"body":{"index.html":{}}}],["infrinjan",{"_index":1844,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ingresado",{"_index":581,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["inicia",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["inicial",{"_index":1519,"title":{},"body":{"components/PerfilComponent.html":{}}}],["inicializa",{"_index":517,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["inicializar",{"_index":266,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["iniciar",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["iniciarrotacion",{"_index":1324,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["inicio",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/LoginComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["inject",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["inject(activatedroute",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["inject(commentservice",{"_index":985,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(formbuilder",{"_index":402,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["inject(httpclient",{"_index":835,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["inject(msalservice",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["inject(notificacionservice",{"_index":1353,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["inject(postcategoryservice",{"_index":398,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(postservice",{"_index":561,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(reportservice",{"_index":567,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["inject(router",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["inject(scoreservice",{"_index":571,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(userservice",{"_index":575,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{}}}],["injectable",{"_index":218,"title":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":794,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["innecesarias",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":734,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["input[type=\"date",{"_index":1462,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["input[type=\"text",{"_index":1463,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["inputs",{"_index":1236,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["instanceof",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["instancia",{"_index":1355,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["institucional",{"_index":1892,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["institucionales",{"_index":1890,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["integración",{"_index":2093,"title":{},"body":{"injectables/UserService.html":{}}}],["intenta",{"_index":1125,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{}}}],["intento",{"_index":1789,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["interface",{"_index":761,"title":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":763,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":2134,"title":{},"body":{"injectables/UserService.html":{}}}],["interval",{"_index":1359,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["interval(7000).subscribe",{"_index":1368,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["intervalo",{"_index":1336,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["intro",{"_index":1945,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["invitamos",{"_index":1922,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["irrelevantes",{"_index":315,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isadmin",{"_index":2041,"title":{},"body":{"injectables/RoleService.html":{}}}],["islast",{"_index":316,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isloggedin",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["iso",{"_index":772,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["isstudent",{"_index":2042,"title":{},"body":{"injectables/RoleService.html":{}}}],["italic",{"_index":1766,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["item",{"_index":338,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["item.descripcion",{"_index":1930,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["item.label",{"_index":342,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.path",{"_index":341,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.titulo",{"_index":1929,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["items",{"_index":262,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["joaquín",{"_index":1564,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["jp",{"_index":1120,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["junto",{"_index":511,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ForbiddenComponent.html":{}}}],["justify",{"_index":1067,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["karma",{"_index":2345,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":297,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["las",{"_index":444,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":340,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["le",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{}}}],["leaf",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["left",{"_index":728,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["legible",{"_index":286,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{}}}],["length",{"_index":1641,"title":{},"body":{"components/PerfilComponent.html":{}}}],["lenguaje",{"_index":1823,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["letra",{"_index":1520,"title":{},"body":{"components/PerfilComponent.html":{}}}],["library",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["light",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["lighten($azul",{"_index":1481,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["lightness",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["limpia",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["limpias",{"_index":1302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["limpio",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{}}}],["line",{"_index":1055,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["linear",{"_index":1374,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["link",{"_index":752,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["list",{"_index":1464,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"index.html":{}}}],["lista",{"_index":826,"title":{},"body":{"injectables/CommentService.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["literal",{"_index":292,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/UserService.html":{}}}],["llamamos",{"_index":1898,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["lo",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":485,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["local",{"_index":2304,"title":{},"body":{"index.html":{}}}],["localdatetime",{"_index":2001,"title":{},"body":{"injectables/ReportService.html":{}}}],["locale_id",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locales",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["localización",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localname",{"_index":2152,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage",{"_index":1280,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('conectareglasaceptadas",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('iduser",{"_index":2170,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('nombreusuario",{"_index":2153,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('userrole",{"_index":2056,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["localstorage.removeitem('conectareglasaceptadas",{"_index":1906,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.removeitem('name",{"_index":1908,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.removeitem('userrole",{"_index":1907,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('conectareglasaceptadas",{"_index":1900,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.setitem('iduser",{"_index":2167,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('nombreusuario",{"_index":2166,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('userrole",{"_index":2164,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["login'},{'name",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["login.component.html",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":153,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["logo",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["logout",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["los",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["lucro",{"_index":1813,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["lógica",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["maip",{"_index":1552,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["maneja",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["manejo",{"_index":1755,"title":{},"body":{"components/RegisterComponent.html":{}}}],["manualmente",{"_index":323,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["map(cat",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mapa",{"_index":326,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["mapa[slug",{"_index":335,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["mar",{"_index":1567,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["marca",{"_index":1793,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["marcar",{"_index":1899,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["marcarlo",{"_index":1991,"title":{},"body":{"injectables/ReportService.html":{}}}],["margin",{"_index":466,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["masks",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matching",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1822,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["math.ceil(this.postsfiltrados.length",{"_index":1638,"title":{},"body":{"components/PerfilComponent.html":{}}}],["max",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["media",{"_index":1394,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["mediante",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["mejora",{"_index":248,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["melipilla",{"_index":1553,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["mensaje",{"_index":1237,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["mensajes",{"_index":852,"title":{},"body":{"components/ConfiguracionComponent.html":{},"interfaces/NotificacionGlobal.html":{}}}],["mesa",{"_index":1095,"title":{},"body":{"components/FooterComponent.html":{}}}],["metadata",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["methods",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["mi",{"_index":1305,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["microsoft",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["min",{"_index":1265,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["minúsculas",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mis",{"_index":1650,"title":{},"body":{"components/PerfilComponent.html":{}}}],["miscellaneous",{"_index":2375,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miscore",{"_index":969,"title":{},"body":{"components/DetalleComponent.html":{}}}],["misscores",{"_index":486,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["misscores[pub.idpost",{"_index":707,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["modal",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["modalconfirmacioncomponent",{"_index":155,"title":{"components/ModalConfirmacionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["modalidad",{"_index":1540,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["models",{"_index":585,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["models/notificacionglobal",{"_index":1356,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["models/post",{"_index":586,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["models/postcategory",{"_index":414,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{}}}],["models/report",{"_index":1998,"title":{},"body":{"injectables/ReportService.html":{}}}],["models/user",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["moderación",{"_index":1842,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["modern",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modificar",{"_index":1993,"title":{},"body":{"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["modify",{"_index":2316,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2372,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["montt",{"_index":1574,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["more",{"_index":2363,"title":{},"body":{"index.html":{}}}],["mostrado",{"_index":1094,"title":{},"body":{"components/FooterComponent.html":{}}}],["mostrar",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/RegisterComponent.html":{}}}],["mostrarfooter",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["mostrarformulario",{"_index":487,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["mostrarlo",{"_index":2133,"title":{},"body":{"injectables/UserService.html":{}}}],["mostrarmodal",{"_index":1777,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["mostrarmodallogout",{"_index":1272,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mostrarnavbar",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["motivo",{"_index":1912,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["msal",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["msalservice",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["muestra",{"_index":539,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["muted",{"_index":706,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["mutuo",{"_index":1938,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["más",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["módulo",{"_index":1689,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["múltiples",{"_index":1786,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["n.fechafin",{"_index":1459,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.fechainicio",{"_index":1458,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.mensaje",{"_index":1460,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.titulo",{"_index":1455,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["nacimiento",{"_index":1569,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["nada",{"_index":1653,"title":{},"body":{"components/PerfilComponent.html":{}}}],["name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["namefor",{"_index":2324,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["navbar.component.html",{"_index":1271,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1270,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":33,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/NavbarComponent.html":{}}}],["navegar",{"_index":301,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NavbarComponent.html":{}}}],["navigate",{"_index":2310,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["ndice",{"_index":1344,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["necesario",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["necesarios",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["needs",{"_index":2360,"title":{},"body":{"index.html":{}}}],["negro",{"_index":456,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["nete",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["new",{"_index":612,"title":{},"body":{"components/CategoriasComponent.html":{},"components/FooterComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":645,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ng",{"_index":2307,"title":{},"body":{"index.html":{}}}],["ngondestroy",{"_index":1325,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["ngoninit",{"_index":263,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["ni",{"_index":811,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{}}}],["nico",{"_index":773,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}}}],["niega",{"_index":2025,"title":{},"body":{"guards/RoleGuard.html":{}}}],["nombre",{"_index":447,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["nombreautor",{"_index":970,"title":{},"body":{"components/DetalleComponent.html":{}}}],["nombrecategoriamostrada",{"_index":488,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombres",{"_index":512,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombresusuarios",{"_index":489,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombresusuarios[pub.iduser",{"_index":701,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["none",{"_index":357,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["normalize('nfd').replace(/[\\u0300",{"_index":661,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["normas",{"_index":690,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["norte",{"_index":1555,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["nos",{"_index":1934,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["notificacion",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["notificacionbannercomponent",{"_index":159,"title":{"components/NotificacionBannerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["notificaciones",{"_index":850,"title":{},"body":{"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["notificaciones'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["notificaciones.component.html",{"_index":1425,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notificaciones.component.scss",{"_index":1424,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notificacionescomponent",{"_index":162,"title":{"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["notificacionglobal",{"_index":1340,"title":{"interfaces/NotificacionGlobal.html":{}},"body":{"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["notificacionservice",{"_index":1357,"title":{"injectables/NotificacionService.html":{}},"body":{"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["notificación",{"_index":1342,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["now",{"_index":2000,"title":{},"body":{"injectables/ReportService.html":{}}}],["now.getfullyear",{"_index":2002,"title":{},"body":{"injectables/ReportService.html":{}}}],["nueva",{"_index":524,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["nuevapublicacion",{"_index":497,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nuevo",{"_index":808,"title":{},"body":{"injectables/CommentService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["nuevocomentario",{"_index":1026,"title":{},"body":{"components/DetalleComponent.html":{}}}],["nuevos",{"_index":1683,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["null",{"_index":400,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["number",{"_index":505,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["number(raw",{"_index":2171,"title":{},"body":{"injectables/UserService.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":1005,"title":{},"body":{"components/DetalleComponent.html":{}}}],["number:'1.1",{"_index":709,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["number:\\'1.1",{"_index":760,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["numérico",{"_index":2126,"title":{},"body":{"injectables/UserService.html":{}}}],["número",{"_index":779,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["números",{"_index":1591,"title":{},"body":{"components/PerfilComponent.html":{}}}],["o",{"_index":274,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["objeto",{"_index":809,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["objetos",{"_index":1680,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["obliga",{"_index":1771,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["observable",{"_index":814,"title":{},"body":{"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["obtener",{"_index":638,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["obtenidas",{"_index":1347,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["obtenido",{"_index":574,"title":{},"body":{"components/CategoriasComponent.html":{},"components/RegisterComponent.html":{}}}],["obtiene",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["oculta",{"_index":541,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["oeste",{"_index":1556,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["ofensivos",{"_index":1803,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["oferta",{"_index":1817,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["omit",{"_index":805,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["ondestroy",{"_index":1319,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["one",{"_index":2358,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":256,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["online",{"_index":1541,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["opacity",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["opcional",{"_index":300,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["open",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["operaciones",{"_index":2094,"title":{},"body":{"injectables/UserService.html":{}}}],["optimiza",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizada",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":2339,"title":{},"body":{"index.html":{}}}],["optional",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["origen",{"_index":1856,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["otorg",{"_index":786,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["otorga",{"_index":784,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["otros",{"_index":1107,"title":{},"body":{"components/FooterComponent.html":{}}}],["out",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["outline",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["output",{"_index":1254,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["outputs",{"_index":1238,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["ovalle",{"_index":1547,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["overflow",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{}}}],["overlay",{"_index":1255,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["overview",{"_index":2369,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1262,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{}}}],["p.content.tolowercase().includes(texto",{"_index":1637,"title":{},"body":{"components/PerfilComponent.html":{}}}],["p.iduser",{"_index":614,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["p.title.tolowercase().includes(texto",{"_index":1636,"title":{},"body":{"components/PerfilComponent.html":{}}}],["package",{"_index":2272,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":349,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["padre",{"_index":1545,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["page",{"_index":2371,"title":{},"body":{"index.html":{}}}],["pagina",{"_index":1508,"title":{},"body":{"components/PerfilComponent.html":{}}}],["paginaactual",{"_index":1492,"title":{},"body":{"components/PerfilComponent.html":{}}}],["paginas",{"_index":1503,"title":{},"body":{"components/PerfilComponent.html":{}}}],["panel",{"_index":454,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["pantalla",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["para",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["parte",{"_index":685,"title":{},"body":{"components/CategoriasComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["participa",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["participación",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["participar",{"_index":1050,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["path",{"_index":299,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["perfil",{"_index":1306,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["perfil'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["perfil.component.html",{"_index":1490,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.scss",{"_index":1489,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":164,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["perfiles",{"_index":1882,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["performance",{"_index":2340,"title":{},"body":{"index.html":{}}}],["permisos",{"_index":820,"title":{},"body":{"injectables/CommentService.html":{},"components/ForbiddenComponent.html":{}}}],["permite",{"_index":253,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{}}}],["permitida",{"_index":1702,"title":{},"body":{"injectables/PostService.html":{}}}],["permitir",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["persona",{"_index":1808,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["personal",{"_index":554,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["personales",{"_index":515,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["personalizado",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pertenece",{"_index":774,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["pie",{"_index":1083,"title":{},"body":{"components/FooterComponent.html":{}}}],["pipe(filter(event",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":2329,"title":{},"body":{"index.html":{}}}],["plataforma",{"_index":445,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["plaza",{"_index":1554,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["podrán",{"_index":1843,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["podrías",{"_index":1756,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pointer",{"_index":1955,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["policies",{"_index":1751,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["políticas",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["ponderada",{"_index":1649,"title":{},"body":{"components/PerfilComponent.html":{}}}],["poppins",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["popup",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["por",{"_index":532,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/UserService.html":{}}}],["posibles",{"_index":1576,"title":{},"body":{"components/PerfilComponent.html":{}}}],["posición",{"_index":251,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["position",{"_index":457,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["positiva",{"_index":1920,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["post",{"_index":503,"title":{"interfaces/Post.html":{}},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["post.content",{"_index":1040,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post.createddate",{"_index":1041,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post.idpost",{"_index":1631,"title":{},"body":{"components/PerfilComponent.html":{}}}],["post.title",{"_index":1012,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post?.title",{"_index":1039,"title":{},"body":{"components/DetalleComponent.html":{}}}],["postcategory",{"_index":388,"title":{"interfaces/PostCategory.html":{}},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["postcategoryservice",{"_index":411,"title":{"injectables/PostCategoryService.html":{}},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["postingcomment",{"_index":971,"title":{},"body":{"components/DetalleComponent.html":{}}}],["posts",{"_index":610,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["posts.filter(p",{"_index":1605,"title":{},"body":{"components/PerfilComponent.html":{}}}],["posts.length",{"_index":1651,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postservice",{"_index":490,"title":{"injectables/PostService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["postsfiltrados",{"_index":1501,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postspaginados",{"_index":1504,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postsporpagina",{"_index":1493,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postview",{"_index":790,"title":{"interfaces/PostView.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["powerful",{"_index":2321,"title":{},"body":{"index.html":{}}}],["preferente",{"_index":1862,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["preguntas",{"_index":681,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["presenciales",{"_index":1868,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prevenir",{"_index":1785,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["primary",{"_index":1384,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["primera",{"_index":1722,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["primero",{"_index":699,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["principal",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["principios",{"_index":1925,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["private",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["production",{"_index":2338,"title":{},"body":{"index.html":{}}}],["profesional",{"_index":1961,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["profunda",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["prohibición",{"_index":1877,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibida",{"_index":1816,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibido",{"_index":1881,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohíbe",{"_index":1821,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["project",{"_index":2295,"title":{},"body":{"index.html":{}}}],["promedio",{"_index":514,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["promedioponderado",{"_index":1494,"title":{},"body":{"components/PerfilComponent.html":{}}}],["promedios",{"_index":564,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["promedioscores",{"_index":491,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["promedioscores[pub.idpost",{"_index":708,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["prompt('motivo",{"_index":655,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["promueva",{"_index":1853,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["properties",{"_index":40,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"properties.html":{}}}],["propia",{"_index":2074,"title":{},"body":{"injectables/ScoreService.html":{}}}],["proporciona",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protección",{"_index":1832,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["proteger",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protegida",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protegidas",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proveedores",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pub",{"_index":507,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["pub.content",{"_index":704,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.content.tolowercase().includes(texto",{"_index":632,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.createddate",{"_index":702,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.idpost",{"_index":670,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.title",{"_index":700,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["pub.title.tolowercase().includes(texto",{"_index":631,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicaciones",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["publicaciones.length",{"_index":695,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicacionesfiltradas",{"_index":501,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicacionesreportadascomponent",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["publicación",{"_index":525,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["publicado",{"_index":1652,"title":{},"body":{"components/PerfilComponent.html":{}}}],["publicar",{"_index":653,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publiques",{"_index":1833,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["pudo",{"_index":637,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pueden",{"_index":692,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["puedes",{"_index":677,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["puente",{"_index":1558,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["puerto",{"_index":1573,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["pulse",{"_index":1386,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["puntajes",{"_index":1514,"title":{},"body":{"components/PerfilComponent.html":{}}}],["puntuaciones",{"_index":513,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["puntuación",{"_index":477,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["puntuada",{"_index":785,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["puro",{"_index":1952,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["página",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"components/FooterComponent.html":{},"components/PerfilComponent.html":{}}}],["páginas",{"_index":1586,"title":{},"body":{"components/PerfilComponent.html":{}}}],["que",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"miscellaneous/variables.html":{}}}],["quehacer",{"_index":1865,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["r.miscore",{"_index":627,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["r.promedio",{"_index":625,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["radius",{"_index":470,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["raro",{"_index":1902,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["raw",{"_index":2169,"title":{},"body":{"injectables/UserService.html":{}}}],["razón",{"_index":1970,"title":{},"body":{"interfaces/Report.html":{}}}],["raíz",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/RoleGuard.html":{}}}],["rbol",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["reactivas",{"_index":1288,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reactiveformsmodule",{"_index":369,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["reactivo",{"_index":1738,"title":{},"body":{"components/RegisterComponent.html":{}}}],["readonly",{"_index":1762,"title":{},"body":{"components/RegisterComponent.html":{}}}],["realiz",{"_index":771,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["realizada",{"_index":1665,"title":{},"body":{"interfaces/Post.html":{}}}],["realizadas",{"_index":1531,"title":{},"body":{"components/PerfilComponent.html":{}}}],["realizado",{"_index":767,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["reason",{"_index":654,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["reason).subscribe",{"_index":657,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["rechaza",{"_index":1774,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rechazado",{"_index":1972,"title":{},"body":{"interfaces/Report.html":{}}}],["rechazar",{"_index":1796,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rechazarreglas",{"_index":1781,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rechazo",{"_index":1790,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["recibidas",{"_index":1488,"title":{},"body":{"components/PerfilComponent.html":{}}}],["recibido",{"_index":782,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["recibidos",{"_index":1578,"title":{},"body":{"components/PerfilComponent.html":{}}}],["record",{"_index":327,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["recreativas",{"_index":332,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["recuerda",{"_index":687,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["red",{"_index":1936,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["redirecciones",{"_index":1787,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["redirige",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["redirigiendo",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirigir",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redundancia",{"_index":277,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["reference",{"_index":2370,"title":{},"body":{"index.html":{}}}],["references",{"_index":2367,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1350,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["register",{"_index":1725,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["register.component.html",{"_index":1727,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1726,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":169,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1728,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":2105,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(user",{"_index":2127,"title":{},"body":{"injectables/UserService.html":{}}}],["registra",{"_index":1713,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["registradas",{"_index":792,"title":{},"body":{"interfaces/Comment.html":{},"injectables/NotificacionService.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["registrado",{"_index":1731,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["registrados",{"_index":1980,"title":{},"body":{"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["registrar",{"_index":1411,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ScoreService.html":{}}}],["registro",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["regla",{"_index":1948,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["reglas",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["reglasaceptadasguard",{"_index":2233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reglasdelacomunidadcomponent",{"_index":171,"title":{"components/ReglasDeLaComunidadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["reincidencias",{"_index":1845,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["relacionadas",{"_index":1513,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["relacionados",{"_index":683,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["relative",{"_index":458,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["relevantes",{"_index":1087,"title":{},"body":{"components/FooterComponent.html":{}}}],["reload",{"_index":2314,"title":{},"body":{"index.html":{}}}],["replace",{"_index":666,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["replace(/[^a",{"_index":663,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["report",{"_index":1964,"title":{"interfaces/Report.html":{}},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["reporta",{"_index":531,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["reportada",{"_index":659,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{}}}],["reportadas'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["reportadas.component.ts",{"_index":2253,"title":{},"body":{"coverage.html":{}}}],["reportadas/publicaciones",{"_index":2252,"title":{},"body":{"coverage.html":{}}}],["reportado",{"_index":1036,"title":{},"body":{"components/DetalleComponent.html":{},"interfaces/Report.html":{}}}],["reportar",{"_index":535,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["reportarcomentario",{"_index":973,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reportarcomentario(com",{"_index":978,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reportarpublicacion",{"_index":498,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["reportarpublicacion(pub",{"_index":529,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["reportcomment",{"_index":1976,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportcomment(idcomment",{"_index":1984,"title":{},"body":{"injectables/ReportService.html":{}}}],["reporte",{"_index":476,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["reportes",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["reportpost",{"_index":1977,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportpost(idpost",{"_index":1987,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportservice",{"_index":492,"title":{"injectables/ReportService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["representa",{"_index":765,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}}}],["requiere",{"_index":819,"title":{},"body":{"injectables/CommentService.html":{}}}],["requieren",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"components/FooterComponent.html":{}}}],["reservados",{"_index":1117,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["resolucion",{"_index":1968,"title":{},"body":{"interfaces/Report.html":{}}}],["resources",{"_index":2362,"title":{},"body":{"index.html":{}}}],["respetar",{"_index":1923,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respeto",{"_index":1798,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respetuosa",{"_index":1933,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respetuoso",{"_index":688,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["responsabilidad",{"_index":1866,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["responsable",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["responsables",{"_index":1873,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["restringe",{"_index":2016,"title":{},"body":{"guards/RoleGuard.html":{}}}],["resultados",{"_index":1587,"title":{},"body":{"components/PerfilComponent.html":{}}}],["results",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumen",{"_index":2072,"title":{},"body":{"injectables/ScoreService.html":{}}}],["resumenes.foreach(r",{"_index":623,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["retorna",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["return",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["reutilizable",{"_index":1228,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["revisadas",{"_index":1860,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["revisado",{"_index":1992,"title":{},"body":{"injectables/ReportService.html":{}}}],["revisión",{"_index":1983,"title":{},"body":{"injectables/ReportService.html":{}}}],["rgba($azul",{"_index":1477,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["rgba(0",{"_index":721,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["rgba(255",{"_index":1308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["right",{"_index":1376,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rol",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["role",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["roleguard",{"_index":2014,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":1129,"title":{},"body":{"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["roleservice",{"_index":2035,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["root",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["rotacionsub",{"_index":1323,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rotación",{"_index":1328,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rotador",{"_index":1351,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rotativo",{"_index":1314,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["route",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"guards/RoleGuard.html":{}}}],["route.data['expectedroles",{"_index":2029,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.firstchild",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/reglas",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1088,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["routermodule",{"_index":258,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["routeroutlet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2305,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2347,"title":{},"body":{"index.html":{}}}],["running",{"_index":2309,"title":{},"body":{"index.html":{}}}],["rut",{"_index":1839,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ruta",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["rutas",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentService.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rápidos",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["s",{"_index":684,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{}}}],["san",{"_index":1560,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["sans",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sass:color",{"_index":344,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["scaffolding",{"_index":2319,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1391,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["scale(1.03",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["scale(1.2",{"_index":1392,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["schematics",{"_index":2327,"title":{},"body":{"index.html":{}}}],["score",{"_index":671,"title":{"interfaces/Score.html":{}},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["score.score",{"_index":1018,"title":{},"body":{"components/DetalleComponent.html":{}}}],["scorerequests",{"_index":1619,"title":{},"body":{"components/PerfilComponent.html":{}}}],["scorerequests.length",{"_index":1621,"title":{},"body":{"components/PerfilComponent.html":{}}}],["scores",{"_index":2059,"title":{},"body":{"injectables/ScoreService.html":{}}}],["scoreservice",{"_index":493,"title":{"injectables/ScoreService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["se",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"miscellaneous/variables.html":{}}}],["seccion",{"_index":1473,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["sección",{"_index":304,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["secondary",{"_index":1380,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["sede",{"_index":1485,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["sedes",{"_index":1495,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["seg",{"_index":314,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segmento",{"_index":284,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments",{"_index":309,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments.foreach((seg",{"_index":313,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments.length",{"_index":317,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segundos",{"_index":1332,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["segura",{"_index":1917,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["seguridad",{"_index":1876,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["seguro",{"_index":1243,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["según",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["selecciona",{"_index":2217,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["seleccionada",{"_index":1539,"title":{},"body":{"components/PerfilComponent.html":{}}}],["seleccionar",{"_index":1724,"title":{},"body":{"components/RegisterComponent.html":{}}}],["seleccione",{"_index":1758,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select:invalid",{"_index":1764,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selector",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["separación",{"_index":1960,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ser",{"_index":693,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["serif",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serveonce",{"_index":2308,"title":{},"body":{"index.html":{}}}],["server",{"_index":2302,"title":{},"body":{"index.html":{}}}],["services",{"_index":587,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["services/user.service",{"_index":2027,"title":{},"body":{"guards/RoleGuard.html":{}}}],["servicio",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["servicios",{"_index":1096,"title":{},"body":{"components/FooterComponent.html":{}}}],["serán",{"_index":812,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["sesión",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["sessionstorage.clear",{"_index":1909,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["set(posts.map(p",{"_index":613,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["setiduser",{"_index":2106,"title":{},"body":{"injectables/UserService.html":{}}}],["setiduser(iduser",{"_index":2129,"title":{},"body":{"injectables/UserService.html":{}}}],["setname",{"_index":2107,"title":{},"body":{"injectables/UserService.html":{}}}],["setname(name",{"_index":2131,"title":{},"body":{"injectables/UserService.html":{}}}],["setrole",{"_index":2108,"title":{},"body":{"injectables/UserService.html":{}}}],["setrole(role",{"_index":2135,"title":{},"body":{"injectables/UserService.html":{}}}],["setscore",{"_index":2065,"title":{},"body":{"injectables/ScoreService.html":{}}}],["setscore(score",{"_index":2079,"title":{},"body":{"injectables/ScoreService.html":{}}}],["shadow",{"_index":719,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["shared/modal",{"_index":1290,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["si",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigue",{"_index":689,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["siguiente",{"_index":1655,"title":{},"body":{"components/PerfilComponent.html":{}}}],["siguientes",{"_index":1924,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["sin",{"_index":810,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["sincroniza",{"_index":2159,"title":{},"body":{"injectables/UserService.html":{}}}],["sistema",{"_index":1703,"title":{},"body":{"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["size",{"_index":352,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["slidefadein",{"_index":1469,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["slideindown",{"_index":1382,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["slug",{"_index":287,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{}}}],["slug.charat(0).touppercase",{"_index":336,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["slug.slice(1",{"_index":337,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["slugify",{"_index":499,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["slugify(text",{"_index":536,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["slugs",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["snapshot",{"_index":2026,"title":{},"body":{"guards/RoleGuard.html":{}}}],["sobre",{"_index":1966,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["solid",{"_index":738,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["solo",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["speed",{"_index":2341,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2228,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":2232,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts",{"_index":242,"title":{},"body":{"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:18",{"_index":306,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:19",{"_index":305,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:25",{"_index":293,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:31",{"_index":265,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:62",{"_index":281,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts",{"_index":472,"title":{},"body":{"components/CategoriasComponent.html":{},"coverage.html":{}}}],["src/app/components/categorias/categorias.component.ts:112",{"_index":508,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:142",{"_index":578,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:154",{"_index":538,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:163",{"_index":522,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:198",{"_index":530,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:206",{"_index":537,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:214",{"_index":506,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:33",{"_index":569,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:34",{"_index":570,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:35",{"_index":546,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:36",{"_index":560,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:37",{"_index":562,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:38",{"_index":576,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:39",{"_index":568,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:40",{"_index":572,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:43",{"_index":573,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:46",{"_index":543,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:49",{"_index":545,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:52",{"_index":557,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:55",{"_index":565,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:58",{"_index":558,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:61",{"_index":563,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:64",{"_index":552,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:67",{"_index":547,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:70",{"_index":550,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:73",{"_index":555,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:76",{"_index":551,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:81",{"_index":516,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts",{"_index":963,"title":{},"body":{"components/DetalleComponent.html":{},"coverage.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:119",{"_index":981,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:128",{"_index":979,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:136",{"_index":982,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:141",{"_index":975,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:29",{"_index":1000,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:30",{"_index":1001,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:31",{"_index":997,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:32",{"_index":986,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:33",{"_index":1003,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:34",{"_index":999,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:35",{"_index":1002,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:36",{"_index":990,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:38",{"_index":995,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:39",{"_index":984,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:40",{"_index":983,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:41",{"_index":991,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:42",{"_index":996,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:43",{"_index":998,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:44",{"_index":992,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:45",{"_index":989,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:46",{"_index":994,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:48",{"_index":977,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:97",{"_index":976,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/configuracion/categorias",{"_index":364,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/configuracion.component.ts",{"_index":843,"title":{},"body":{"components/ConfiguracionComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts",{"_index":1423,"title":{},"body":{"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:16",{"_index":1440,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:17",{"_index":1439,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:18",{"_index":1431,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:32",{"_index":1438,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:36",{"_index":1436,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:42",{"_index":1437,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:47",{"_index":1432,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:53",{"_index":1433,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:62",{"_index":1434,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts",{"_index":2174,"title":{},"body":{"components/UsuariosComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:17",{"_index":2190,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:18",{"_index":2195,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:20",{"_index":2194,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:21",{"_index":2193,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:22",{"_index":2189,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:23",{"_index":2191,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:24",{"_index":2192,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:49",{"_index":2188,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:60",{"_index":2197,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:66",{"_index":2184,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:70",{"_index":2186,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:75",{"_index":2183,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:80",{"_index":2187,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:22",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:23",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:26",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:29",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:34",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:37",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:52",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:89",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":1082,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:19",{"_index":1093,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/forbidden/forbidden.component.ts",{"_index":1123,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:71",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:90",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1267,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:21",{"_index":1289,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1283,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":1282,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:26",{"_index":1284,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":1281,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":1286,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:37",{"_index":1279,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:56",{"_index":1278,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:63",{"_index":1277,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:76",{"_index":1275,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/notificacion",{"_index":1312,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts",{"_index":1483,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts:104",{"_index":1524,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:127",{"_index":1511,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:159",{"_index":1518,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:166",{"_index":1522,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:178",{"_index":1516,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:185",{"_index":1583,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:197",{"_index":1585,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:204",{"_index":1590,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:211",{"_index":1593,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:220",{"_index":1506,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:37",{"_index":1581,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:38",{"_index":1532,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:39",{"_index":1536,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:40",{"_index":1526,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:41",{"_index":1529,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:42",{"_index":1537,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:45",{"_index":1580,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:48",{"_index":1530,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:51",{"_index":1525,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:54",{"_index":1538,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:57",{"_index":1575,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:83",{"_index":1579,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:86",{"_index":1577,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:89",{"_index":1535,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:92",{"_index":1527,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:95",{"_index":1534,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:98",{"_index":1528,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/publicaciones",{"_index":2251,"title":{},"body":{"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1721,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:19",{"_index":1734,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:20",{"_index":1741,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:21",{"_index":1739,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:24",{"_index":1737,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:27",{"_index":1733,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:30",{"_index":1735,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:36",{"_index":1740,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:49",{"_index":1732,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:68",{"_index":1730,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/reglas",{"_index":1768,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:27",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/role.guard.ts",{"_index":2015,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/role.guard.ts:23",{"_index":2021,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/core/services/comment.service.ts",{"_index":795,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/app/core/services/comment.service.ts:15",{"_index":833,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:16",{"_index":836,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:23",{"_index":823,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:32",{"_index":806,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:41",{"_index":817,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:51",{"_index":828,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/notificacion.service.ts",{"_index":1403,"title":{},"body":{"injectables/NotificacionService.html":{},"coverage.html":{}}}],["src/app/core/services/notificacion.service.ts:15",{"_index":1407,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:23",{"_index":1414,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:32",{"_index":1409,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:40",{"_index":1413,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:48",{"_index":1417,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/post",{"_index":1670,"title":{},"body":{"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["src/app/core/services/post.service.ts",{"_index":1692,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/app/core/services/post.service.ts:15",{"_index":1715,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:16",{"_index":1716,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:23",{"_index":1705,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:35",{"_index":1710,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:45",{"_index":1697,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:54",{"_index":1701,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:63",{"_index":1712,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/report.service.ts",{"_index":1974,"title":{},"body":{"injectables/ReportService.html":{},"coverage.html":{}}}],["src/app/core/services/report.service.ts:16",{"_index":1995,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:17",{"_index":1996,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:18",{"_index":1997,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:26",{"_index":1988,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:54",{"_index":1985,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:71",{"_index":1979,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:81",{"_index":1990,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/role.service.ts",{"_index":2036,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/app/core/services/role.service.ts:16",{"_index":2043,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:25",{"_index":2047,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:34",{"_index":2052,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:42",{"_index":2054,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/score.service.ts",{"_index":2058,"title":{},"body":{"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/core/services/score.service.ts:16",{"_index":2082,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:17",{"_index":2083,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:24",{"_index":2067,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:34",{"_index":2076,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:42",{"_index":2080,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:53",{"_index":2071,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":2092,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:104",{"_index":2120,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:112",{"_index":2130,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:117",{"_index":2119,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:126",{"_index":2125,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:135",{"_index":2117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:144",{"_index":2139,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:152",{"_index":2116,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":2141,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":2143,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:20",{"_index":2142,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:22",{"_index":2146,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:23",{"_index":2110,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:41",{"_index":2118,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:55",{"_index":2112,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:64",{"_index":2128,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:72",{"_index":2123,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:80",{"_index":2136,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:85",{"_index":2121,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:90",{"_index":2114,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:98",{"_index":2132,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/models/notificacionglobal.ts",{"_index":1397,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"coverage.html":{}}}],["src/app/models/post.ts",{"_index":764,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["src/app/models/postcategory.ts",{"_index":1666,"title":{},"body":{"interfaces/PostCategory.html":{},"coverage.html":{}}}],["src/app/models/report.ts",{"_index":1965,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":2090,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/modal",{"_index":1225,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":257,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["start",{"_index":2303,"title":{},"body":{"index.html":{}}}],["started",{"_index":2294,"title":{"index.html":{}},"body":{}}],["state",{"_index":1632,"title":{},"body":{"components/PerfilComponent.html":{}}}],["statements",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":419,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["sticky",{"_index":1396,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["storage",{"_index":1905,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["store",{"_index":2334,"title":{},"body":{"index.html":{}}}],["stretched",{"_index":751,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["string",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["string(now.getdate()).padstart(2",{"_index":2005,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.gethours()).padstart(2",{"_index":2007,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.getminutes()).padstart(2",{"_index":2008,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.getmonth",{"_index":2003,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.getseconds()).padstart(2",{"_index":2009,"title":{},"body":{"injectables/ReportService.html":{}}}],["strong",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["student",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["style",{"_index":1765,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["styles",{"_index":241,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["styleurl",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{}}}],["styleurls",{"_index":259,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["su",{"_index":250,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["subscribe",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["subscription",{"_index":1348,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["such",{"_index":2328,"title":{},"body":{"index.html":{}}}],["suits",{"_index":2359,"title":{},"body":{"index.html":{}}}],["sumarvisualizacion",{"_index":1695,"title":{},"body":{"injectables/PostService.html":{}}}],["sumarvisualizacion(idpost",{"_index":1711,"title":{},"body":{"injectables/PostService.html":{}}}],["superior",{"_index":1269,"title":{},"body":{"components/NavbarComponent.html":{}}}],["suplantación",{"_index":1878,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["sus",{"_index":521,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["suscripción",{"_index":1335,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["suspensión",{"_index":1847,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["t",{"_index":2006,"title":{},"body":{"injectables/ReportService.html":{}}}],["tabla",{"_index":742,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["table",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["también",{"_index":1784,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tarjeta",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{}}}],["te",{"_index":1921,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tecnológicos",{"_index":1106,"title":{},"body":{"components/FooterComponent.html":{}}}],["teléfonos",{"_index":1108,"title":{},"body":{"components/FooterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tem",{"_index":296,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["temas",{"_index":682,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["templateurl",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["tems",{"_index":268,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["tenga",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["terceros",{"_index":1835,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["test",{"_index":2346,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2353,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":2350,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2343,"title":{},"body":{"index.html":{}}}],["text",{"_index":355,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["textarea",{"_index":735,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{}}}],["texto",{"_index":285,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["theater",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.actual",{"_index":1363,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.apiurl}/resumen?iduser=${iduser",{"_index":2087,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.cancelar",{"_index":437,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.cancelaredicion",{"_index":2214,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.cargar",{"_index":420,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.cargarnotificaciones",{"_index":1443,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.cargarpublicaciones",{"_index":606,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.cargarpublicaciones(user.iduser",{"_index":1602,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.cargarusuarios",{"_index":2200,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.categoriaform",{"_index":416,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.invalid",{"_index":432,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.patchvalue(this.editing",{"_index":430,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.reset",{"_index":431,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.value",{"_index":434,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaid",{"_index":601,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.categorianombre",{"_index":603,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.categorias",{"_index":422,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categorias.filter(c",{"_index":425,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categories",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["this.categoryservice.create(datos).subscribe",{"_index":438,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.delete(cat.idcategory).subscribe",{"_index":441,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.getall().subscribe(c",{"_index":427,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.update(this.editing.idcategory",{"_index":435,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.checkandredirect(account.username",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.comentarioform",{"_index":1006,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.invalid",{"_index":1024,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.reset",{"_index":1032,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.value.content",{"_index":1029,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comments",{"_index":1023,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comments.push(comentario",{"_index":1031,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentservice.create(nuevocomentario).subscribe",{"_index":1030,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentservice.getbypostid(p.idpost",{"_index":1611,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.commentservice.getbypostid(post.idpost).subscribe(comments",{"_index":1022,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.currentindex",{"_index":1369,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.editing",{"_index":429,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["this.editing?.iduser",{"_index":2210,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.email",{"_index":1744,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":417,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["this.filtrobusqueda.trim",{"_index":628,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.filtrobusqueda.trim().tolowercase",{"_index":629,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.filtrocategoria.tolowercase",{"_index":424,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.filtrocategoria.trim",{"_index":421,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.filtronombre.tolowercase",{"_index":2203,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.filtronombre.trim",{"_index":2201,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.filtropost.tolowercase",{"_index":1634,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.filtropost.trim",{"_index":1633,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.form",{"_index":592,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.invalid",{"_index":635,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.reset",{"_index":634,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.value.content",{"_index":640,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.value.title",{"_index":639,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.formulario",{"_index":1441,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.formulario.invalid",{"_index":1448,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.formulario.reset",{"_index":1450,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.getchild(this.route",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gethoyiso",{"_index":1442,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.getrole",{"_index":2057,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":1421,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`${this.apiurl}/${idcomment",{"_index":841,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.delete(`${this.apiurl}/${idpost",{"_index":1719,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl",{"_index":2012,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.apiurl}/${email",{"_index":2163,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/${idpost",{"_index":1718,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}/average/${idpost",{"_index":2084,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.get(`${this.apiurl}/exists/${encodedemail",{"_index":2162,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/id/${iduser",{"_index":2172,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/user/${iduser}/post/${idpost",{"_index":2085,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.get(`${this.apiurl}/vigentes",{"_index":1422,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["this.http.get(`${this.apiurl}?idcategory=${categoryid",{"_index":1717,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}?idpost=${idpost",{"_index":839,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.get(this.apiurl",{"_index":1420,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["this.http.get(url",{"_index":2089,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.post(`${this.apiurl}/comentario",{"_index":2011,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.post(`${this.apiurl}/publicacion",{"_index":2010,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.post(`${this.apiurl}/save",{"_index":2086,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.post(this.apiurl",{"_index":840,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.apiurl}/${email",{"_index":2173,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":1691,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["this.http.put(`${this.apiurl}/${idcomment",{"_index":842,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.put(`${this.apiurl}/${idpost}/view",{"_index":1720,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.put(`${this.apiurl}/${idreport",{"_index":2013,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.iconmap[slug",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.iniciarrotacion",{"_index":1366,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.isloggedin",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.items",{"_index":312,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.items.push",{"_index":319,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.items.unshift",{"_index":325,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.loading",{"_index":607,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.logout",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.miscore",{"_index":1017,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.misscores[pub.idpost",{"_index":672,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.misscores[r.idpost",{"_index":626,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.mostrar",{"_index":1365,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.mostrarfooter",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mostrarformulario",{"_index":633,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.mostrarmodal",{"_index":1903,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["this.mostrarmodallogout",{"_index":1300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.mostrarnavbar",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.msal.instance.getactiveaccount",{"_index":1294,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.msal.logoutpopup().subscribe",{"_index":1301,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.msalservice.instance.getactiveaccount",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["this.msalservice.instance.getallaccounts()[0",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.instance.setactiveaccount(account",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.loginpopup().subscribe",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.logoutpopup().subscribe",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":1746,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.nombreautor",{"_index":1021,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.nombrecategoriamostrada",{"_index":605,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.nombresusuarios[id",{"_index":617,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.notificaciones",{"_index":1361,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["this.notificaciones.length",{"_index":1362,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.notificaciones[0",{"_index":1364,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.notificaciones[this.currentindex",{"_index":1370,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.notificacionservice.crear(this.formulario.value).subscribe",{"_index":1449,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.notificacionservice.eliminar(id).subscribe",{"_index":1451,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.notificacionservice.gettodas().subscribe(data",{"_index":1447,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.paginaactual",{"_index":1608,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.post",{"_index":1010,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.post.idpost",{"_index":1027,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postcategoryservice.getall().subscribe(categories",{"_index":597,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["this.postcategoryservice.getall().subscribe(cats",{"_index":1596,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postingcomment",{"_index":1025,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.posts",{"_index":1604,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.filter(p",{"_index":1635,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.length",{"_index":1607,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.map(p",{"_index":1610,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postservice.createpost(nueva).subscribe",{"_index":644,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.postservice.getall().subscribe(posts",{"_index":1603,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postservice.getall(this.categoriaid).subscribe(posts",{"_index":608,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.postservice.getbyid(id).subscribe",{"_index":1009,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postservice.sumarvisualizacion(id).subscribe",{"_index":1008,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postsfiltrados.slice(inicio",{"_index":1644,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postsporpagina",{"_index":1639,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.promedio",{"_index":1014,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.promedioponderado",{"_index":1624,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.promedioscores[pub.idpost",{"_index":674,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.promedioscores[r.idpost",{"_index":624,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.publicaciones",{"_index":609,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.publicaciones.filter(pub",{"_index":630,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.registerform",{"_index":1748,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1749,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.center",{"_index":1750,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.reportservice.reportcomment(com.idcomment",{"_index":1034,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.reportservice.reportpost(pub.idpost",{"_index":656,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.reportservice.reportpost(this.post.idpost",{"_index":1033,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.role",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.rotacionsub",{"_index":1367,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.rotacionsub.unsubscribe",{"_index":1371,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.route.snapshot.parammap.get('slug",{"_index":594,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.router.events",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/categoria",{"_index":1037,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":600,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.router.navigate(['/dashboard/ayudantias",{"_index":1630,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1910,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["this.router.navigate(['/registro",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/reglas",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":308,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.scoreservice.getaveragescore(p.idpost",{"_index":1620,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.scoreservice.getaveragescore(post.idpost).subscribe(avg",{"_index":1013,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.getaveragescore(pub.idpost).subscribe(avg",{"_index":673,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.scoreservice.getaveragescore(this.post!.idpost).subscribe(avg",{"_index":1038,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.getresumenscores(iduser",{"_index":621,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.scoreservice.getuserscore(post.idpost",{"_index":1015,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.setscore",{"_index":668,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.sede",{"_index":1600,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.servicio.getvigentes().subscribe((lista",{"_index":1360,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.setname(fullname",{"_index":2157,"title":{},"body":{"injectables/UserService.html":{}}}],["this.slug",{"_index":593,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.slugify(cat.name",{"_index":599,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["this.toreadable(seg",{"_index":320,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.totalcomments",{"_index":1614,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.totalpaginas",{"_index":1642,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.totalposts",{"_index":1606,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user",{"_index":1599,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user.name.charat(0).touppercase",{"_index":1627,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user?.name",{"_index":1626,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.userform",{"_index":2198,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.invalid",{"_index":2209,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.patchvalue(this.editing",{"_index":2207,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.reset",{"_index":2208,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.value",{"_index":2211,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.username",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.usernamesubject.asobservable",{"_index":2144,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usernamesubject.next(localname",{"_index":2158,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usernamesubject.next(name",{"_index":2165,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users",{"_index":2202,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.users.filter(u",{"_index":2204,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.checkuserexists(email).subscribe",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.clearrole",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.deleteuser(user.iduser).subscribe",{"_index":2216,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.getall().subscribe(users",{"_index":2206,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.getazureuser",{"_index":1743,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getazureuser()?.email",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.getazureuser()?.fullname",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.getiduser",{"_index":620,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"injectables/ReportService.html":{}}}],["this.userservice.getname",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.userservice.getrole",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{},"guards/RoleGuard.html":{}}}],["this.userservice.getuser(email).subscribe",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuser(email).subscribe(user",{"_index":1598,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.getuserbyid(id).subscribe(user",{"_index":616,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.userservice.getuserbyid(post.iduser).subscribe",{"_index":1019,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.userservice.registeruser(updateduser).subscribe",{"_index":1629,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.registeruser(user).subscribe",{"_index":1754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.setiduser(user.iduser",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setname(datos.name",{"_index":2213,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.setname(user.name",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setrole(user.role",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.updateuser(this.editing.email",{"_index":2212,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.username",{"_index":1285,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tiene",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["tildes",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tipo",{"_index":1410,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/UserService.html":{}}}],["title",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["titulo",{"_index":453,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["toda",{"_index":1807,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["todas",{"_index":510,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["todavía",{"_index":1049,"title":{},"body":{"components/DetalleComponent.html":{}}}],["todo",{"_index":1800,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["todos",{"_index":824,"title":{},"body":{"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["toggleformulario",{"_index":500,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["token",{"_index":1297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toleran",{"_index":1802,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tolowercase",{"_index":660,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["tools",{"_index":2322,"title":{},"body":{"index.html":{}}}],["top",{"_index":741,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["toreadable",{"_index":264,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["toreadable(slug",{"_index":280,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["total",{"_index":791,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["totalcomments",{"_index":1496,"title":{},"body":{"components/PerfilComponent.html":{}}}],["totalpaginas",{"_index":1502,"title":{},"body":{"components/PerfilComponent.html":{}}}],["totalposts",{"_index":1497,"title":{},"body":{"components/PerfilComponent.html":{}}}],["track",{"_index":339,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["traducido",{"_index":290,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["traer",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{}}}],["transform",{"_index":745,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["transformar",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transition",{"_index":744,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["translatey",{"_index":748,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["translatey(0",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["translatey(20px",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["translatey(8px",{"_index":1470,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["transparent",{"_index":348,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tratada",{"_index":1809,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["true",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["trueques",{"_index":334,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"interfaces/PostCategory.html":{}}}],["tslib",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tus",{"_index":679,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["tuyos",{"_index":1834,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["type",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["término",{"_index":1401,"title":{},"body":{"interfaces/NotificacionGlobal.html":{}}}],["título",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["u",{"_index":540,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["u.center",{"_index":2221,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.email",{"_index":2218,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.name",{"_index":2219,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.name?.tolowercase().includes(filtro",{"_index":2205,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.role",{"_index":2220,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u036f]/g",{"_index":662,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["uc",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["un",{"_index":283,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["una",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["undefined",{"_index":321,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["undefined).subscribe(resumenes",{"_index":622,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["underline",{"_index":359,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["unit",{"_index":2342,"title":{},"body":{"index.html":{}}}],["uno",{"_index":2022,"title":{},"body":{"guards/RoleGuard.html":{}}}],["update",{"_index":803,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["update(id",{"_index":1681,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["update(idcomment",{"_index":827,"title":{},"body":{"injectables/CommentService.html":{}}}],["updateduser",{"_index":1628,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["updatestatus",{"_index":1978,"title":{},"body":{"injectables/ReportService.html":{}}}],["updatestatus(idreport",{"_index":1989,"title":{},"body":{"injectables/ReportService.html":{}}}],["updateuser",{"_index":2109,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(email",{"_index":2138,"title":{},"body":{"injectables/UserService.html":{}}}],["uppercase",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["url",{"_index":247,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["usa",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usabilidad",{"_index":249,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["usado",{"_index":1981,"title":{},"body":{"injectables/ReportService.html":{}}}],["usando",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["use",{"_index":343,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["user",{"_index":1020,"title":{"interfaces/User.html":{}},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["user.center",{"_index":1601,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user.iduser",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["user.name",{"_index":618,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["user.policies",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.service",{"_index":1999,"title":{},"body":{"injectables/ReportService.html":{}}}],["user?.email",{"_index":1646,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user?.name",{"_index":1645,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user?.role",{"_index":1647,"title":{},"body":{"components/PerfilComponent.html":{}}}],["userform",{"_index":2178,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["username",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["usernamesubject",{"_index":2096,"title":{},"body":{"injectables/UserService.html":{}}}],["userrole",{"_index":2030,"title":{},"body":{"guards/RoleGuard.html":{}}}],["users",{"_index":2179,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["userservice",{"_index":494,"title":{"injectables/UserService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["usevalue",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":2297,"title":{},"body":{"index.html":{}}}],["uso",{"_index":1887,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["usuario",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["usuarios.component.html",{"_index":2176,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["usuarios.component.scss",{"_index":2175,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["usuarioscomponent",{"_index":174,"title":{"components/UsuariosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["usuariosfiltrados",{"_index":2182,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["utiliza",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RoleService.html":{}}}],["utilizada",{"_index":1398,"title":{},"body":{"interfaces/NotificacionGlobal.html":{}}}],["utilizado",{"_index":1128,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["utilizando",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilizar",{"_index":1773,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["val",{"_index":1623,"title":{},"body":{"components/PerfilComponent.html":{}}}],["valida",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["validando",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["validar",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["validators",{"_index":409,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["validators.email",{"_index":2199,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["validators.maxlength(300",{"_index":1007,"title":{},"body":{"components/DetalleComponent.html":{}}}],["validators.required",{"_index":418,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["valor",{"_index":504,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["valores",{"_index":1684,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["valparaíso",{"_index":1565,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["varas",{"_index":1549,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["variable",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2376,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venta",{"_index":1818,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ver",{"_index":1122,"title":{},"body":{"components/FooterComponent.html":{}}}],["verifica",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["verificar",{"_index":2038,"title":{},"body":{"injectables/RoleService.html":{}}}],["version",{"_index":2299,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vespucio",{"_index":1557,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["vez",{"_index":1723,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["vibrante",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vida",{"_index":1104,"title":{},"body":{"components/FooterComponent.html":{}}}],["viene",{"_index":1752,"title":{},"body":{"components/RegisterComponent.html":{}}}],["views",{"_index":783,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["vigentes",{"_index":1338,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{}}}],["villarrica",{"_index":1572,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["violencia",{"_index":1825,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["violentos",{"_index":1806,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["virtual",{"_index":1543,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["visibilidad",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["visible",{"_index":298,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["visibles",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["visit",{"_index":2368,"title":{},"body":{"index.html":{}}}],["vista",{"_index":518,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["visual",{"_index":278,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["visualizaciones",{"_index":780,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["visualización",{"_index":473,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{}}}],["visualizada",{"_index":1714,"title":{},"body":{"injectables/PostService.html":{}}}],["visualizar",{"_index":1484,"title":{},"body":{"components/PerfilComponent.html":{}}}],["viña",{"_index":1566,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["void",{"_index":279,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["voluntariado",{"_index":333,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["volver",{"_index":254,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{}}}],["votado",{"_index":2078,"title":{},"body":{"injectables/ScoreService.html":{}}}],["vulgar",{"_index":1824,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["válido",{"_index":528,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["warning",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{}}}],["weight",{"_index":362,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["whatsapp",{"_index":1097,"title":{},"body":{"components/FooterComponent.html":{}}}],["whenever",{"_index":2315,"title":{},"body":{"index.html":{}}}],["white",{"_index":716,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["width",{"_index":462,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["works",{"_index":1135,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["wrap",{"_index":1264,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["wrapper",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["xito",{"_index":648,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["y",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["yes",{"_index":1708,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["z",{"_index":754,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["z0",{"_index":664,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["zonas",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente raíz de la aplicación ConectaDuoc.\nGestiona la visibilidad del navbar y footer según la configuración de cada ruta.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarFooter\n                            \n                            \n                                mostrarNavbar\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            Escucha los cambios de navegación para actualizar la visibilidad\ndel navbar y footer según los data de la ruta activa.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChild(route: ActivatedRoute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Obtiene la ruta hija más profunda desde el árbol de rutas activas.\nEsto es necesario para acceder correctamente a los data de la ruta actual.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta activa principal.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ActivatedRoute\n\n                        \n                            \n                                Ruta hija más profunda.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Define si se debe mostrar el footer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarNavbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Define si se debe mostrar el navbar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Conecta-DUOC'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Título principal de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { inject, Component } from '@angular/core';\nimport { ActivatedRoute, Data, NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { filter } from 'rxjs';\n\n/**\n * Componente raíz de la aplicación ConectaDuoc.\n * Gestiona la visibilidad del navbar y footer según la configuración de cada ruta.\n */\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n\n  /** Título principal de la aplicación */\n  title = 'Conecta-DUOC';\n\n  /** Define si se debe mostrar el navbar */\n  mostrarNavbar = true;\n\n  /** Define si se debe mostrar el footer */\n  mostrarFooter = true;\n\n  /**\n   * Escucha los cambios de navegación para actualizar la visibilidad\n   * del navbar y footer según los `data` de la ruta activa.\n   */\n  constructor() {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(() => {\n        const currentRoute = this.getChild(this.route);\n        const data: Data = currentRoute.snapshot.data;\n\n        this.mostrarNavbar = data['showNavbar'] !== false;\n        this.mostrarFooter = data['showFooter'] !== false;\n      });\n  }\n\n  /**\n   * Obtiene la ruta hija más profunda desde el árbol de rutas activas.\n   * Esto es necesario para acceder correctamente a los `data` de la ruta actual.\n   * @param route Ruta activa principal.\n   * @returns Ruta hija más profunda.\n   */\n  private getChild(route: ActivatedRoute): ActivatedRoute {\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n\n}\n\n    \n\n    \n        @if (mostrarNavbar) {\n  \n}\n\n\n  \n\n\n@if (mostrarFooter) {\n  \n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mostrarNavbar) {  }  @if (mostrarFooter) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard para proteger rutas mediante la autenticación de MSAL (Microsoft Authentication Library).\nSe asegura de que el usuario tenga una sesión activa con Azure AD antes de permitir el acceso.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:27\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene una sesión activa para permitir el acceso a la ruta protegida.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario está autenticado, de lo contrario redirige al inicio (/) y retorna false.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { inject, Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { MsalService } from '@azure/msal-angular';\n\n/**\n * Guard para proteger rutas mediante la autenticación de MSAL (Microsoft Authentication Library).\n * Se asegura de que el usuario tenga una sesión activa con Azure AD antes de permitir el acceso.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * Servicio de autenticación MSAL para validar sesión activa.\n   */\n  private msalService = inject(MsalService);\n\n  /**\n   * Servicio de enrutamiento para redirigir si no está autenticado.\n   */\n  private router = inject(Router);\n\n  /**\n   * Verifica si el usuario tiene una sesión activa para permitir el acceso a la ruta protegida.\n   * @returns `true` si el usuario está autenticado, de lo contrario redirige al inicio (`/`) y retorna `false`.\n   */\n  canActivate(): boolean {\n    const account = this.msalService.instance.getActiveAccount();\n\n    if (account) {\n      // Usuario autenticado\n      return true;\n    } else {\n      // Usuario no autenticado, redirigir al login\n      console.warn('No se encontró una cuenta activa, redirigiendo al inicio de sesión.');\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n// Este guard se utiliza para proteger rutas que requieren autenticación.\n// Si el usuario no está autenticado, se le redirige a la página de inicio de sesión.\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/breadcrumb/breadcrumb.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de generar la ruta de navegación (breadcrumb)\ndinámicamente según la URL actual. Mejora la usabilidad al mostrar al usuario\nsu posición dentro de la app y permite volver a rutas anteriores.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                toReadable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/breadcrumb/breadcrumb.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Al inicializar el componente, construye los ítems del breadcrumb en base a la URL activa.\nSe ignoran rutas como dashboard o categoria para evitar redundancia visual.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toReadable\n                        \n                    \n                \n            \n            \n                \n                        \n                    toReadable(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/breadcrumb/breadcrumb.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Convierte un segmento de la URL en un texto legible para mostrar en el breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fragmento de la URL.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Texto más amigable y traducido si aplica.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:25\n                        \n                    \n\n            \n                \n                    Arreglo de ítems que componen el breadcrumb. Cada ítem tiene un label visible\ny un path (opcional) para navegar hacia esa sección.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\n\n\n/**\n * Componente encargado de generar la ruta de navegación (breadcrumb)\n * dinámicamente según la URL actual. Mejora la usabilidad al mostrar al usuario\n * su posición dentro de la app y permite volver a rutas anteriores.\n */\n@Component({\n  selector: 'app-breadcrumb',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n\n  /**\n   * Arreglo de ítems que componen el breadcrumb. Cada ítem tiene un `label` visible\n   * y un `path` (opcional) para navegar hacia esa sección.\n   */\n  items: { label: string; path?: string }[] = [];\n\n  /**\n   * Al inicializar el componente, construye los ítems del breadcrumb en base a la URL activa.\n   * Se ignoran rutas como `dashboard` o `categoria` para evitar redundancia visual.\n   */\n  ngOnInit(): void {\n    const fullPath = this.router.url.split('?')[0];\n    const segments = fullPath.split('/').filter(Boolean);\n\n    let cumulativePath = '';\n    this.items = [];\n\n    segments.forEach((seg, index) => {\n      cumulativePath += `/${seg}`;\n\n      // Evitar mostrar rutas irrelevantes\n      if (seg === 'dashboard' || seg === 'categoria') {\n        return;\n      }\n\n      const isLast = index === segments.length - 1;\n      this.items.push({\n        label: this.toReadable(seg),\n        path: isLast ? undefined : cumulativePath\n      });\n    });\n\n    // Agregar manualmente 'Inicio' al comienzo\n    this.items.unshift({ label: 'Inicio', path: '/dashboard' });\n  }\n\n  /**\n   * Convierte un segmento de la URL en un texto legible para mostrar en el breadcrumb.\n   * @param slug Fragmento de la URL.\n   * @returns Texto más amigable y traducido si aplica.\n   */\n  private toReadable(slug: string): string {\n    const mapa: Record = {\n      ayudantias: 'Ayudantías',\n      deportes: 'Deportes',\n      culturales: 'Culturales y Recreativas',\n      voluntariado: 'Voluntariado',\n      trueques: 'Trueques',\n      dashboard: 'Inicio'\n    };\n\n    return mapa[slug] || slug.charAt(0).toUpperCase() + slug.slice(1);\n  }\n\n}\n\n    \n\n    \n        \n  \n    @for (item of items; track item; let last = $last) {\n      \n        @if (!last && item.path) {\n          {{ item.label }}\n        }\n        @if (last || !item.path) {\n          {{ item.label }}\n        }\n      \n    }\n  \n\n    \n\n    \n                \n                    ./breadcrumb.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.breadcrumb-container {\n    background-color: transparent;\n    padding: 0;\n\n    .breadcrumb {\n        background-color: transparent;\n        font-size: 0.95rem;\n    }\n\n    .breadcrumb-item {\n        a {\n            color: $amarillo;\n            text-decoration: none;\n\n            &:hover {\n                text-decoration: underline;\n            }\n        }\n\n        &.active {\n            color: $gris;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (item of items; track item; let last = $last) {              @if (!last && item.path) {          {{ item.label }}        }        @if (last || !item.path) {          {{ item.label }}        }          }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriasAdminComponent.html":{"url":"components/CategoriasAdminComponent.html","title":"component - CategoriasAdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriasAdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/categorias-admin/categorias-admin.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-categorias\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                                BreadcrumbComponent\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./categorias-admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categorias-admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriaForm\n                            \n                            \n                                categorias\n                            \n                            \n                                    Private\n                                categoryService\n                            \n                            \n                                editing\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroCategoria\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelar\n                            \n                            \n                                cargar\n                            \n                            \n                                editar\n                            \n                            \n                                eliminar\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoriasFiltradas\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelar\n                        \n                    \n                \n            \n            \n                \ncancelar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargar\n                        \n                    \n                \n            \n            \n                \ncargar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(cat: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(cat: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroCategoria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoriasFiltradas\n                    \n                \n\n                \n                    \n                        getcategoriasFiltradas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PostCategoryService } from '../../../core/services/post-category.service';\nimport { PostCategory } from '../../../models/postCategory';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-config-categorias',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, BreadcrumbComponent, FormsModule],\n  templateUrl: './categorias-admin.component.html',\n  styleUrls: ['./categorias-admin.component.scss']\n})\nexport class CategoriasAdminComponent implements OnInit {\n  private fb = inject(FormBuilder);\n  private categoryService = inject(PostCategoryService);\n\n  categorias: PostCategory[] = [];\n  categoriaForm!: FormGroup;\n  editing: PostCategory | null = null;\n  filtroCategoria: string = '';\n\n  ngOnInit(): void {\n    this.categoriaForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      status: [1, Validators.required]\n    });\n\n    this.cargar();\n  }\n\n  get categoriasFiltradas(): PostCategory[] {\n    if (!this.filtroCategoria.trim()) return this.categorias;\n    const filtro = this.filtroCategoria.toLowerCase();\n    return this.categorias.filter(c => c.name.toLowerCase().includes(filtro));\n  }\n\n\n  cargar(): void {\n    this.categoryService.getAll().subscribe(c => (this.categorias = c));\n  }\n\n  editar(cat: PostCategory): void {\n    this.editing = { ...cat };\n    this.categoriaForm.patchValue(this.editing);\n  }\n\n  cancelar(): void {\n    this.editing = null;\n    this.categoriaForm.reset({ status: 1 });\n  }\n\n  guardar(): void {\n    if (this.categoriaForm.invalid) return;\n    const datos = this.categoriaForm.value as PostCategory;\n    if (this.editing) {\n      this.categoryService.update(this.editing.idCategory, datos).subscribe(() => {\n        this.cargar();\n        this.cancelar();\n      });\n    } else {\n      this.categoryService.create(datos).subscribe(() => {\n        this.cargar();\n        this.categoriaForm.reset({ status: 1 });\n      });\n    }\n  }\n\n  eliminar(cat: PostCategory): void {\n    if (!confirm('¿Eliminar categoría?')) return;\n    this.categoryService.delete(cat.idCategory).subscribe(() => this.cargar());\n  }\n}\n    \n\n    \n        \n    \n    Categorías\n    Administra las categorías de la plataforma\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Activa\n                    Inactiva\n                \n            \n            \n                {{ editing ? 'Actualizar' : 'Agregar' }}\n                Cancelar\n            \n        \n    \n\n    \n    \n        \n    \n\n    \n        \n            \n                \n                    Nombre\n                    Descripción\n                    Estado\n                    \n                \n            \n            \n                \n                    {{ c.name }}\n                    {{ c.description }}\n                    {{ c.status ? 'Activa' : 'Inactiva' }}\n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./categorias-admin.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Categorías    Administra las categorías de la plataforma                                                                                                                                            Activa                    Inactiva                                                        {{ editing ? \\'Actualizar\\' : \\'Agregar\\' }}                Cancelar                                                                                                        Nombre                    Descripción                    Estado                                                                                                {{ c.name }}                    {{ c.description }}                    {{ c.status ? \\'Activa\\' : \\'Inactiva\\' }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriasAdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriasComponent.html":{"url":"components/CategoriasComponent.html","title":"component - CategoriasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categorias/categorias.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que gestiona la visualización, creación, filtrado, reporte y puntuación\nde publicaciones dentro de una categoría específica en ConectaDuoc.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categorias\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                BreadcrumbComponent\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                            CommonModule\n                                NotificacionBannerComponent\n                \n            \n\n            \n                styleUrls\n                ./categorias.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categorias.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriaId\n                            \n                            \n                                categoriaNombre\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroBusqueda\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                misScores\n                            \n                            \n                                mostrarFormulario\n                            \n                            \n                                nombreCategoriaMostrada\n                            \n                            \n                                nombresUsuarios\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                promedioScores\n                            \n                            \n                                publicaciones\n                            \n                            \n                                    Private\n                                reportService\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                slug\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calificar\n                            \n                            \n                                cargarPublicaciones\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                nuevaPublicacion\n                            \n                            \n                                reportarPublicacion\n                            \n                            \n                                    Private\n                                slugify\n                            \n                            \n                                toggleFormulario\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publicacionesFiltradas\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calificar\n                        \n                    \n                \n            \n            \n                \ncalificar(pub: Post, valor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pub\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPublicaciones\n                        \n                    \n                \n            \n            \n                \ncargarPublicaciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Carga todas las publicaciones de la categoría actual, junto con los nombres de usuarios\ny las puntuaciones (promedio y personales).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Inicializa la vista de categoría, cargando la categoría correspondiente y sus publicaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevaPublicacion\n                        \n                    \n                \n            \n            \n                \nnuevaPublicacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:163\n                        \n                    \n\n\n            \n                \n                        Envía una nueva publicación al backend si el formulario es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarPublicacion\n                        \n                    \n                \n            \n            \n                \nreportarPublicacion(pub: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Reporta una publicación por contenido inapropiado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pub\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Publicación a reportar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        slugify\n                        \n                    \n                \n            \n            \n                \n                        \n                    slugify(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFormulario\n                        \n                    \n                \n            \n            \n                \ntoggleFormulario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Muestra u oculta el formulario para crear una nueva publicación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:46\n                        \n                    \n\n            \n                \n                    ID de la categoría actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:49\n                        \n                    \n\n            \n                \n                    Nombre legible de la categoría actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroBusqueda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:67\n                        \n                    \n\n            \n                \n                    Texto de búsqueda para filtrar publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:70\n                        \n                    \n\n            \n                \n                    Formulario para nueva publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:76\n                        \n                    \n\n            \n                \n                    Estado de carga\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        misScores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:64\n                        \n                    \n\n            \n                \n                    Diccionario con puntuación personal del usuario en cada publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarFormulario\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:73\n                        \n                    \n\n            \n                \n                    Controla visibilidad del formulario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreCategoriaMostrada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombresUsuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:58\n                        \n                    \n\n            \n                \n                    Diccionario con nombres de usuarios indexados por ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedioScores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:61\n                        \n                    \n\n            \n                \n                    Diccionario con promedios de puntuación por publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:55\n                        \n                    \n\n            \n                \n                    Publicaciones cargadas desde el backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:43\n                        \n                    \n\n            \n                \n                    Slug obtenido desde la URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publicacionesFiltradas\n                    \n                \n\n                \n                    \n                        getpublicacionesFiltradas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/categorias/categorias.component.ts:142\n                                \n                            \n                    \n                        \n                                Devuelve las publicaciones filtradas por el texto ingresado.\n\n\n                                \n                                    Returns :         Post[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/* BREADCRUMB y BANNER*/\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\nimport { NotificacionBannerComponent } from '../notificacion-banner/notificacion-banner.component';\n\n/* MODELS */\nimport { Post } from '../../models/post';\n\n/* SERVICES */\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { PostService } from '../../core/services/post.service';\nimport { UserService } from '../../core/services/user.service';\nimport { ReportService } from '../../core/services/report.service';\nimport { ScoreService } from '../../core/services/score.service';\n\n/**\n * Componente que gestiona la visualización, creación, filtrado, reporte y puntuación\n * de publicaciones dentro de una categoría específica en ConectaDuoc.\n */\n@Component({\n  selector: 'app-categorias',\n  standalone: true,\n  imports: [BreadcrumbComponent, FormsModule, ReactiveFormsModule, RouterModule, CommonModule, NotificacionBannerComponent],\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.scss']\n})\nexport class CategoriasComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private fb = inject(FormBuilder);\n  private postCategoryService = inject(PostCategoryService);\n  private postService = inject(PostService);\n  private userService = inject(UserService);\n  private reportService = inject(ReportService);\n  private scoreService = inject(ScoreService);\n\n  /** Slug obtenido desde la URL */\n  slug = '';\n\n  /** ID de la categoría actual */\n  categoriaId: number | null = null;\n\n  /** Nombre legible de la categoría actual */\n  categoriaNombre = '';\n\n  /* Nombre de la categoría a mostrar */\n  nombreCategoriaMostrada = '';\n\n  /** Publicaciones cargadas desde el backend */\n  publicaciones: Post[] = [];\n\n  /** Diccionario con nombres de usuarios indexados por ID */\n  nombresUsuarios: Record = {};\n\n  /** Diccionario con promedios de puntuación por publicación */\n  promedioScores: Record = {};\n\n  /** Diccionario con puntuación personal del usuario en cada publicación */\n  misScores: Record = {};\n\n  /** Texto de búsqueda para filtrar publicaciones */\n  filtroBusqueda = '';\n\n  /** Formulario para nueva publicación */\n  form!: FormGroup;\n\n  /** Controla visibilidad del formulario */\n  mostrarFormulario = false;\n\n  /** Estado de carga */\n  loading = true;\n\n  /**\n   * Inicializa la vista de categoría, cargando la categoría correspondiente y sus publicaciones.\n   */\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      content: ['', Validators.required]\n    });\n\n    this.slug = this.route.snapshot.paramMap.get('slug') || '';\n    console.log('Slug cargado:', this.slug);\n\n    this.postCategoryService.getAll().subscribe(categories => {\n      const categoria = categories.find(cat =>\n        this.slugify(cat.name) === this.slug\n      );\n\n      if (!categoria) {\n        this.router.navigate(['/dashboard']);\n        return;\n      }\n\n      this.categoriaId = categoria.idCategory;\n      this.categoriaNombre = categoria.name;\n      this.nombreCategoriaMostrada = categoria.name;\n\n      this.cargarPublicaciones();\n    });\n  }\n\n  /**\n   * Carga todas las publicaciones de la categoría actual, junto con los nombres de usuarios\n   * y las puntuaciones (promedio y personales).\n   */\n  cargarPublicaciones(): void {\n    if (!this.categoriaId) return;\n\n    this.loading = true;\n    this.postService.getAll(this.categoriaId).subscribe(posts => {\n      this.publicaciones = posts;\n      this.loading = false;\n\n      const ids = [...new Set(posts.map(p => p.idUser))];\n      ids.forEach(id => {\n        this.userService.getUserById(id).subscribe(user => {\n          this.nombresUsuarios[id] = user.name;\n        });\n      });\n\n      const idUser = this.userService.getIdUser();\n      if (idUser) {\n        this.scoreService.getResumenScores(idUser, this.categoriaId ?? undefined).subscribe(resumenes => {\n          resumenes.forEach(r => {\n            this.promedioScores[r.idPost] = r.promedio;\n            this.misScores[r.idPost] = r.miScore;\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Devuelve las publicaciones filtradas por el texto ingresado.\n   */\n  get publicacionesFiltradas(): Post[] {\n    if (!this.filtroBusqueda.trim()) return this.publicaciones;\n    const texto = this.filtroBusqueda.trim().toLowerCase();\n    return this.publicaciones.filter(pub =>\n      pub.title.toLowerCase().includes(texto) ||\n      pub.content.toLowerCase().includes(texto)\n    );\n  }\n\n  /**\n   * Muestra u oculta el formulario para crear una nueva publicación.\n   */\n  toggleFormulario(): void {\n    this.mostrarFormulario = !this.mostrarFormulario;\n    if (!this.mostrarFormulario) this.form.reset();\n  }\n\n\n  /**\n   * Envía una nueva publicación al backend si el formulario es válido.\n   */\n  nuevaPublicacion(): void {\n    if (this.form.invalid || !this.categoriaId) return;\n\n    const idUser = this.userService.getIdUser();\n    if (!idUser) {\n      alert('No se pudo obtener el ID del usuario.');\n      return;\n    }\n\n    const nueva = {\n      title: this.form.value.title,\n      content: this.form.value.content,\n      idCategory: this.categoriaId,\n      idUser: idUser,\n      createdDate: new Date().toISOString()\n    };\n\n    this.postService.createPost(nueva).subscribe({\n      next: () => {\n        this.cargarPublicaciones();\n        this.form.reset();\n        this.mostrarFormulario = false;\n        alert('¡Publicación creada con éxito!');\n      },\n      error: err => {\n        console.error('Error al crear publicación:', err);\n        alert('Error al publicar');\n      }\n    });\n  }\n\n  /**\n   * Reporta una publicación por contenido inapropiado.\n   * @param pub Publicación a reportar.\n   */\n  reportarPublicacion(pub: Post): void {\n    const reason = prompt('Motivo del reporte', 'Contenido inapropiado');\n    if (!reason) return;\n    this.reportService.reportPost(pub.idPost, reason).subscribe(() => {\n      alert('Publicación reportada');\n    });\n  }\n\n  private slugify(text: string): string {\n    return text\n      .toLowerCase()\n      .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  }\n\n  calificar(pub: Post, valor: number): void {\n    const idUser = this.userService.getIdUser();\n    if (!idUser) return;\n\n    this.scoreService.setScore({ idPost: pub.idPost, idUser, score: valor }).subscribe(() => {\n      this.misScores[pub.idPost] = valor;\n      this.scoreService.getAverageScore(pub.idPost).subscribe(avg => {\n        this.promedioScores[pub.idPost] = avg;\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        {{ nombreCategoriaMostrada }}\n        \n            \n            {{ mostrarFormulario ? 'Cancelar' : 'Publicar' }}\n        \n    \n    \n        Aquí puedes compartir tus dudas, preguntas o temas relacionados con {{ nombreCategoriaMostrada\n        }}. ¡Sé parte de la comunidad!\n    \n    \n        Recuerda: Sé respetuoso y sigue las normas de la comunidad. Las publicaciones inapropiadas\n        pueden ser eliminadas.\n    \n\n    @if (!publicaciones.length) {\n    \n        Aún no hay publicaciones en esta categoría. Sé el primero en compartir una 💡\n    \n    }\n\n    @if (mostrarFormulario) {\n    \n        \n            Título\n            \n        \n        \n            Descripción\n            \n        \n        \n            Publicar\n        \n    \n    }\n\n    @if (publicaciones.length) {\n    \n        \n    \n\n    \n        \n\n            \n                \n\n                \n                    {{ pub.title }}\n                    \n                        por {{ nombresUsuarios[pub.idUser] || 'Cargando...' }} • {{ pub.createdDate | date:'dd/MM/yyyy'\n                        }}\n                    \n                    \n                        {{ pub.content }}\n                    \n                    \n                    \n\n                        \n                        \n                            = s,\n                            'far text-muted': (misScores[pub.idPost] ?? 0) \n                        \n\n                        \n                        \n                            {{ promedioScores[pub.idPost] | number:'1.1-1' }} / 5\n                        \n\n                        \n                        \n                            \n                        \n                    \n\n\n                \n            \n\n        \n    \n\n    }\n\n    \n\n    \n                \n                    ./categorias.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n/* CONTENEDOR GENERAL */\n.foro-categoria-container {\n    //background-color: $gris;\n    border-radius: 1rem;\n    padding: 2rem;\n\n    .cabecera-categoria {\n        background-color: white;\n        padding: 1.5rem;\n        border-radius: 1rem;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n        margin-bottom: 2rem;\n    }\n\n    .titulo-categoria {\n        font-size: 2.25rem;\n        font-weight: 700;\n        color: $negro;\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 80px;\n            height: 3px;\n            background-color: $amarillo;\n            border-radius: 4px;\n        }\n    }\n}\n\n/* Formulario de publicación */\nform {\n    background-color: $blanco;\n    padding: 2rem;\n    border-radius: 1rem;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.06);\n\n    label {\n        font-weight: 600;\n    }\n\n    input,\n    textarea {\n        border-radius: 0.75rem;\n        padding: 0.75rem 1rem;\n        border: 1px solid #ced4da;\n    }\n\n    button {\n        margin-top: 1rem;\n        border-radius: 0.75rem;\n        font-size: 1rem;\n    }\n}\n\n/* Tabla de publicaciones */\n.card {\n    transition: transform 0.2s ease;\n    position: relative;\n\n    &:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n    }\n\n    .stretched-link {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n\n    .btn,\n    .badge,\n    .card-body * {\n        position: relative;\n        z-index: 3;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ nombreCategoriaMostrada }}                                {{ mostrarFormulario ? \\'Cancelar\\' : \\'Publicar\\' }}                        Aquí puedes compartir tus dudas, preguntas o temas relacionados con {{ nombreCategoriaMostrada        }}. ¡Sé parte de la comunidad!                Recuerda: Sé respetuoso y sigue las normas de la comunidad. Las publicaciones inapropiadas        pueden ser eliminadas.        @if (!publicaciones.length) {            Aún no hay publicaciones en esta categoría. Sé el primero en compartir una 💡        }    @if (mostrarFormulario) {                        Título                                        Descripción                                        Publicar                }    @if (publicaciones.length) {                                                                                            {{ pub.title }}                                            por {{ nombresUsuarios[pub.idUser] || \\'Cargando...\\' }} • {{ pub.createdDate | date:\\'dd/MM/yyyy\\'                        }}                                                                {{ pub.content }}                                                                                                                                        = s,                            \\'far text-muted\\': (misScores[pub.idPost] ?? 0)                                                                                                     {{ promedioScores[pub.idPost] | number:\\'1.1-1\\' }} / 5                                                                                                                                                                                            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un comentario realizado por un usuario en una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            idComment\n                                        \n                                \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido del comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha en que se realizó el comentario (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idComment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación a la que pertenece el comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que escribió el comentario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/comment.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar los comentarios en las publicaciones de ConectaDuoc.\nPermite obtener, crear, editar y eliminar comentarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getByPostId\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(comment: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo comentario en una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                comment\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Comment sin idComment ni date, que serán generados por el backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Comentario creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(idComment: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Elimina un comentario por su ID.\n(Requiere permisos adecuados).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByPostId\n                        \n                    \n                \n            \n            \n                \ngetByPostId(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los comentarios asociados a una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de comentarios.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idComment: number, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Actualiza el contenido de un comentario existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario.\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo contenido del comentario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Comentario actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/comment'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/comment.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para comentarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/comment.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Comment } from '../../models/post';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar los comentarios en las publicaciones de ConectaDuoc.\n * Permite obtener, crear, editar y eliminar comentarios.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n  /** URL base del API para comentarios */\n  private apiUrl = 'http://localhost:9090/api/comment';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todos los comentarios asociados a una publicación.\n   * @param idPost ID de la publicación.\n   * @returns Lista de comentarios.\n   */\n  getByPostId(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}?idPost=${idPost}`);\n  }\n\n  /**\n   * Crea un nuevo comentario en una publicación.\n   * @param comment Objeto `Comment` sin `idComment` ni `date`, que serán generados por el backend.\n   * @returns Comentario creado.\n   */\n  create(comment: Omit): Observable {\n    return this.http.post(this.apiUrl, comment);\n  }\n\n  /**\n   * Elimina un comentario por su ID.\n   * (Requiere permisos adecuados).\n   * @param idComment ID del comentario a eliminar.\n   */\n  delete(idComment: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${idComment}`);\n  }\n\n  /**\n   * Actualiza el contenido de un comentario existente.\n   * @param idComment ID del comentario.\n   * @param content Nuevo contenido del comentario.\n   * @returns Comentario actualizado.\n   */\n  update(idComment: number, content: string): Observable {\n    return this.http.put(`${this.apiUrl}/${idComment}`, { content });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfiguracionComponent.html":{"url":"components/ConfiguracionComponent.html","title":"component - ConfiguracionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfiguracionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/configuracion.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuracion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                                BreadcrumbComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./configuracion.component.html\n            \n\n\n\n            \n                styleUrl\n                ./configuracion.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-configuracion',\n  standalone: true,\n  imports: [CommonModule, RouterModule, BreadcrumbComponent],\n  templateUrl: './configuracion.component.html',\n  styleUrl: './configuracion.component.scss'\n})\nexport class ConfiguracionComponent {\n\n}\n\n    \n\n    \n        \n    \n    Panel de Configuración\n    Administra los aspectos generales de la plataforma\n\n    \n        \n            \n                \n                    \n                        \n                    \n                    Usuarios\n                    Administrar usuarios de la plataforma\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    Categorías\n                    Gestionar categorías de publicaciones\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    Notificaciones\n                    Enviar mensajes a todos los usuarios\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Panel de Configuración    Administra los aspectos generales de la plataforma                                                                                                                            Usuarios                    Administrar usuarios de la plataforma                                                                                                                                                            Categorías                    Gestionar categorías de publicaciones                                                                                                                                                            Notificaciones                    Enviar mensajes a todos los usuarios                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfiguracionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal del dashboard del usuario.\nMuestra las categorías activas como accesos rápidos según el rol,\ny carga el banner de notificaciones globales.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                                NotificacionBannerComponent\n                \n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                iconMap\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                slugify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Al iniciar el componente:\n\nObtiene nombre y rol del usuario.\nCarga las categorías visibles (filtrando las no activas y las solo-admin).\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        slugify\n                        \n                    \n                \n            \n            \n                \n                        \n                    slugify(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Convierte un texto a formato slug, eliminando tildes y espacios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Texto a transformar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Slug limpio en minúsculas.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:34\n                        \n                    \n\n            \n                \n                    Categorías visibles en el dashboard, con icono, ruta y visibilidad según rol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iconMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    'ayudantias-academicas': 'fas fa-book-open',\n    'actividades-deportivas': 'fas fa-futbol',\n    'culturales-y-recreativas': 'fas fa-theater-masks',\n    'voluntariado-ecoduoc': 'fas fa-leaf',\n    'trueques-estudiantiles': 'fas fa-exchange-alt',\n    'panel-de-configuracion': 'fas fa-cog',\n    'reportes': 'fas fa-chart-bar'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Mapa de slugs a íconos FontAwesome\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:29\n                        \n                    \n\n            \n                \n                    Rol del usuario (admin, student, etc.)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:26\n                        \n                    \n\n            \n                \n                    Nombre del usuario autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../core/services/user.service';\nimport { RouterModule } from '@angular/router';\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { PostCategory } from '../../models/postCategory';\nimport { NotificacionBannerComponent } from '../notificacion-banner/notificacion-banner.component';\n\n/**\n * Componente principal del dashboard del usuario.\n * Muestra las categorías activas como accesos rápidos según el rol,\n * y carga el banner de notificaciones globales.\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterModule, NotificacionBannerComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  private userService = inject(UserService);\n  private postCategoryService = inject(PostCategoryService);\n\n  /** Nombre del usuario autenticado */\n  username: string | null = null;\n\n  /** Rol del usuario (`admin`, `student`, etc.) */\n  role: string | null = null;\n\n  /**\n   * Categorías visibles en el dashboard, con icono, ruta y visibilidad según rol.\n   */\n  categories: (PostCategory & { icono: string; ruta: string, adminOnly?: boolean; })[] = [];\n\n  /** Mapa de slugs a íconos FontAwesome */\n  private iconMap: Record = {\n    'ayudantias-academicas': 'fas fa-book-open',\n    'actividades-deportivas': 'fas fa-futbol',\n    'culturales-y-recreativas': 'fas fa-theater-masks',\n    'voluntariado-ecoduoc': 'fas fa-leaf',\n    'trueques-estudiantiles': 'fas fa-exchange-alt',\n    'panel-de-configuracion': 'fas fa-cog',\n    'reportes': 'fas fa-chart-bar'\n  };\n\n  /**\n   * Al iniciar el componente:\n   * - Obtiene nombre y rol del usuario.\n   * - Carga las categorías visibles (filtrando las no activas y las solo-admin).\n   */\n  ngOnInit(): void {\n    this.username = this.userService.getName() || this.userService.getAzureUser()?.fullName || this.userService.getAzureUser()?.email || 'Desconocido';\n    this.role = this.userService.getRole();\n\n    this.postCategoryService.getAll().subscribe(categories => {\n      this.categories = categories\n        .filter(cat => {\n          if (!cat.status) return false;\n\n          const slug = this.slugify(cat.name);\n          if (slug === 'reportes' || slug === 'panel-de-configuracion') {\n            return this.role === 'admin';\n          }\n\n          return true;\n        })\n        .map(cat => {\n          const slug = this.slugify(cat.name);\n          const ruta = slug === 'reportes' || slug === 'panel-de-configuracion'\n            ? `/dashboard/${slug}`\n            : `/categoria/${slug}`;\n\n          return {\n            ...cat,\n            ruta,\n            icono: this.iconMap[slug] || 'fas fa-asterisk',\n            adminOnly: slug === 'reportes' || slug === 'panel-de-configuracion'\n          };\n        });\n    });\n  }\n\n  /**\n   * Convierte un texto a formato `slug`, eliminando tildes y espacios.\n   * @param text Texto a transformar.\n   * @returns Slug limpio en minúsculas.\n   */\n  private slugify(text: string): string {\n    return text\n      .toLowerCase()\n      .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Participa en la comunidad DUOC\n  \n  \n    Explora las categorías disponibles y únete a la conversación.\n    ¡Tu participación es clave para construir una\n    comunidad vibrante!\n  \n    @for (cat of categories; track cat) {\n    \n      @if (!cat.adminOnly || role === 'admin') {\n      \n        \n          \n            \n          \n          {{ cat.name }}\n          {{ cat.description }}\n        \n      \n      }\n    \n    }\n  \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.categoria-card {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    border: 1px solid color.adjust($gris, $lightness: 25%);\n    background-color: $blanco;\n    color: $negro;\n\n    &:hover {\n        transform: scale(1.03);\n        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n        border-color: $amarillo;\n    }\n\n    .card-body {\n        padding: 2rem 1rem;\n    }\n\n    i {\n        color: $amarillo;\n    }\n\n    .card-title {\n        color: $negro;\n    }\n\n    .card-text {\n        color: $gris;\n    }\n}\n\n.titulo-modern {\n    font-family: 'Poppins', sans-serif;\n    font-size: 2.5rem;\n    font-weight: 700;\n    color: $negro;\n    text-transform: uppercase;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    margin-bottom: 2rem;\n    animation: fadeInUp 0.6s ease-out;\n\n    @keyframes fadeInUp {\n        from {\n            opacity: 0;\n            transform: translateY(20px);\n        }\n\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    .highlight {\n        color: $amarillo;\n    }\n\n    strong {\n        color: $azul;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Participa en la comunidad DUOC        Explora las categorías disponibles y únete a la conversación.    ¡Tu participación es clave para construir una    comunidad vibrante!      @for (cat of categories; track cat) {          @if (!cat.adminOnly || role === \\'admin\\') {                                                        {{ cat.name }}          {{ cat.description }}                    }        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetalleComponent.html":{"url":"components/DetalleComponent.html","title":"component - DetalleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetalleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categorias/detalle/detalle.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detalle\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                                BreadcrumbComponent\n                                NotificacionBannerComponent\n                \n            \n\n            \n                styleUrls\n                ./detalle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detalle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comentarioForm\n                            \n                            \n                                comments\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                estrellas\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                miScore\n                            \n                            \n                                nombreAutor\n                            \n                            \n                                post\n                            \n                            \n                                postingComment\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                promedio\n                            \n                            \n                                    Private\n                                reportService\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calificar\n                            \n                            \n                                comentar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reportarComentario\n                            \n                            \n                                reportarPublicacion\n                            \n                            \n                                volver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calificar\n                        \n                    \n                \n            \n            \n                \ncalificar(valor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comentar\n                        \n                    \n                \n            \n            \n                \ncomentar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarComentario\n                        \n                    \n                \n            \n            \n                \nreportarComentario(com: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                com\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarPublicacion\n                        \n                    \n                \n            \n            \n                \nreportarPublicacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volver\n                        \n                    \n                \n            \n            \n                \nvolver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comentarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estrellas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [1, 2, 3, 4, 5]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        miScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreAutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Autor desconocido'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n/* MODELS */\nimport { Post, Comment } from '../../../models/post';\n\n/* SERVICES */\nimport { PostService } from '../../../core/services/post.service';\nimport { UserService } from '../../../core/services/user.service';\nimport { ScoreService } from '../../../core/services/score.service';\nimport { ReportService } from '../../../core/services/report.service';\nimport { CommentService } from '../../../core/services/comment.service';\n\n/* BreadCrumb y BANNER */\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\nimport { NotificacionBannerComponent } from '../../notificacion-banner/notificacion-banner.component';\n\n@Component({\n  selector: 'app-detalle',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, BreadcrumbComponent, NotificacionBannerComponent],\n  templateUrl: './detalle.component.html',\n  styleUrls: ['./detalle.component.scss']\n})\nexport class DetalleComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private postService = inject(PostService);\n  private commentService = inject(CommentService);\n  private userService = inject(UserService);\n  private reportService = inject(ReportService);\n  private scoreService = inject(ScoreService);\n  private fb = inject(FormBuilder);\n\n  post: Post | undefined;\n  comments: Comment[] = [];\n  comentarioForm!: FormGroup;\n  loading = true;\n  postingComment = false;\n  promedio = 0;\n  miScore: number | null = null;\n  estrellas = [1, 2, 3, 4, 5];\n  nombreAutor: string = 'Autor desconocido';\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (!id) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.comentarioForm = this.fb.group({\n      content: ['', [Validators.required, Validators.maxLength(300)]]\n    });\n\n    this.postService.sumarVisualizacion(id).subscribe();\n\n    this.postService.getById(id).subscribe({\n      next: (post) => {\n        this.post = post;\n        document.title = `ConectaDuoc | ${post.title}`;\n\n        this.scoreService.getAverageScore(post.idPost).subscribe(avg => {\n          this.promedio = avg;\n        });\n        const idUser = this.userService.getIdUser();\n        if (idUser) {\n          this.scoreService.getUserScore(post.idPost, idUser).subscribe(score => {\n            this.miScore = score ? score.score : null;\n          });\n        }\n\n        this.userService.getUserById(post.idUser).subscribe({\n          next: (user) => {\n            this.nombreAutor = user.name;\n          },\n          error: () => {\n            this.nombreAutor = 'Autor desconocido';\n          }\n        });\n\n        this.commentService.getByPostId(post.idPost).subscribe(comments => {\n          this.comments = comments;\n          this.loading = false;\n        });\n      },\n      error: () => {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n\n  }\n\n  comentar(): void {\n    if (!this.post || this.comentarioForm.invalid || this.postingComment) return;\n\n    const nuevoComentario: Omit = {\n      idPost: this.post.idPost,\n      idUser: this.userService.getAzureUser()?.email || 'anónimo',\n      content: this.comentarioForm.value.content\n    };\n\n    this.postingComment = true;\n    this.commentService.create(nuevoComentario).subscribe({\n      next: (comentario) => {\n        this.comments.push(comentario);\n        this.comentarioForm.reset();\n        this.postingComment = false;\n      },\n      error: () => {\n        this.postingComment = false;\n      }\n    });\n  }\n\n  reportarPublicacion(): void {\n    if (!this.post) return;\n    const reason = prompt('Motivo del reporte', 'Contenido inapropiado');\n    if (!reason) return;\n    this.reportService.reportPost(this.post.idPost, reason).subscribe(() => {\n      alert('Publicación reportada');\n    });\n  }\n\n  reportarComentario(com: Comment): void {\n    const reason = prompt('Motivo del reporte', 'Comentario inapropiado');\n    if (!reason) return;\n    this.reportService.reportComment(com.idComment, reason).subscribe(() => {\n      alert('Comentario reportado');\n    });\n  }\n\n  volver(): void {\n    const slug = this.route.snapshot.paramMap.get('slug') || 'dashboard';\n    this.router.navigate(['/categoria', slug]);\n  }\n\n  calificar(valor: number): void {\n    if (!this.post) return;\n    const idUser = this.userService.getIdUser();\n    if (!idUser) return;\n\n    this.scoreService.setScore({ idPost: this.post.idPost, idUser, score: valor }).subscribe(() => {\n      this.miScore = valor;\n      this.scoreService.getAverageScore(this.post!.idPost).subscribe(avg => {\n        this.promedio = avg;\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n    \n        \n            {{ post?.title }}\n        \n        \n            \n                \n            \n            \n                ← Volver\n            \n        \n    \n\n    \n    @if (post) {\n    \n        \n            {{ post.content }}\n        \n        \n            {{ nombreAutor }}\n            \n                \n                    = s, 'far text-muted': (miScore ?? 0) \n                \n                {{ promedio | number:'1.1-1' }} promedio\n            \n            {{ post.createdDate | date: 'fullDate' }}\n        \n    \n    }\n\n    \n    \n        \n            Comentarios\n        \n\n        \n            @if (comments && comments.length > 0) {\n            \n                @for (com of comments; track com) {\n                \n                    \n                    \n                        {{ com.idUser.charAt(0).toUpperCase() }}\n                    \n\n                    \n                    \n                        \n                            {{ com.idUser }}\n                            {{ com.date | date:'dd/MM/yyyy HH:mm' }}\n                        \n                        {{ com.content }}\n                        \n                            \n                        \n                    \n                \n                }\n            \n            } @else {\n            \n                No hay comentarios todavía. ¡Sé el primero en participar!\n            \n            }\n        \n\n        \n            \n                \n                    \n                    \n                        Enviar\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./detalle.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-principal {\n    font-size: 2.25rem;\n    font-weight: 700;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        position: absolute;\n        bottom: -8px;\n        left: 0;\n        width: 60px;\n        height: 4px;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n\n.card-post {\n    background-color: #fff;\n    border-radius: 1.25rem;\n    padding: 2rem;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 2rem;\n    border: none;\n\n    .card-body {\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        color: #444;\n    }\n\n    .card-footer {\n        font-size: 0.875rem;\n        color: #888;\n        border-top: 1px solid #eee;\n        padding-top: 0.75rem;\n        margin-top: 1rem;\n    }\n}\n\n.card-comentarios {\n    border-radius: 1.25rem;\n    border: none;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.04);\n    background-color: #fff;\n\n    .avatar {\n        width: 36px;\n        height: 36px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: bold;\n    }\n\n    .comentario:hover {\n        background-color: #f9f9f9;\n    }\n\n    .card-header {\n        border-bottom: 1px solid #eee;\n        background-color: transparent;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .comentario {\n        border-bottom: 1px solid #f0f0f0;\n        padding: 0.75rem 0;\n\n        .autor {\n            font-weight: 600;\n            color: #333;\n        }\n\n        .fecha {\n            font-size: 0.8rem;\n            color: #999;\n        }\n\n        .contenido {\n            font-size: 0.95rem;\n            margin: 0.25rem 0;\n        }\n    }\n\n    .alert-info {\n        background-color: #f0f8ff;\n        color: #555;\n        border: none;\n        border-radius: 0.75rem;\n        padding: 1rem;\n    }\n}\n\n.card-footer form {\n    background-color: #fafafa;\n    border-radius: 0.75rem;\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n\n    .form-control {\n        border: none;\n        box-shadow: none;\n        border-radius: 0.75rem 0 0 0.75rem;\n    }\n\n    .btn {\n        border-radius: 0 0.75rem 0.75rem 0;\n        font-weight: 600;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ post?.title }}                                                                                    ← Volver                                @if (post) {                        {{ post.content }}                            {{ nombreAutor }}                                                = s, \\'far text-muted\\': (miScore ?? 0)                                 {{ promedio | number:\\'1.1-1\\' }} promedio                        {{ post.createdDate | date: \\'fullDate\\' }}                }                            Comentarios                            @if (comments && comments.length > 0) {                            @for (com of comments; track com) {                                                                                {{ com.idUser.charAt(0).toUpperCase() }}                                                                                                                {{ com.idUser }}                            {{ com.date | date:\\'dd/MM/yyyy HH:mm\\' }}                                                {{ com.content }}                                                                                                                                }                        } @else {                            No hay comentarios todavía. ¡Sé el primero en participar!                        }                                                                                                            Enviar                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetalleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pie de página global para la plataforma ConectaDuoc.\nMuestra el año actual y enlaces relevantes si se requieren.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:19\n                        \n                    \n\n            \n                \n                    Año actual mostrado dinámicamente en el footer.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Componente de pie de página global para la plataforma ConectaDuoc.\n * Muestra el año actual y enlaces relevantes si se requieren.\n */\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n  /**\n   * Año actual mostrado dinámicamente en el footer.\n   */\n  currentYear: number = new Date().getFullYear();\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                MESA DE SERVICIOS\n                WhatsApp:\n                    \n                        +56 9 3663 9565\n                    \n                \n                \n                    Servicios Académicos\n                    Servicios de Financiamiento\n                    Servicios de Vida Estudiantil\n                    Servicios Tecnológicos\n                    Otros Servicios\n                \n                Teléfonos:\n                (+56) 442 201 098 —\n                (+56) 227 120 245\n            \n\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                \n\n                \n                \n                    \n                \n\n                \n                \n                    © 2025 Conecta-DUOC.\n                    Todos los derechos reservados.\n                    Desarrollado con cariño por JP DEV\n                    \n                        \n                            Ver Reglas de la Comunidad\n                        \n                    \n                \n            \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    MESA DE SERVICIOS                WhatsApp:                                            +56 9 3663 9565                                                                        Servicios Académicos                    Servicios de Financiamiento                    Servicios de Vida Estudiantil                    Servicios Tecnológicos                    Otros Servicios                                Teléfonos:                (+56) 442 201 098 —© 2025 Conecta-DUOC.                    Todos los derechos reservados.                    Desarrollado con cariño por JP DEV                                                                        Ver Reglas de la Comunidad                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forbidden/forbidden.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que se muestra cuando un usuario intenta acceder a una ruta no autorizada.\nGeneralmente es utilizado junto a guards de roles o permisos.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forbidden.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente que se muestra cuando un usuario intenta acceder a una ruta no autorizada.\n * Generalmente es utilizado junto a guards de roles o permisos.\n */\n@Component({\n  selector: 'app-forbidden',\n  imports: [],\n  templateUrl: './forbidden.component.html',\n  styleUrl: './forbidden.component.scss'\n})\nexport class ForbiddenComponent {\n\n  /* Por desarrollar a futuro... */\n\n}\n\n    \n\n    \n        forbidden works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'forbidden works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente responsable del inicio de sesión con Azure AD.\nValida si el usuario existe, redirige a registro o dashboard,\ny maneja la lógica de aceptación de políticas.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkAndRedirect\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAndRedirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndRedirect(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario ya existe en la base de datos.\n\nSi no existe, lo redirige a la vista de registro.\nSi existe, guarda sus datos y lo redirige según si aceptó políticas.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo del usuario autenticado por MSAL.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Inicia sesión usando MSAL (popup).\nSi es exitoso, valida al usuario en el backend y redirige.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Cierra sesión mediante MSAL y limpia los datos locales.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Al iniciar, verifica si ya hay una sesión activa.\nSi existe, intenta redirigir al flujo correspondiente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:28\n                        \n                    \n\n            \n                \n                    Indica si el usuario está autenticado actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Conecta-DUOC'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:25\n                        \n                    \n\n            \n                \n                    Título de la pantalla de inicio de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { User } from '../../models/user';\n\n/**\n * Componente responsable del inicio de sesión con Azure AD.\n * Valida si el usuario existe, redirige a registro o dashboard,\n * y maneja la lógica de aceptación de políticas.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  private msalService = inject(MsalService);\n  private router = inject(Router);\n  private userService = inject(UserService);\n\n  /** Título de la pantalla de inicio de sesión */\n  title = 'Conecta-DUOC';\n\n  /** Indica si el usuario está autenticado actualmente */\n  isLoggedIn = false;\n\n  /**\n   * Al iniciar, verifica si ya hay una sesión activa.\n   * Si existe, intenta redirigir al flujo correspondiente.\n   */\n  ngOnInit(): void {\n    const account = this.msalService.instance.getActiveAccount();\n    this.isLoggedIn = !!account;\n\n    if (account) {\n      this.checkAndRedirect(account.username);\n    }\n  }\n\n  /**\n   * Inicia sesión usando MSAL (popup).\n   * Si es exitoso, valida al usuario en el backend y redirige.\n   */\n  login() {\n    this.msalService.loginPopup().subscribe({\n      next: () => {\n        const account = this.msalService.instance.getAllAccounts()[0];\n        this.msalService.instance.setActiveAccount(account);\n\n        this.isLoggedIn = true;\n\n        if (account) {\n          this.checkAndRedirect(account.username);\n        } else {\n          this.isLoggedIn = false;\n        }\n      },\n      error: (error) => {\n        console.error('Login error:', error);\n        this.isLoggedIn = false;\n      },\n    });\n  }\n\n  /**\n   * Cierra sesión mediante MSAL y limpia los datos locales.\n   */\n  logout() {\n    this.msalService.logoutPopup().subscribe({\n      next: () => {\n        this.isLoggedIn = false;\n        this.userService.clearRole();\n        this.router.navigate(['/']);\n      },\n      error: (error) => {\n        console.error('Logout error:', error);\n      },\n    });\n  }\n\n  /**\n   * Verifica si el usuario ya existe en la base de datos.\n   * - Si no existe, lo redirige a la vista de registro.\n   * - Si existe, guarda sus datos y lo redirige según si aceptó políticas.\n   * @param email Correo del usuario autenticado por MSAL.\n   */\n  private checkAndRedirect(email: string) {\n    this.userService.checkUserExists(email).subscribe({\n      next: (exists) => {\n        //console.log('Existe usuario?', exists);\n\n        if (exists) {\n          this.userService.getUser(email).subscribe({\n            next: (user: User) => {\n              this.userService.setRole(user.role || 'student');\n              this.userService.setName(user.name);\n\n              if (user.idUser !== undefined && user.idUser !== null) {\n                this.userService.setIdUser(user.idUser);\n              }\n\n              if (user.policies === 1) {\n                this.router.navigate(['/dashboard']);\n              } else {\n                this.router.navigate(['/reglas-de-la-comunidad']);\n              }\n            },\n            error: err => {\n              console.error('Error al traer usuario:', err);\n            }\n          });\n        }\n\n        else {\n          console.log('Redirijo a registro');\n          this.router.navigate(['/registro']);\n        }\n      },\n      error: (err) => {\n        console.error('Error validando usuario:', err);\n        this.logout();\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n        \n      \n      ConectaDuoc\n    \n\n    \n    \n      Plataforma de colaboración estudiantil DUOC UC\n      @if (!isLoggedIn) {\n        \n          Iniciar Sesión\n        \n      }\n      @if (isLoggedIn) {\n        \n          Cerrar Sesión\n        \n      }\n    \n\n\n    \n      © 2025 Conecta-DUOC. Todos los derechos reservados.\n      Desarrollado por JP DEV\n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n// CONTENEDOR PRINCIPAL LOGIN\n.login-container {\n    background-color: $negro;\n    padding: 2rem;\n}\n\n// TARJETA LOGIN\n.login-card {\n    width: 100%;\n    max-width: 400px;\n    border: none;\n    background-color: $blanco;\n    border-radius: 1rem;\n    overflow: hidden;\n\n    .card-header {\n        background-color: $amarillo;\n        padding: 2rem 1rem;\n\n        .logo-wrapper {\n            background-color: $blanco;\n            padding: 0.5rem;\n            border-radius: 50%;\n            display: inline-block;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        .logo {\n            width: 90px;\n            height: auto;\n        }\n\n        .titulo {\n            color: $negro;\n            font-weight: bold;\n            margin: 0;\n            font-size: 1.5rem;\n        }\n    }\n\n    .card-body {\n        padding: 2rem 1.5rem;\n\n        button {\n            font-weight: bold;\n            padding: 0.75rem;\n            font-size: 1rem;\n\n            &.btn-warning {\n                background-color: $amarillo;\n                color: $negro;\n\n                &:hover {\n                    background-color: color.adjust($amarillo, $lightness: 10%);\n                }\n            }\n\n            &.btn-outline-light {\n                border-color: $gris;\n                color: $gris;\n\n                &:hover {\n                    background-color: $gris;\n                    color: $blanco;\n                }\n            }\n        }\n    }\n\n    .card-footer {\n        background-color: transparent;\n        padding: 1rem 1.5rem;\n    }\n}\n\n// CLASES GLOBALES (NO ANIDADAS)\n.bg-amarillo {\n    background-color: #f4b942;\n}\n\n.titulo {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #000;\n}\n\n.logo {\n    height: 48px;\n    width: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      ConectaDuoc                  Plataforma de colaboración estudiantil DUOC UC      @if (!isLoggedIn) {                  Iniciar Sesión              }      @if (isLoggedIn) {                  Cerrar Sesión              }              © 2025 Conecta-DUOC. Todos los derechos reservados.      Desarrollado por JP DEV      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalConfirmacionComponent.html":{"url":"components/ModalConfirmacionComponent.html","title":"component - ModalConfirmacionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalConfirmacionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/modal-confirmacion/modal-confirmacion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente reutilizable para mostrar un modal de confirmación.\nUtilizado para confirmar acciones críticas como eliminar, cerrar sesión, etc.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-confirmacion\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./modal-confirmacion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-confirmacion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mensaje\n                            \n                            \n                                titulo\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelar\n                            \n                            \n                                confirmar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mensaje\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:23\n                            \n                        \n                \n                    \n                        Mensaje que describe la acción a confirmar.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        titulo\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '¿Estás seguro?'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:18\n                            \n                        \n                \n                    \n                        Título del modal (por defecto: \"¿Estás seguro?\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:29\n                            \n                        \n                \n                    \n                        Controla la visibilidad del modal.\nSi es true, el modal se muestra.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelar\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:39\n                            \n                        \n                \n                    \n                        Evento emitido cuando el usuario cancela la acción.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmar\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:34\n                            \n                        \n                \n                    \n                        Evento emitido cuando el usuario confirma la acción.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Componente reutilizable para mostrar un modal de confirmación.\n * Utilizado para confirmar acciones críticas como eliminar, cerrar sesión, etc.\n */\n@Component({\n  selector: 'app-modal-confirmacion',\n  standalone: true,\n  imports: [],\n  templateUrl: './modal-confirmacion.component.html',\n  styleUrls: ['./modal-confirmacion.component.scss']\n})\nexport class ModalConfirmacionComponent {\n  /**\n   * Título del modal (por defecto: \"¿Estás seguro?\")\n   */\n  @Input() titulo = '¿Estás seguro?';\n\n  /**\n   * Mensaje que describe la acción a confirmar.\n   */\n  @Input() mensaje = '';\n\n  /**\n   * Controla la visibilidad del modal.\n   * Si es `true`, el modal se muestra.\n   */\n  @Input() visible = false;\n\n  /**\n   * Evento emitido cuando el usuario confirma la acción.\n   */\n  @Output() confirmar = new EventEmitter();\n\n  /**\n   * Evento emitido cuando el usuario cancela la acción.\n   */\n  @Output() cancelar = new EventEmitter();\n\n}\n    \n\n    \n        @if (visible) {\n  \n    \n      {{ titulo }}\n      {{ mensaje }}\n      \n        Cancelar\n        Sí, cerrar sesión\n      \n    \n  \n}\n    \n\n    \n                \n                    ./modal-confirmacion.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n\n    .modal-box {\n        background-color: $blanco;\n        border-radius: 16px;\n        padding: 2rem;\n        max-width: 400px;\n        width: 90%;\n        text-align: center;\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n\n        h2 {\n            font-size: 1.5rem;\n            color: $negro;\n            margin-bottom: 1rem;\n        }\n\n        p {\n            color: $gris;\n            font-size: 1rem;\n            margin-bottom: 2rem;\n        }\n\n        .acciones {\n            display: flex;\n            justify-content: center;\n            gap: 1rem;\n            flex-wrap: wrap;\n\n            .btn {\n                min-width: 140px;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (visible) {            {{ titulo }}      {{ mensaje }}              Cancelar        Sí, cerrar sesión            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalConfirmacionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de barra de navegación superior.\nMuestra el nombre del usuario, permite navegar y cerrar sesión.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                                ModalConfirmacionComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarModalLogout\n                            \n                            \n                                    Private\n                                msal\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                username\n                            \n                            \n                                userName$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelarLogout\n                            \n                            \n                                confirmarLogout\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarLogout\n                        \n                    \n                \n            \n            \n                \ncancelarLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Cancela el cierre de sesión y cierra el modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarLogout\n                        \n                    \n                \n            \n            \n                \nconfirmarLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario usando MSAL y limpia los datos locales.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Muestra el modal de confirmación para cerrar sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Al iniciar, obtiene el nombre del usuario desde el servicio MSAL o localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarModalLogout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:29\n                        \n                    \n\n            \n                \n                    Controla la visibilidad del modal de confirmación de cierre de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:26\n                        \n                    \n\n            \n                \n                    Nombre del usuario visible en el navbar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.userName$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:32\n                        \n                    \n\n            \n                \n                    Observable del nombre de usuario para actualizaciones reactivas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { RouterLink } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { MsalService } from '@azure/msal-angular';\nimport { ModalConfirmacionComponent } from '../../shared/modal-confirmacion/modal-confirmacion.component';\n\n/**\n * Componente de barra de navegación superior.\n * Muestra el nombre del usuario, permite navegar y cerrar sesión.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterLink, ModalConfirmacionComponent, CommonModule],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  private userService = inject(UserService);\n  private router = inject(Router);\n  private msal = inject(MsalService);\n\n  /** Nombre del usuario visible en el navbar */\n  username: string | null = null;\n\n  /** Controla la visibilidad del modal de confirmación de cierre de sesión */\n  mostrarModalLogout = false;\n\n  /** Observable del nombre de usuario para actualizaciones reactivas */\n  userName$ = this.userService.userName$;\n\n  /**\n   * Al iniciar, obtiene el nombre del usuario desde el servicio MSAL o `localStorage`.\n   */\n  ngOnInit(): void {\n    // Mostrar en consola todos los datos del usuario activo de Azure AD\n    const account = this.msal.instance.getActiveAccount();\n    //if (account) {\n    //console.log('ACCOUNT:', account);\n    //console.log('ID TOKEN CLAIMS:', account.idTokenClaims);\n    //}\n\n    // Obtener el nombre de usuario desde el servicio UserService\n    this.username =\n      this.userService.getName() ||\n      this.userService.getAzureUser()?.fullName ||\n      this.userService.getAzureUser()?.email ||\n      null;\n  }\n\n  /**\n   * Muestra el modal de confirmación para cerrar sesión.\n   */\n  logout() {\n    this.mostrarModalLogout = true;\n  }\n\n  /**\n   * Cierra la sesión del usuario usando MSAL y limpia los datos locales.\n   */\n  confirmarLogout() {\n    this.msal.logoutPopup().subscribe({\n      next: () => {\n        this.userService.clearRole();\n        // Si limpias más datos en logout, hazlo aquí\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  /**\n   * Cancela el cierre de sesión y cierra el modal.\n   */\n  cancelarLogout() {\n    this.mostrarModalLogout = false;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                \n            \n            ConectaDuoc\n        \n\n        \n            \n                \n                {{ userName$ | async }}\n            \n            \n                 Mi Perfil\n            \n            \n                 Cerrar sesión\n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.navbar {\n    background-color: $negro;\n    color: $blanco;\n    padding: 1rem 2rem;\n\n    .logo-wrapper {\n        background-color: $blanco;\n        padding: 0.35rem;\n        border-radius: 50%;\n        display: inline-block;\n        box-shadow: 0 2px 4px rgba(255, 255, 255, 0.15);\n    }\n\n    .logo {\n        height: 45px;\n        width: auto;\n    }\n\n    .titulo {\n        font-weight: bold;\n        color: $amarillo;\n        font-size: 1.25rem;\n    }\n\n    .usuario {\n        font-size: 0.95rem;\n        color: $blanco;\n    }\n\n    button {\n        background-color: $amarillo;\n        border: none;\n        color: $negro;\n        font-weight: bold;\n\n        &:hover {\n            background-color: color.adjust($amarillo, $lightness: 10%);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                ConectaDuoc                                                            {{ userName$ | async }}                                         Mi Perfil                                         Cerrar sesión                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionBannerComponent.html":{"url":"components/NotificacionBannerComponent.html","title":"component - NotificacionBannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionBannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notificacion-banner/notificacion-banner.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente visual que muestra un banner rotativo con notificaciones globales activas.\nPermite a los administradores comunicar información importante a todos los usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificacion-banner\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./notificacion-banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notificacion-banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actual\n                            \n                            \n                                currentIndex\n                            \n                            \n                                mostrar\n                            \n                            \n                                notificaciones\n                            \n                            \n                                    Private\n                                rotacionSub\n                            \n                            \n                                    Private\n                                servicio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cerrar\n                            \n                            \n                                iniciarRotacion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Cierra el banner y detiene la rotación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iniciarRotacion\n                        \n                    \n                \n            \n            \n                \niniciarRotacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Inicia la rotación automática del banner cada 7 segundos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Al destruir el componente, cancela la suscripción al intervalo.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Al iniciar, obtiene las notificaciones vigentes y configura la rotación si hay más de una.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificacionGlobal | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:26\n                        \n                    \n\n            \n                \n                    Notificación actualmente visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:29\n                        \n                    \n\n            \n                \n                    Índice actual dentro del arreglo de notificaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:23\n                        \n                    \n\n            \n                \n                    Controla si el banner está visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificacionGlobal[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:20\n                        \n                    \n\n            \n                \n                    Lista de notificaciones globales activas obtenidas desde el backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rotacionSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:35\n                        \n                    \n\n            \n                \n                    Referencia a la suscripción del rotador automático\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        servicio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificacionService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:32\n                        \n                    \n\n            \n                \n                    Instancia del servicio de notificaciones\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificacionGlobal } from '../../models/notificacionGlobal';\nimport { NotificacionService } from '../../core/services/notificacion.service';\nimport { interval, Subscription } from 'rxjs';\n\n/**\n * Componente visual que muestra un banner rotativo con notificaciones globales activas.\n * Permite a los administradores comunicar información importante a todos los usuarios.\n */\n@Component({\n  selector: 'app-notificacion-banner',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './notificacion-banner.component.html',\n  styleUrls: ['./notificacion-banner.component.scss']\n})\nexport class NotificacionBannerComponent implements OnInit, OnDestroy {\n  /** Lista de notificaciones globales activas obtenidas desde el backend */\n  notificaciones: NotificacionGlobal[] = [];\n\n  /** Controla si el banner está visible */\n  mostrar = false;\n\n  /** Notificación actualmente visible */\n  actual: NotificacionGlobal | null = null;\n\n  /** Índice actual dentro del arreglo de notificaciones */\n  currentIndex = 0;\n\n  /** Instancia del servicio de notificaciones */\n  private servicio = inject(NotificacionService);\n\n  /** Referencia a la suscripción del rotador automático */\n  private rotacionSub: Subscription = new Subscription();\n\n  /**\n   * Al iniciar, obtiene las notificaciones vigentes y configura la rotación si hay más de una.\n   */\n  ngOnInit(): void {\n    this.servicio.getVigentes().subscribe((lista: NotificacionGlobal[]) => {\n      this.notificaciones = lista;\n\n      if (this.notificaciones.length > 0) {\n        this.actual = this.notificaciones[0];\n        this.mostrar = true;\n\n        if (this.notificaciones.length > 1) {\n          this.iniciarRotacion();\n        }\n      }\n    });\n  }\n\n  /**\n   * Inicia la rotación automática del banner cada 7 segundos.\n   */\n  iniciarRotacion() {\n    this.rotacionSub = interval(7000).subscribe(() => {\n      this.currentIndex = (this.currentIndex + 1) % this.notificaciones.length;\n      this.actual = this.notificaciones[this.currentIndex];\n    });\n  }\n\n  /**\n   * Cierra el banner y detiene la rotación.\n   */\n  cerrar(): void {\n    this.mostrar = false;\n    this.rotacionSub.unsubscribe();\n  }\n\n  /**\n   * Al destruir el componente, cancela la suscripción al intervalo.\n   */\n  ngOnDestroy(): void {\n    this.rotacionSub.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        @if (mostrar && actual) {\n\n    \n        \n    \n    \n        {{ actual.titulo }} — {{ actual.mensaje }}\n    \n    ×\n\n}\n    \n\n    \n                \n                    ./notificacion-banner.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.notificacion-banner {\n    background: linear-gradient(to right, #e8f0fb, #f6f9ff);\n    color: $negro;\n    padding: 1rem 1.5rem;\n    border-left: 6px solid $azul;\n    border-radius: 1rem;\n    margin: 1.5rem auto;\n    max-width: 1200px;\n    font-family: $font-secondary;\n    font-size: 1rem;\n    font-weight: 500;\n    position: relative;\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);\n    animation: slideInDown 0.4s ease-out;\n\n    .contenido-banner {\n        strong {\n            font-family: $font-primary;\n            color: $azul;\n            font-weight: 700;\n        }\n    }\n}\n\n.icono-alerta {\n    font-size: 2rem;\n    color: $azul;\n    animation: pulse 1.8s infinite;\n}\n\n.close-btn {\n    background: none;\n    border: none;\n    font-size: 1.25rem;\n    font-weight: bold;\n    color: $gris;\n    transition: color 0.2s ease;\n    position: absolute;\n    top: 0.75rem;\n    right: 1rem;\n\n    &:hover {\n        color: $negro;\n    }\n}\n\n@keyframes slideInDown {\n    from {\n        opacity: 0;\n        transform: translateY(-15px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes pulse {\n\n    0%,\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n\n    50% {\n        transform: scale(1.2);\n        opacity: 0.7;\n    }\n}\n\n@media (max-width: 768px) {\n    .notificacion-banner {\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mostrar && actual) {                            {{ actual.titulo }} — {{ actual.mensaje }}        ×}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionBannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificacionGlobal.html":{"url":"interfaces/NotificacionGlobal.html","title":"interface - NotificacionGlobal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificacionGlobal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/notificacionGlobal.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una notificación global dentro de la plataforma.\nUtilizada para mostrar mensajes visibles a todos los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fechaFin\n                                        \n                                \n                                \n                                        \n                                            fechaInicio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mensaje\n                                        \n                                \n                                \n                                        \n                                            titulo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fechaFin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaFin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de término de la visibilidad de la notificación (formato ISO).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaInicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaInicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de inicio de la visibilidad de la notificación (formato ISO).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mensaje\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mensaje:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido o cuerpo del mensaje a mostrar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titulo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titulo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la notificación.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NotificacionGlobal {\n    /**\n     * ID único de la notificación.\n     */\n    id: number;\n\n    /**\n     * Título de la notificación.\n     */\n    titulo: string;\n\n    /**\n     * Contenido o cuerpo del mensaje a mostrar.\n     */\n    mensaje: string;\n\n    /**\n     * Fecha de inicio de la visibilidad de la notificación (formato ISO).\n     */\n    fechaInicio: string;\n\n    /**\n     * Fecha de término de la visibilidad de la notificación (formato ISO).\n     */\n    fechaFin: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificacionService.html":{"url":"injectables/NotificacionService.html","title":"injectable - NotificacionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificacionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notificacion.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las notificaciones globales\nvisibles para todos los usuarios de la plataforma.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crear\n                            \n                            \n                                eliminar\n                            \n                            \n                                getTodas\n                            \n                            \n                                getVigentes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notificacion.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crear\n                        \n                    \n                \n            \n            \n                \ncrear(nueva: NotificacionGlobal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Crea una nueva notificación global.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nueva\n                                            \n                                                            NotificacionGlobal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de tipo NotificacionGlobal a registrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Notificación creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Elimina una notificación global por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la notificación a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodas\n                        \n                    \n                \n            \n            \n                \ngetTodas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las notificaciones registradas (vigentes e históricas).\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Arreglo de NotificacionGlobal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVigentes\n                        \n                    \n                \n            \n            \n                \ngetVigentes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Obtiene solo las notificaciones vigentes (activas según fecha actual).\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Arreglo de notificaciones activas.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/notificaciones'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notificacion.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para notificaciones globales\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificacionGlobal } from '../../models/notificacionGlobal';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar las notificaciones globales\n * visibles para todos los usuarios de la plataforma.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionService {\n  /** URL base del API para notificaciones globales */\n  private apiUrl = 'http://localhost:9090/api/notificaciones';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Obtiene todas las notificaciones registradas (vigentes e históricas).\n   * @returns Arreglo de `NotificacionGlobal`.\n   */\n  getTodas(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Crea una nueva notificación global.\n   * @param nueva Objeto de tipo `NotificacionGlobal` a registrar.\n   * @returns Notificación creada.\n   */\n  crear(nueva: NotificacionGlobal): Observable {\n    return this.http.post(this.apiUrl, nueva);\n  }\n\n  /**\n   * Elimina una notificación global por su ID.\n   * @param id ID de la notificación a eliminar.\n   */\n  eliminar(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Obtiene solo las notificaciones vigentes (activas según fecha actual).\n   * @returns Arreglo de notificaciones activas.\n   */\n  getVigentes(): Observable {\n    return this.http.get(`${this.apiUrl}/vigentes`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionesComponent.html":{"url":"components/NotificacionesComponent.html","title":"component - NotificacionesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/notificaciones/notificaciones.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificaciones\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                BreadcrumbComponent\n                \n            \n\n            \n                styleUrls\n                ./notificaciones.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notificaciones.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formulario\n                            \n                            \n                                hoy\n                            \n                            \n                                notificaciones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cargarNotificaciones\n                            \n                            \n                                crear\n                            \n                            \n                                eliminar\n                            \n                            \n                                esActiva\n                            \n                            \n                                    Private\n                                getHoyISO\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificacionService: NotificacionService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificacionService\n                                                  \n                                                        \n                                                                        NotificacionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cargarNotificaciones\n                        \n                    \n                \n            \n            \n                \ncargarNotificaciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crear\n                        \n                    \n                \n            \n            \n                \ncrear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esActiva\n                        \n                    \n                \n            \n            \n                \nesActiva(fechaFin: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fechaFin\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHoyISO\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHoyISO()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formulario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificacionGlobal[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { NotificacionGlobal } from '../../../models/notificacionGlobal';\nimport { NotificacionService } from '../../../core/services/notificacion.service';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-notificaciones',\n  imports: [CommonModule, ReactiveFormsModule, BreadcrumbComponent],\n  standalone: true,\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.scss']\n})\nexport class NotificacionesComponent implements OnInit {\n  notificaciones: NotificacionGlobal[] = [];\n  formulario: FormGroup;\n  hoy = new Date();\n\n  constructor(\n    private notificacionService: NotificacionService,\n    private fb: FormBuilder\n  ) {\n    this.formulario = this.fb.group({\n      titulo: ['', Validators.required],\n      mensaje: ['', Validators.required],\n      fechaInicio: [this.getHoyISO(), Validators.required],\n      fechaFin: [this.getHoyISO(), Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.cargarNotificaciones();\n  }\n\n  esActiva(fechaFin: string): boolean {\n    const hoy = new Date();\n    const hoyStr = hoy.toISOString().split('T')[0];\n    return fechaFin >= hoyStr;\n  }\n\n  private getHoyISO(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n\n  cargarNotificaciones() {\n    this.notificacionService.getTodas().subscribe(data => {\n      this.notificaciones = data;\n    });\n  }\n\n  crear() {\n    if (this.formulario.invalid) return;\n\n    this.notificacionService.crear(this.formulario.value).subscribe(() => {\n      this.formulario.reset();\n      this.cargarNotificaciones();\n    });\n  }\n\n  eliminar(id: number) {\n    this.notificacionService.eliminar(id).subscribe(() => {\n      this.cargarNotificaciones();\n    });\n  }\n}\n    \n\n    \n        \n    \n    Gestión de Notificaciones Globales\n    Administra las notificaciones para usuarios de la plataforma\n\n    \n        \n            \n                \n            \n            \n                Crear nueva notificación\n            \n        \n\n        \n            \n                Título\n                \n            \n\n            \n                Mensaje\n                \n            \n\n            \n                \n                    Fecha Inicio\n                    \n                \n                \n                    Fecha Fin\n                    \n                \n            \n\n            \n                🚀 Crear Notificación\n            \n        \n    \n\n    \n        📋 Notificaciones Actuales\n        \n            \n                \n\n                    \n                        {{ n.titulo }}\n                        \n                            {{ esActiva(n.fechaFin) ? 'Activa' : 'Expirada' }}\n                        \n                    \n                    \n                        {{ n.fechaInicio | date:'dd/MM/yyyy' }} a {{ n.fechaFin | date:'dd/MM/yyyy' }}\n                    \n                    {{ n.mensaje }}\n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./notificaciones.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n\n.card {\n    border: none;\n    background-color: #ffffff;\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.06);\n}\n\n.form-label {\n    font-weight: 600;\n    font-size: 0.95rem;\n}\n\ninput[type=\"date\"],\ninput[type=\"text\"],\ntextarea {\n    border-radius: 0.5rem;\n    font-size: 0.95rem;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #eee;\n    padding: 1rem 0;\n\n    h6 {\n        font-size: 1.05rem;\n    }\n\n    .btn {\n        border-radius: 0.5rem;\n    }\n\n    &:last-child {\n        border-bottom: none;\n    }\n}\n\n.nueva-notificacion {\n    animation: slideFadeIn 0.4s ease-out;\n}\n\n@keyframes slideFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(8px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.badge {\n    font-size: 0.75rem;\n    padding: 0.3rem 0.6rem;\n    border-radius: 0.5rem;\n    font-weight: 600;\n}\n\n.seccion-form {\n    background-color: #fff;\n    border: none;\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.06);\n    transition: all 0.3s ease;\n\n    .icono-seccion i {\n        font-size: 1.5rem;\n    }\n\n    .form-label {\n        font-size: 0.95rem;\n        color: $gris;\n    }\n\n    .campo-form {\n        border-radius: 0.75rem;\n        font-size: 0.95rem;\n        padding: 0.75rem;\n        transition: border-color 0.2s;\n\n        &:focus {\n            border-color: $azul;\n            box-shadow: 0 0 0 0.1rem rgba($azul, 0.25);\n        }\n    }\n\n    .btn-primary {\n        font-size: 1.05rem;\n        padding: 0.75rem;\n        border-radius: 0.75rem;\n        background-color: $azul;\n        border: none;\n        transition: background-color 0.2s;\n\n        &:hover {\n            background-color: color.adjust($azul, $lightness: -5%);\n        }\n\n        &:disabled {\n            background-color: lighten($azul, 20%);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Gestión de Notificaciones Globales    Administra las notificaciones para usuarios de la plataforma                                                                                Crear nueva notificación                                                        Título                                                        Mensaje                                                                            Fecha Inicio                                                                        Fecha Fin                                                                            🚀 Crear Notificación                                    📋 Notificaciones Actuales                                                                                {{ n.titulo }}                                                    {{ esActiva(n.fechaFin) ? \\'Activa\\' : \\'Expirada\\' }}                                                                                        {{ n.fechaInicio | date:\\'dd/MM/yyyy\\' }} a {{ n.fechaFin | date:\\'dd/MM/yyyy\\' }}                                        {{ n.mensaje }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/perfil/perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra el perfil del usuario autenticado.\nPermite visualizar y filtrar sus publicaciones, editar su sede,\ny muestra estadísticas personales como total de comentarios, publicaciones\ny promedio de calificaciones recibidas.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                BreadcrumbComponent\n                            RouterModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./perfil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                filtroPost\n                            \n                            \n                                paginaActual\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                posts\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                postsPorPagina\n                            \n                            \n                                promedioPonderado\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                sede\n                            \n                            \n                                sedes\n                            \n                            \n                                totalComments\n                            \n                            \n                                totalPosts\n                            \n                            \n                                user\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cambiarPagina\n                            \n                            \n                                cargarPublicaciones\n                            \n                            \n                                editar\n                            \n                            \n                                getUserInitial\n                            \n                            \n                                guardarSede\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    postsFiltrados\n                                \n                                \n                                    totalPaginas\n                                \n                                \n                                    paginas\n                                \n                                \n                                    postsPaginados\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarPagina\n                        \n                    \n                \n            \n            \n                \ncambiarPagina(pagina: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:220\n                        \n                    \n\n\n            \n                \n                        Cambia de página en la vista de publicaciones.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pagina\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página deseada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPublicaciones\n                        \n                    \n                \n            \n            \n                \ncargarPublicaciones(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Carga todas las publicaciones del usuario y calcula\nestadísticas relacionadas a comentarios y puntajes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(post: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Redirige al usuario al formulario de edición de una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Publicación a editar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitial\n                        \n                    \n                \n            \n            \n                \ngetUserInitial()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Devuelve la inicial del nombre del usuario.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Letra inicial o \"?\" si no disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardarSede\n                        \n                    \n                \n            \n            \n                \nguardarSede()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Guarda el cambio de sede realizado por el usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Inicializa el perfil: obtiene los datos del usuario,\nsus publicaciones, comentarios y puntajes asociados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:51\n                        \n                    \n\n            \n                \n                    Categorías disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroPost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:92\n                        \n                    \n\n            \n                \n                    Texto para filtrar publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginaActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:98\n                        \n                    \n\n            \n                \n                    Página actual de visualización\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:48\n                        \n                    \n\n            \n                \n                    Publicaciones realizadas por el usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postsPorPagina\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:95\n                        \n                    \n\n            \n                \n                    Cantidad de publicaciones por página\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedioPonderado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:89\n                        \n                    \n\n            \n                \n                    Promedio de puntuaciones recibidas en sus publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sede\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:54\n                        \n                    \n\n            \n                \n                    Sede seleccionada actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:57\n                        \n                    \n\n            \n                \n                    Lista de sedes posibles (Duoc UC)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalComments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:86\n                        \n                    \n\n            \n                \n                    Total de comentarios recibidos en sus publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:83\n                        \n                    \n\n            \n                \n                    Total de publicaciones del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:45\n                        \n                    \n\n            \n                \n                    Información del usuario autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        postsFiltrados\n                    \n                \n\n                \n                    \n                        getpostsFiltrados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:185\n                                \n                            \n                    \n                        \n                                Devuelve las publicaciones filtradas según el texto ingresado.\n\n\n                                \n                                    Returns :         Post[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        totalPaginas\n                    \n                \n\n                \n                    \n                        gettotalPaginas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:197\n                                \n                            \n                    \n                        \n                                Calcula el total de páginas según los resultados filtrados.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        paginas\n                    \n                \n\n                \n                    \n                        getpaginas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:204\n                                \n                            \n                    \n                        \n                                Devuelve un arreglo con los números de página disponibles.\n\n\n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        postsPaginados\n                    \n                \n\n                \n                    \n                        getpostsPaginados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:211\n                                \n                            \n                    \n                        \n                                Devuelve las publicaciones correspondientes a la página actual.\n\n\n                                \n                                    Returns :         Post[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n\n/* BreadCrumb */\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n/* Services */\nimport { UserService } from '../../core/services/user.service';\nimport { PostService } from '../../core/services/post.service';\nimport { CommentService } from '../../core/services/comment.service';\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { ScoreService } from '../../core/services/score.service';\n\n/* Models */\nimport { User } from '../../models/user';\nimport { Post } from '../../models/post';\nimport { PostCategory } from '../../models/postCategory';\n\n/**\n * Componente que muestra el perfil del usuario autenticado.\n * Permite visualizar y filtrar sus publicaciones, editar su sede,\n * y muestra estadísticas personales como total de comentarios, publicaciones\n * y promedio de calificaciones recibidas.\n */\n@Component({\n  selector: 'app-perfil',\n  standalone: true,\n  imports: [CommonModule, BreadcrumbComponent, RouterModule, FormsModule],\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n  private userService = inject(UserService);\n  private postService = inject(PostService);\n  private router = inject(Router);\n  private commentService = inject(CommentService);\n  private postCategoryService = inject(PostCategoryService);\n  private scoreService = inject(ScoreService);\n\n  /** Información del usuario autenticado */\n  user: User | null = null;\n\n  /** Publicaciones realizadas por el usuario */\n  posts: Post[] = [];\n\n  /** Categorías disponibles */\n  categories: PostCategory[] = [];\n\n  /** Sede seleccionada actualmente */\n  sede = '';\n\n  /** Lista de sedes posibles (Duoc UC) */\n  sedes: string[] = [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ];\n\n  /** Total de publicaciones del usuario */\n  totalPosts = 0;\n\n  /** Total de comentarios recibidos en sus publicaciones */\n  totalComments = 0;\n\n  /** Promedio de puntuaciones recibidas en sus publicaciones */\n  promedioPonderado = 0;\n\n  /** Texto para filtrar publicaciones */\n  filtroPost = '';\n\n  /** Cantidad de publicaciones por página */\n  postsPorPagina = 8;\n\n  /** Página actual de visualización */\n  paginaActual = 1;\n\n  /**\n   * Inicializa el perfil: obtiene los datos del usuario,\n   * sus publicaciones, comentarios y puntajes asociados.\n   */\n  ngOnInit(): void {\n    const email = this.userService.getAzureUser()?.email || this.userService.getName();\n    if (!email) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.postCategoryService.getAll().subscribe(cats => (this.categories = cats));\n\n    this.userService.getUser(email).subscribe(user => {\n      this.user = user;\n      this.sede = user.center;\n      if (user.idUser !== undefined) {\n        this.cargarPublicaciones(user.idUser);\n      }\n    });\n  }\n\n  /**\n   * Carga todas las publicaciones del usuario y calcula\n   * estadísticas relacionadas a comentarios y puntajes.\n   * @param idUser ID del usuario.\n   */\n  cargarPublicaciones(idUser: number): void {\n    this.postService.getAll().subscribe(posts => {\n      this.posts = posts.filter(p => p.idUser === idUser);\n      this.totalPosts = this.posts.length;\n      this.paginaActual = 1;\n\n      const commentRequests = this.posts.map(p => this.commentService.getByPostId(p.idPost));\n      if (commentRequests.length) {\n        forkJoin(commentRequests).subscribe(all => {\n          this.totalComments = all.reduce((acc, arr) => acc + arr.length, 0);\n        });\n      } else {\n        this.totalComments = 0;\n      }\n\n\n      const scoreRequests = this.posts.map(p => this.scoreService.getAverageScore(p.idPost));\n      if (scoreRequests.length) {\n        forkJoin(scoreRequests).subscribe(all => {\n          const total = all.reduce((acc, val) => acc + val, 0);\n          this.promedioPonderado = total / all.length;\n        });\n      } else {\n        this.promedioPonderado = 0;\n      }\n    });\n  }\n\n  /**\n   * Devuelve la inicial del nombre del usuario.\n   * @returns Letra inicial o \"?\" si no disponible.\n   */\n  getUserInitial(): string {\n    return this.user?.name ? this.user.name.charAt(0).toUpperCase() : '?';\n  }\n\n  /**\n  * Guarda el cambio de sede realizado por el usuario.\n  */\n  guardarSede(): void {\n    if (this.user) {\n      const updatedUser = { ...this.user, center: this.sede };\n      this.userService.registerUser(updatedUser).subscribe(() => {\n      });\n    }\n  }\n\n  /**\n   * Redirige al usuario al formulario de edición de una publicación.\n   * @param post Publicación a editar.\n   */\n  editar(post: Post): void {\n    this.router.navigate(['/dashboard/ayudantias', post.idPost], { state: { editar: post } });\n  }\n\n  /**\n   * Devuelve las publicaciones filtradas según el texto ingresado.\n   */\n  get postsFiltrados(): Post[] {\n    if (!this.filtroPost.trim()) return this.posts;\n    const texto = this.filtroPost.toLowerCase();\n    return this.posts.filter(p =>\n      p.title.toLowerCase().includes(texto) ||\n      p.content.toLowerCase().includes(texto)\n    );\n  }\n\n  /**\n   * Calcula el total de páginas según los resultados filtrados.\n   */\n  get totalPaginas(): number {\n    return Math.ceil(this.postsFiltrados.length / this.postsPorPagina) || 1;\n  }\n\n  /**\n   * Devuelve un arreglo con los números de página disponibles.\n   */\n  get paginas(): number[] {\n    return Array.from({ length: this.totalPaginas }, (_, i) => i + 1);\n  }\n\n  /**\n   * Devuelve las publicaciones correspondientes a la página actual.\n   */\n  get postsPaginados(): Post[] {\n    const inicio = (this.paginaActual - 1) * this.postsPorPagina;\n    return this.postsFiltrados.slice(inicio, inicio + this.postsPorPagina);\n  }\n\n  /**\n   * Cambia de página en la vista de publicaciones.\n   * @param pagina Número de página deseada.\n   */\n  cambiarPagina(pagina: number): void {\n    if (pagina  this.totalPaginas) return;\n    this.paginaActual = pagina;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n  \n    \n      {{ getUserInitial() }}\n    \n    \n      {{ user?.name || 'Mi Perfil' }}\n      Correo: {{ user?.email }}\n      Rol: {{ user?.role }}\n      \n        Sede:\n        \n          @for (s of sedes; track s) {\n          {{ s }}\n          }\n        \n      \n    \n\n    \n      \n         Editar Perfil\n      \n    \n     -->\n\n  \n\n  \n  \n    Estadísticas personales\n    \n      \n        Publicaciones: {{ totalPosts }}\n        Comentarios recibidos: {{ totalComments }}\n        Calificación Ponderada: {{ promedioPonderado |\n          number:'1.1-1' }} / 5\n      \n    \n  \n\n  \n  \n    Mis publicaciones\n\n    @if (posts.length) {\n    \n      \n    \n    }\n\n    @if (!posts.length) {\n    \n      Aún no has publicado nada.\n    \n    }\n\n    @if (posts.length) {\n    \n      @for (pub of postsPaginados; track pub) {\n      \n        {{ pub.title }}\n\n           Editar\n         -->\n      \n      }\n    \n     1\">\n      \n        \n          Anterior\n        \n        \n          {{ p }}\n        \n        \n          Siguiente\n        \n      \n    \n    }\n  \n\n\n\n    \n\n    \n                \n                    ./perfil.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.perfil-box {\n    background-color: #fff7e6;\n    border-left: 5px solid $amarillo;\n    border-radius: 0.5rem;\n}\n\nh4,\nh5 {\n    color: $negro;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #eee;\n\n    &:last-child {\n        border-bottom: none;\n    }\n\n    button {\n        font-size: 0.85rem;\n    }\n}\n\n.perfil-header {\n    border: 1px solid #eee;\n    border-radius: 1rem;\n    background: #fff;\n\n    .avatar {\n        width: 80px;\n        height: 80px;\n        background-color: #0d6efd;\n        color: white;\n        border-radius: 50%;\n        font-size: 2rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-shadow: 0 0 0 3px white;\n        font-weight: 600;\n    }\n}\n\nh4,\nh5 {\n    color: #212529;\n}\n\n.bg-white {\n    border: 1px solid #e0e0e0;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #f0f0f0;\n    transition: background 0.2s ease;\n\n    &:hover {\n        background-color: #f8f9fa;\n    }\n\n    .btn {\n        font-size: 0.85rem;\n    }\n\n    &:last-child {\n        border-bottom: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ getUserInitial() }}              {{ user?.name || \\'Mi Perfil\\' }}      Correo: {{ user?.email }}      Rol: {{ user?.role }}              Sede:                  @for (s of sedes; track s) {          {{ s }}          }                                     Editar Perfil               -->          Estadísticas personales                  Publicaciones: {{ totalPosts }}        Comentarios recibidos: {{ totalComments }}        Calificación Ponderada: {{ promedioPonderado |          number:\\'1.1-1\\' }} / 5                    Mis publicaciones    @if (posts.length) {                  }    @if (!posts.length) {          Aún no has publicado nada.        }    @if (posts.length) {          @for (pub of postsPaginados; track pub) {              {{ pub.title }}           Editar         -->            }         1\">                        Anterior                          {{ p }}                          Siguiente                      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una publicación realizada por un usuario dentro de ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido detallado de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de creación de la publicación (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la categoría asociada a la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que creó la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Número de visualizaciones que ha recibido la publicación\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostCategory.html":{"url":"interfaces/PostCategory.html","title":"interface - PostCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/postCategory.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una categoría en la que pueden clasificarse las publicaciones dentro de ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción breve de la categoría\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la categoría\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la categoría (ej: Ayudantías, Deportes, Trueques, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la categoría: 0 = Inactiva, 1 = Activa\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PostCategory {\n    /** ID único de la categoría */\n    idCategory: number;\n\n    /** Nombre de la categoría (ej: Ayudantías, Deportes, Trueques, etc.) */\n    name: string;\n\n    /** Descripción breve de la categoría */\n    description: string;\n\n    /** Estado de la categoría: 0 = Inactiva, 1 = Activa */\n    status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostCategoryService.html":{"url":"injectables/PostCategoryService.html","title":"injectable - PostCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/post-category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para gestionar las categorías de publicaciones en ConectaDuoc.\nPermite obtener, crear, actualizar y eliminar categorías.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(category: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Crea una nueva categoría.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto sin idCategory, ya que es generado por el backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Categoría creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Elimina una categoría por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las categorías disponibles.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Lista de objetos PostCategory.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, category: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Actualiza una categoría existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría a actualizar.\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto PostCategory con los nuevos valores.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Categoría actualizada.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/post-category'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post-category.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para categorías de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post-category.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostCategory } from '../../models/postCategory';\n\n/**\n * Servicio para gestionar las categorías de publicaciones en ConectaDuoc.\n * Permite obtener, crear, actualizar y eliminar categorías.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostCategoryService {\n  /** URL base del API para categorías de publicaciones */\n  private apiUrl = 'http://localhost:9090/api/post-category';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todas las categorías disponibles.\n   * @returns Lista de objetos `PostCategory`.\n   */\n  getAll(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // ----------------------\n  // Módulo de Configuraciones\n  // ----------------------\n\n  /**\n   * Crea una nueva categoría.\n   * @param category Objeto sin `idCategory`, ya que es generado por el backend.\n   * @returns Categoría creada.\n   */\n  create(category: Omit): Observable {\n    return this.http.post(this.apiUrl, category);\n  }\n\n  /**\n   * Actualiza una categoría existente.\n   * @param id ID de la categoría a actualizar.\n   * @param category Objeto `PostCategory` con los nuevos valores.\n   * @returns Categoría actualizada.\n   */\n  update(id: number, category: PostCategory): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, category);\n  }\n\n  /**\n   * Elimina una categoría por su ID.\n   * @param id ID de la categoría a eliminar.\n   */\n  delete(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/post.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las publicaciones en ConectaDuoc.\nPermite crear, obtener, eliminar publicaciones y registrar visualizaciones.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPost\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                sumarVisualizacion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPost\n                        \n                    \n                \n            \n            \n                \ncreatePost(post: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Crea una nueva publicación en la base de datos.\nEl ID, fecha y visualizaciones serán generadas automáticamente por el backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto con los datos de la publicación (sin idPost, createdDate ni views).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Publicación creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Elimina una publicación por su ID.\n(Solo si esta acción está permitida por reglas del sistema).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(categoryId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las publicaciones o filtra por categoría si se indica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (Opcional) ID de la categoría para filtrar publicaciones.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de publicaciones.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Obtiene una publicación específica por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Objeto Post.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sumarVisualizacion\n                        \n                    \n                \n            \n            \n                \nsumarVisualizacion(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Registra una nueva visualización para una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación visualizada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/post'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Post } from '../../models/post';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar las publicaciones en ConectaDuoc.\n * Permite crear, obtener, eliminar publicaciones y registrar visualizaciones.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  /** URL base del API para publicaciones */\n  private apiUrl = 'http://localhost:9090/api/post';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todas las publicaciones o filtra por categoría si se indica.\n   * @param categoryId (Opcional) ID de la categoría para filtrar publicaciones.\n   * @returns Lista de publicaciones.\n   */\n  getAll(categoryId?: number): Observable {\n    if (categoryId) {\n      return this.http.get(`${this.apiUrl}?idCategory=${categoryId}`);\n    }\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Obtiene una publicación específica por su ID.\n   * @param idPost ID de la publicación.\n   * @returns Objeto `Post`.\n   */\n  getById(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}/${idPost}`);\n  }\n\n  /**\n   * Crea una nueva publicación en la base de datos.\n   * El ID, fecha y visualizaciones serán generadas automáticamente por el backend.\n   * @param post Objeto con los datos de la publicación (sin `idPost`, `createdDate` ni `views`).\n   * @returns Publicación creada.\n   */\n  createPost(post: Omit): Observable {\n    return this.http.post(this.apiUrl, post);\n  }\n\n  /**\n   * Elimina una publicación por su ID.\n   * (Solo si esta acción está permitida por reglas del sistema).\n   * @param idPost ID de la publicación a eliminar.\n   */\n  delete(idPost: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${idPost}`);\n  }\n\n\n  /**\n   * Registra una nueva visualización para una publicación.\n   * @param idPost ID de la publicación visualizada.\n   */\n  sumarVisualizacion(idPost: number): Observable {\n    return this.http.put(`${this.apiUrl}/${idPost}/view`, {});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostView.html":{"url":"interfaces/PostView.html","title":"interface - PostView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa la cantidad de visualizaciones que ha recibido una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Número total de visualizaciones registradas\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de registrar un nuevo usuario en ConectaDuoc\nal iniciar sesión por primera vez con Azure AD. El usuario debe seleccionar su sede.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                name\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                sedes\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                guardarRegistro\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        guardarRegistro\n                        \n                    \n                \n            \n            \n                \nguardarRegistro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Envía el formulario de registro al backend.\nUna vez registrado, redirige al usuario a las reglas de la comunidad.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario y carga los datos del usuario desde Azure AD.\nSi no hay sesión activa, redirige a la pantalla de inicio.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:27\n                        \n                    \n\n            \n                \n                    Correo del usuario autenticado (obtenido desde Azure AD)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:30\n                        \n                    \n\n            \n                \n                    Nombre completo del usuario autenticado (Azure AD)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:24\n                        \n                    \n\n            \n                \n                    Formulario reactivo para el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online', 'Campus Virtual', 'Sede Alameda', 'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas', 'Sede Educación Continua', 'Sede Maipú', 'Sede Melipilla',\n    'Sede Plaza Norte', 'Sede Plaza Oeste', 'Sede Plaza Vespucio', 'Sede Puente Alto',\n    'Sede San Bernardo', 'Sede San Carlos de Apoquindo', 'Sede San Joaquín',\n    'Sede Valparaíso', 'Sede Viña del Mar', 'Campus Arauco', 'Campus Nacimiento',\n    'Sede San Andrés de Concepción', 'Campus Villarrica', 'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:36\n                        \n                    \n\n            \n                \n                    Lista de sedes disponibles en Duoc UC.\nEl usuario debe seleccionar una como parte del registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { User } from '../../models/user';\n\n/**\n * Componente encargado de registrar un nuevo usuario en ConectaDuoc\n * al iniciar sesión por primera vez con Azure AD. El usuario debe seleccionar su sede.\n */\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  private fb = inject(FormBuilder);\n  private userService = inject(UserService);\n  private router = inject(Router);\n\n  /** Formulario reactivo para el registro */\n  registerForm!: FormGroup;\n\n  /** Correo del usuario autenticado (obtenido desde Azure AD) */\n  email = '';\n\n  /** Nombre completo del usuario autenticado (Azure AD) */\n  name = '';\n\n  /**\n   * Lista de sedes disponibles en Duoc UC.\n   * El usuario debe seleccionar una como parte del registro.\n   */\n  sedes: string[] = [\n    'Modalidad online', 'Campus Virtual', 'Sede Alameda', 'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas', 'Sede Educación Continua', 'Sede Maipú', 'Sede Melipilla',\n    'Sede Plaza Norte', 'Sede Plaza Oeste', 'Sede Plaza Vespucio', 'Sede Puente Alto',\n    'Sede San Bernardo', 'Sede San Carlos de Apoquindo', 'Sede San Joaquín',\n    'Sede Valparaíso', 'Sede Viña del Mar', 'Campus Arauco', 'Campus Nacimiento',\n    'Sede San Andrés de Concepción', 'Campus Villarrica', 'Sede Puerto Montt'\n  ];\n\n  /**\n   * Inicializa el formulario y carga los datos del usuario desde Azure AD.\n   * Si no hay sesión activa, redirige a la pantalla de inicio.\n   */\n  ngOnInit(): void {\n    const azureUser = this.userService.getAzureUser();\n    if (!azureUser) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.email = azureUser.email;\n    this.name = azureUser.fullName;\n\n    this.registerForm = this.fb.group({\n      center: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Envía el formulario de registro al backend.\n   * Una vez registrado, redirige al usuario a las reglas de la comunidad.\n   */\n  guardarRegistro(): void {\n    if (this.registerForm.invalid) return;\n\n    const user: User = {\n      email: this.email,\n      name: this.name,\n      center: this.registerForm.value.center,\n      role: 'student',\n      policies: 0 // Aceptación viene después en el flujo\n    };\n\n    this.userService.registerUser(user).subscribe({\n      next: () => {\n        // Al registrar, redirige a la pantalla de reglas de la comunidad\n        this.router.navigate(['/reglas-de-la-comunidad']);\n      },\n      error: () => {\n        // Manejo de error, podrías mostrar un mensaje al usuario\n        console.error('Error al registrar el usuario');\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      ¡Bienvenido/a a la comunidad ConectaDuoc!\n      Registro de usuario\n    \n\n    \n      \n        Email\n        \n      \n\n      \n        Nombre completo\n        \n      \n\n      \n        Sede\n        \n          Seleccione su sede\n          @for (s of sedes; track s) {\n          {{ s }}\n          }\n        \n      \n\n      \n        Guardar y continuar\n      \n    \n  \n\n\n\n  ← Volver al inicio de sesión\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                @use 'styles' as *;\n@use 'sass:color';\n\n.registro-wrapper {\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: $blanco;\n}\n\n.container {\n    padding-bottom: 0 !important;\n}\n\n.registro-card {\n    max-width: 400px;\n    border-radius: 1.25rem;\n    border: none;\n    background: $blanco;\n    border-top: 5px solid $amarillo;\n}\n\n.logo-registro {\n    height: 60px;\n}\n\n.titulo-registro {\n    color: $amarillo;\n}\n\nlabel {\n    color: $negro;\n}\n\n.campo-readonly {\n    background: #f9fafb !important;\n    color: $gris !important;\n    font-weight: 600;\n}\n\n.form-select:invalid {\n    color: $gris;\n    font-style: italic;\n}\n\n.boton-registro {\n    background-color: $amarillo !important;\n    border: none !important;\n    color: $negro !important;\n    transition: background 0.2s;\n\n    &:hover {\n        background-color: color.adjust($amarillo, $lightness: -10%) !important;\n        color: $negro !important;\n    }\n}\n\n\n.text-center a {\n    font-size: 0.95rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      ¡Bienvenido/a a la comunidad ConectaDuoc!      Registro de usuario                      Email                            Nombre completo                            Sede                  Seleccione su sede          @for (s of sedes; track s) {          {{ s }}          }                            Guardar y continuar              ← Volver al inicio de sesión'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReglasDeLaComunidadComponent.html":{"url":"components/ReglasDeLaComunidadComponent.html","title":"component - ReglasDeLaComunidadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReglasDeLaComunidadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra las reglas de la comunidad de ConectaDuoc.\nObliga al usuario a aceptarlas antes de utilizar la plataforma por primera vez.\nSi las rechaza, se le cierra la sesión.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reglas-de-la-comunidad\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                                ModalConfirmacionComponent\n                \n            \n\n            \n                styleUrls\n                ./reglas-de-la-comunidad.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reglas-de-la-comunidad.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarModal\n                            \n                            \n                                reglas\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aceptarReglas\n                            \n                            \n                                cancelarRechazo\n                            \n                            \n                                confirmarRechazo\n                            \n                            \n                                rechazarReglas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aceptarReglas\n                        \n                    \n                \n            \n            \n                \naceptarReglas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Acepta las reglas de la comunidad y actualiza el campo policies del usuario a 1.\nTambién se guarda la aceptación en localStorage para prevenir múltiples redirecciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarRechazo\n                        \n                    \n                \n            \n            \n                \ncancelarRechazo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Cancela el intento de rechazo de las reglas, cerrando el modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarRechazo\n                        \n                    \n                \n            \n            \n                \nconfirmarRechazo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Confirma el rechazo de las reglas.\nSe marca policies como 0, se limpia el localStorage y se redirige al login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rechazarReglas\n                        \n                    \n                \n            \n            \n                \nrechazarReglas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Abre el modal de confirmación para rechazar las reglas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:25\n                        \n                    \n\n            \n                \n                    Controla la visibilidad del modal de confirmación de rechazo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reglas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      titulo: '1. Respeto ante todo',\n      descripcion: 'No se toleran comentarios ofensivos, discriminatorios, acosadores o violentos. Toda persona debe ser tratada con dignidad y cortesía.'\n    },\n    {\n      titulo: '2. Actividades sin fines de lucro',\n      descripcion: 'ConectaDuoc es un espacio colaborativo. Está prohibida toda oferta o venta comercial dentro de la plataforma.'\n    },\n    {\n      titulo: '3. Contenido adecuado',\n      descripcion: 'Se prohíbe la publicación de material con lenguaje vulgar, violencia gráfica, apología de drogas, apuestas o cualquier contenido ilícito.'\n    },\n    {\n      titulo: '4. Protección de datos personales',\n      descripcion: 'No publiques datos personales tuyos o de terceros sin consentimiento explícito. Esto incluye RUT, correos, teléfonos o direcciones.'\n    },\n    {\n      titulo: '5. Moderación activa',\n      descripcion: 'Los administradores podrán eliminar o editar publicaciones que infrinjan las reglas. Las reincidencias pueden derivar en la suspensión del perfil.'\n    },\n    {\n      titulo: '6. Lenguaje inclusivo y empático',\n      descripcion: 'Fomentamos un lenguaje claro, inclusivo y que promueva el respeto por la diversidad de género, origen y creencias.'\n    },\n    {\n      titulo: '7. Sistema de reportes',\n      descripcion: 'Los usuarios pueden reportar contenido inapropiado mediante el botón correspondiente. Todas las denuncias serán revisadas.'\n    },\n    {\n      titulo: '8. Contenido académico y estudiantil preferente',\n      descripcion: 'Se espera que las publicaciones estén relacionadas con el quehacer estudiantil: ayudantías, actividades culturales, voluntariado, etc.'\n    },\n    {\n      titulo: '9. Responsabilidad en encuentros presenciales',\n      descripcion: 'En caso de concretarse actividades fuera de la plataforma, los usuarios deben ser responsables, actuar con respeto y cuidar su seguridad.'\n    },\n    {\n      titulo: '10. Prohibición de suplantación de identidad',\n      descripcion: 'Está estrictamente prohibido crear perfiles falsos, impersonar a terceros o utilizar datos que no correspondan.'\n    },\n    {\n      titulo: '11. Uso exclusivo de cuentas institucionales',\n      descripcion: 'Para participar en la plataforma, debes iniciar sesión con tu cuenta institucional Duoc UC. Esto asegura un entorno seguro y controlado.'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:30\n                        \n                    \n\n            \n                \n                    Lista de reglas visibles para el usuario, con título y descripción.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ModalConfirmacionComponent } from '../../shared/modal-confirmacion/modal-confirmacion.component';\nimport { UserService } from '../../core/services/user.service';\n\n/**\n * Componente que muestra las reglas de la comunidad de ConectaDuoc.\n * Obliga al usuario a aceptarlas antes de utilizar la plataforma por primera vez.\n * Si las rechaza, se le cierra la sesión.\n */\n@Component({\n  selector: 'app-reglas-de-la-comunidad',\n  standalone: true,\n  imports: [FormsModule, ModalConfirmacionComponent],\n  templateUrl: './reglas-de-la-comunidad.component.html',\n  styleUrls: ['./reglas-de-la-comunidad.component.scss']\n})\nexport class ReglasDeLaComunidadComponent {\n  private userService = inject(UserService);\n  private router = inject(Router);\n\n  /** Controla la visibilidad del modal de confirmación de rechazo */\n  mostrarModal = false;\n\n  /**\n   * Lista de reglas visibles para el usuario, con título y descripción.\n   */\n  reglas = [\n    {\n      titulo: '1. Respeto ante todo',\n      descripcion: 'No se toleran comentarios ofensivos, discriminatorios, acosadores o violentos. Toda persona debe ser tratada con dignidad y cortesía.'\n    },\n    {\n      titulo: '2. Actividades sin fines de lucro',\n      descripcion: 'ConectaDuoc es un espacio colaborativo. Está prohibida toda oferta o venta comercial dentro de la plataforma.'\n    },\n    {\n      titulo: '3. Contenido adecuado',\n      descripcion: 'Se prohíbe la publicación de material con lenguaje vulgar, violencia gráfica, apología de drogas, apuestas o cualquier contenido ilícito.'\n    },\n    {\n      titulo: '4. Protección de datos personales',\n      descripcion: 'No publiques datos personales tuyos o de terceros sin consentimiento explícito. Esto incluye RUT, correos, teléfonos o direcciones.'\n    },\n    {\n      titulo: '5. Moderación activa',\n      descripcion: 'Los administradores podrán eliminar o editar publicaciones que infrinjan las reglas. Las reincidencias pueden derivar en la suspensión del perfil.'\n    },\n    {\n      titulo: '6. Lenguaje inclusivo y empático',\n      descripcion: 'Fomentamos un lenguaje claro, inclusivo y que promueva el respeto por la diversidad de género, origen y creencias.'\n    },\n    {\n      titulo: '7. Sistema de reportes',\n      descripcion: 'Los usuarios pueden reportar contenido inapropiado mediante el botón correspondiente. Todas las denuncias serán revisadas.'\n    },\n    {\n      titulo: '8. Contenido académico y estudiantil preferente',\n      descripcion: 'Se espera que las publicaciones estén relacionadas con el quehacer estudiantil: ayudantías, actividades culturales, voluntariado, etc.'\n    },\n    {\n      titulo: '9. Responsabilidad en encuentros presenciales',\n      descripcion: 'En caso de concretarse actividades fuera de la plataforma, los usuarios deben ser responsables, actuar con respeto y cuidar su seguridad.'\n    },\n    {\n      titulo: '10. Prohibición de suplantación de identidad',\n      descripcion: 'Está estrictamente prohibido crear perfiles falsos, impersonar a terceros o utilizar datos que no correspondan.'\n    },\n    {\n      titulo: '11. Uso exclusivo de cuentas institucionales',\n      descripcion: 'Para participar en la plataforma, debes iniciar sesión con tu cuenta institucional Duoc UC. Esto asegura un entorno seguro y controlado.'\n    }\n  ];\n\n  /**\n   * Acepta las reglas de la comunidad y actualiza el campo `policies` del usuario a 1.\n   * También se guarda la aceptación en `localStorage` para prevenir múltiples redirecciones.\n   */\n  aceptarReglas() {\n    // Llamamos al backend para marcar \"policies\" como true\n    const email = this.userService.getAzureUser()?.email;\n    if (email) {\n      this.userService.getUser(email).subscribe(user => {\n        const updatedUser = { ...user, policies: 1 };\n        this.userService.registerUser(updatedUser).subscribe(() => {\n          localStorage.setItem('conectaReglasAceptadas', 'true');\n          this.router.navigate(['/dashboard']);\n        });\n      });\n    } else {\n      // Fallback: solo localStorage (en caso de error raro)\n      localStorage.setItem('conectaReglasAceptadas', 'true');\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para rechazar las reglas.\n   */\n  rechazarReglas() {\n    this.mostrarModal = true;\n  }\n\n  /**\n   * Confirma el rechazo de las reglas.\n   * Se marca `policies` como 0, se limpia el localStorage y se redirige al login.\n   */\n  confirmarRechazo() {\n    const email = this.userService.getAzureUser()?.email;\n    if (email) {\n      this.userService.getUser(email).subscribe(user => {\n        const updatedUser = { ...user, policies: 0 };\n        this.userService.registerUser(updatedUser).subscribe(() => {\n          // Ahora sí, limpia el storage y cierra sesión\n          localStorage.removeItem('conectaReglasAceptadas');\n          localStorage.removeItem('userRole');\n          localStorage.removeItem('name');\n          sessionStorage.clear();\n          this.router.navigate(['/login']);\n        });\n      });\n    } else {\n      // Si por algún motivo no hay email, igual cierra sesión\n      localStorage.removeItem('conectaReglasAceptadas');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('name');\n      sessionStorage.clear();\n      this.router.navigate(['/login']);\n    }\n  }\n\n  /**\n   * Cancela el intento de rechazo de las reglas, cerrando el modal.\n   */\n  cancelarRechazo() {\n    this.mostrarModal = false;\n  }\n\n}\n    \n\n    \n        \n  \n    Reglas de la Comunidad\n\n    \n      En ConectaDuoc creemos en una comunidad estudiantil colaborativa, inclusiva y segura. Para\n      garantizar una experiencia positiva para todos los usuarios, te invitamos a respetar los siguientes\n      principios de convivencia. El uso de esta plataforma implica la aceptación de estas reglas.\n    \n\n    @for (item of reglas; track item) {\n      \n        {{ item.titulo }}\n        {{ item.descripcion }}\n      \n    }\n\n    \n      \n        ConectaDuoc es un espacio construido por y para estudiantes. Tu participación responsable y respetuosa\n        nos permite fortalecer una red de apoyo mutuo. ¡Gracias por ser parte de esta comunidad!\n      \n    \n\n    \n      Estoy de acuerdo\n      No estoy de acuerdo\n    \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./reglas-de-la-comunidad.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.reglas-wrapper {\n    background-color: $blanco;\n    color: $negro;\n    flex: 1;\n\n    .reglas-container {\n        max-width: 920px;\n        margin: auto;\n        background-color: $blanco;\n        border-radius: 16px;\n        padding: 3rem 2rem;\n        box-shadow: 0 0 14px rgba(0, 0, 0, 0.06);\n    }\n\n    .titulo {\n        font-size: 2.5rem;\n        font-weight: 700;\n        color: $negro;\n        border-left: 8px solid $amarillo;\n        padding-left: 1rem;\n        margin-bottom: 1.75rem;\n    }\n\n    .intro {\n        font-size: 1.15rem;\n        color: $gris;\n        line-height: 1.7;\n    }\n\n    .regla {\n        margin-bottom: 2rem;\n\n        .regla-titulo {\n            font-weight: 600;\n            color: $negro;\n            font-size: 1.2rem;\n            margin-bottom: 0.5rem;\n        }\n\n        .regla-texto {\n            font-size: 1.05rem;\n            color: $gris;\n            line-height: 1.6;\n        }\n    }\n\n    .final {\n        font-size: 1rem;\n        font-style: italic;\n        color: $gris;\n        text-align: center;\n        margin-top: 3rem;\n    }\n\n    .btn-amarillo {\n        background-color: $amarillo;\n        color: $negro-puro;\n        font-weight: 600;\n        padding: 0.75rem 1.5rem;\n        border: none;\n        border-radius: 12px;\n        transition: background-color 0.3s ease;\n\n        &:hover {\n            background-color: color.adjust($amarillo, $lightness: 7%);\n            cursor: pointer;\n        }\n    }\n\n    .btn-outline-dark {\n        border: 2px solid $negro;\n        color: $negro;\n        font-weight: 500;\n        padding: 0.7rem 1.4rem;\n        border-radius: 12px;\n        background-color: transparent;\n        transition: background-color 0.3s;\n\n        &:hover {\n            background-color: $negro;\n            color: $blanco;\n        }\n    }\n\n    .acciones-botones {\n        display: flex;\n        justify-content: center;\n        gap: 1.5rem; // separación profesional entre botones\n        flex-wrap: wrap;\n        margin-top: 2rem;\n\n        button {\n            min-width: 180px;\n            padding: 0.75rem 1.5rem;\n            font-weight: 600;\n            font-size: 1rem;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n\n        .btn-amarillo {\n            background-color: $amarillo;\n            color: $negro-puro;\n            border: none;\n\n            &:hover {\n                background-color: color.adjust($amarillo, $lightness: -10%);\n            }\n        }\n\n        .btn-outline-dark {\n            background-color: transparent;\n            border: 2px solid $negro;\n            color: $negro;\n\n            &:hover {\n                background-color: $negro;\n                color: $blanco;\n            }\n        }\n    }\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reglas de la Comunidad          En ConectaDuoc creemos en una comunidad estudiantil colaborativa, inclusiva y segura. Para      garantizar una experiencia positiva para todos los usuarios, te invitamos a respetar los siguientes      principios de convivencia. El uso de esta plataforma implica la aceptación de estas reglas.        @for (item of reglas; track item) {              {{ item.titulo }}        {{ item.descripcion }}          }                  ConectaDuoc es un espacio construido por y para estudiantes. Tu participación responsable y respetuosa        nos permite fortalecer una red de apoyo mutuo. ¡Gracias por ser parte de esta comunidad!                    Estoy de acuerdo      No estoy de acuerdo      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReglasDeLaComunidadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un reporte generado por un usuario sobre una publicación o comentario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idPost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idReport\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            post\n                                        \n                                \n                                \n                                        \n                                            reason\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resolucion\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         Comment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha en que se generó el reporte (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idComment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID del comentario reportado (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID de la publicación reportada (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idReport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idReport:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        post\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        post:         Post\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Post\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Razón o motivo del reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolucion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolucion:     \"concedido\" | \"rechazado\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"concedido\" | \"rechazado\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del reporte: 0 = Inactivo, 1 = Activo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Post } from \"./post\";\n\n/**\n * Representa un reporte generado por un usuario sobre una publicación o comentario.\n */\n\nexport interface Report {\n    /** ID único del reporte */\n    idReport?: number;\n\n    /** ID de la publicación reportada (si aplica) */\n    idPost?: number;\n\n    /** ID del comentario reportado (si aplica) */\n    idComment?: number;\n\n    /** Razón o motivo del reporte */\n    reason: string;\n\n    /** Estado del reporte: 0 = Inactivo, 1 = Activo */\n    status: number;\n\n    /** Fecha en que se generó el reporte (ISO string) */\n    createdDate: string;\n\n    idUser: number;\n    post?: Post;\n    comment?: Comment;\n    resolucion?: 'concedido' | 'rechazado';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/report.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar reportes (denuncias) sobre publicaciones\ny comentarios en la plataforma ConectaDuoc.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllReports\n                            \n                            \n                                reportComment\n                            \n                            \n                                reportPost\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllReports\n                        \n                    \n                \n            \n            \n                \ngetAllReports()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los reportes registrados en el sistema.\nGeneralmente usado por el administrador para revisión y gestión.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de objetos Report.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportComment\n                        \n                    \n                \n            \n            \n                \nreportComment(idComment: number, reason: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Envía un reporte sobre un comentario específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario a reportar.\n\n                                            \n                                        \n                                        \n                                                reason\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Motivo del reporte.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el reporte creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportPost\n                        \n                    \n                \n            \n            \n                \nreportPost(idPost: number, reason: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Envía un reporte sobre una publicación específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación a reportar.\n\n                                            \n                                        \n                                        \n                                                reason\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Motivo del reporte.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el reporte creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(idReport: number, status: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado de un reporte (por ejemplo, para marcarlo como revisado).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idReport\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del reporte a modificar.\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo estado (0 = inactivo, 1 = activo).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Reporte actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/report'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:16\n                        \n                    \n\n            \n                \n                    URL base del API para reportes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Report } from '../../models/report';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n/**\n * Servicio encargado de gestionar reportes (denuncias) sobre publicaciones\n * y comentarios en la plataforma ConectaDuoc.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n  /** URL base del API para reportes */\n  private apiUrl = 'http://localhost:9090/api/report';\n  private http = inject(HttpClient);\n  private userService = inject(UserService);\n\n  /**\n   * Envía un reporte sobre una publicación específica.\n   * @param idPost ID de la publicación a reportar.\n   * @param reason Motivo del reporte.\n   * @returns Observable con el reporte creado.\n   */\n  reportPost(idPost: number, reason: string): Observable {\n    const idUser = this.userService.getIdUser();\n\n    const now = new Date();\n    const localDateTime = now.getFullYear() + '-' +\n      String(now.getMonth() + 1).padStart(2, '0') + '-' +\n      String(now.getDate()).padStart(2, '0') + 'T' +\n      String(now.getHours()).padStart(2, '0') + ':' +\n      String(now.getMinutes()).padStart(2, '0') + ':' +\n      String(now.getSeconds()).padStart(2, '0');\n\n    const report: Report = {\n      idPost,\n      reason,\n      status: 1,\n      createdDate: localDateTime,\n      idUser: idUser!\n    };\n\n    return this.http.post(`${this.apiUrl}/publicacion`, report);\n  }\n\n  /**\n   * Envía un reporte sobre un comentario específico.\n   * @param idComment ID del comentario a reportar.\n   * @param reason Motivo del reporte.\n   * @returns Observable con el reporte creado.\n   */\n  reportComment(idComment: number, reason: string): Observable {\n    const idUser = this.userService.getIdUser();\n    const report: Report = {\n      idComment,\n      reason,\n      status: 1,\n      createdDate: new Date().toISOString(),\n      idUser: idUser!\n    };\n    return this.http.post(`${this.apiUrl}/comentario`, report);\n  }\n\n  /**\n   * Obtiene todos los reportes registrados en el sistema.\n   * Generalmente usado por el administrador para revisión y gestión.\n   * @returns Lista de objetos `Report`.\n   */\n  getAllReports(): Observable {\n    return this.http.get(`${this.apiUrl}`);\n  }\n\n  /**\n   * Actualiza el estado de un reporte (por ejemplo, para marcarlo como revisado).\n   * @param idReport ID del reporte a modificar.\n   * @param status Nuevo estado (0 = inactivo, 1 = activo).\n   * @returns Reporte actualizado.\n   */\n  updateStatus(idReport: number, status: number): Observable {\n    return this.http.put(`${this.apiUrl}/${idReport}`, { status });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard de rutas que restringe el acceso según el rol del usuario.\nSe basa en la información almacenada en localStorage por el UserService.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/role.guard.ts:23\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene uno de los roles esperados para acceder a una ruta.\nSi no cumple, redirige a la raíz y niega el acceso.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Snapshot de la ruta actual.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario tiene el rol adecuado, false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { inject, Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n/**\n * Guard de rutas que restringe el acceso según el rol del usuario.\n * Se basa en la información almacenada en `localStorage` por el `UserService`.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  private userService = inject(UserService);\n  private router = inject(Router);\n\n  /**\n   * Verifica si el usuario tiene uno de los roles esperados para acceder a una ruta.\n   * Si no cumple, redirige a la raíz y niega el acceso.\n   *\n   * @param route Snapshot de la ruta actual.\n   * @returns `true` si el usuario tiene el rol adecuado, `false` en caso contrario.\n   */\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const expectedRoles: string[] = route.data['expectedRoles'];\n    const userRole = this.userService.getRole();\n\n    if (!userRole || !expectedRoles.includes(userRole)) {\n      console.warn(`Acceso Denegado. Rol \"${userRole}\" no está autorizado para esta ruta.`);\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/role.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para la gestión de roles de usuario en la aplicación.\nUtiliza localStorage para almacenar y verificar el rol actual.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRole\n                            \n                            \n                                hasRole\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol actual almacenado en localStorage.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                Rol como string (ej: 'admin', 'student') o null si no está definido.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasRole\n                        \n                    \n                \n            \n            \n                \nhasRole(expectedRole: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene el rol esperado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expectedRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Rol que se desea verificar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el rol coincide, false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol actual corresponde a un administrador.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si es 'admin', false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStudent\n                        \n                    \n                \n            \n            \n                \nisStudent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol actual corresponde a un estudiante.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si es 'student', false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Servicio para la gestión de roles de usuario en la aplicación.\n * Utiliza `localStorage` para almacenar y verificar el rol actual.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  /**\n   * Obtiene el rol actual almacenado en `localStorage`.\n   * @returns Rol como string (ej: 'admin', 'student') o `null` si no está definido.\n   */\n  getRole(): string | null {\n    return localStorage.getItem('userRole');\n  }\n\n  /**\n   * Verifica si el usuario tiene el rol esperado.\n   * @param expectedRole Rol que se desea verificar.\n   * @returns `true` si el rol coincide, `false` en caso contrario.\n   */\n  hasRole(expectedRole: string): boolean {\n    const role = this.getRole();\n    return role === expectedRole;\n  }\n\n  /**\n   * Verifica si el rol actual corresponde a un administrador.\n   * @returns `true` si es 'admin', `false` en caso contrario.\n   */\n  isAdmin(): boolean {\n    return this.getRole() === 'admin';\n  }\n\n  /**\n   * Verifica si el rol actual corresponde a un estudiante.\n   * @returns `true` si es 'student', `false` en caso contrario.\n   */\n  isStudent(): boolean {\n    return this.getRole() === 'student';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Score.html":{"url":"interfaces/Score.html","title":"interface - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una puntuación (score) que un usuario otorga a una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación puntuada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que otorgó la puntuación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor de la puntuación (por ejemplo: 1 a 5 estrellas)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/score.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las puntuaciones (scores) de las publicaciones\nen la plataforma ConectaDuoc. Permite registrar, consultar y calcular promedios\nsegún publicaciones y usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAverageScore\n                            \n                            \n                                getResumenScores\n                            \n                            \n                                getUserScore\n                            \n                            \n                                setScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAverageScore\n                        \n                    \n                \n            \n            \n                \ngetAverageScore(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Obtiene el promedio de puntuación de una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Valor promedio (ej: 4.2).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResumenScores\n                        \n                    \n                \n            \n            \n                \ngetResumenScores(idUser: number, idCategoria?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Obtiene un resumen de puntuaciones del usuario, incluyendo promedio general\ny su propia puntuación en cada publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                        \n                                                idCategoria\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (opcional) ID de la categoría a filtrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Arreglo de objetos con ID del post, promedio y puntuación personal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserScore\n                        \n                    \n                \n            \n            \n                \ngetUserScore(idPost: number, idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Obtiene la puntuación que un usuario le dio a una publicación específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Objeto Score o null si el usuario no ha votado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(score: Score)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Registra o actualiza la puntuación de un usuario sobre una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            Score\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Score con los datos a guardar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/score'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/score.service.ts:16\n                        \n                    \n\n            \n                \n                    URL base del API de puntuaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/score.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Score } from '../../models/post';\n\n/**\n * Servicio encargado de gestionar las puntuaciones (scores) de las publicaciones\n * en la plataforma ConectaDuoc. Permite registrar, consultar y calcular promedios\n * según publicaciones y usuarios.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreService {\n  /** URL base del API de puntuaciones */\n  private apiUrl = 'http://localhost:9090/api/score';\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene el promedio de puntuación de una publicación.\n   * @param idPost ID de la publicación.\n   * @returns Valor promedio (ej: 4.2).\n   */\n  getAverageScore(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}/average/${idPost}`);\n  }\n\n  /**\n   * Obtiene la puntuación que un usuario le dio a una publicación específica.\n   * @param idPost ID de la publicación.\n   * @param idUser ID del usuario.\n   * @returns Objeto `Score` o `null` si el usuario no ha votado.\n   */\n  getUserScore(idPost: number, idUser: number): Observable {\n    return this.http.get(`${this.apiUrl}/user/${idUser}/post/${idPost}`);\n  }\n\n  /**\n   * Registra o actualiza la puntuación de un usuario sobre una publicación.\n   * @param score Objeto `Score` con los datos a guardar.\n   */\n  setScore(score: Score): Observable {\n    return this.http.post(`${this.apiUrl}/save`, score);\n  }\n\n  /**\n   * Obtiene un resumen de puntuaciones del usuario, incluyendo promedio general\n   * y su propia puntuación en cada publicación.\n   * @param idUser ID del usuario.\n   * @param idCategoria (opcional) ID de la categoría a filtrar.\n   * @returns Arreglo de objetos con ID del post, promedio y puntuación personal.\n   */\n  getResumenScores(idUser: number, idCategoria?: number): Observable {\n    let url = `${this.apiUrl}/resumen?idUser=${idUser}`;\n    if (idCategoria !== undefined) url += `&idCategoria=${idCategoria}`;\n    return this.http.get(url);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un usuario registrado en la plataforma ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            policies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sede del usuario (ej: Maipú, San Joaquín, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo institucional del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre completo del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policies:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de las reglas comunitarias\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rol del usuario (ej: student, admin)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /** ID único del usuario */\n    idUser?: number;\n    /** Correo institucional del usuario */\n    email: string;\n    /** Nombre completo del usuario */\n    name: string;\n    /** Rol del usuario (ej: student, admin) */\n    role?: string;\n    /** Sede del usuario (ej: Maipú, San Joaquín, etc.) */\n    center: string;\n    /** Estado de las reglas comunitarias */\n    policies: number; // 0 No, 1 Sí\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio responsable de gestionar la información de los usuarios\nen la plataforma ConectaDuoc, incluyendo integración con Azure AD\ny operaciones CRUD sobre la base de datos.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                userName$\n                            \n                            \n                                    Private\n                                userNameSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserExists\n                            \n                            \n                                clearRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getAll\n                            \n                            \n                                getAzureUser\n                            \n                            \n                                getIdUser\n                            \n                            \n                                getName\n                            \n                            \n                                getRole\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                registerUser\n                            \n                            \n                                setIdUser\n                            \n                            \n                                setName\n                            \n                            \n                                setRole\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserExists\n                        \n                    \n                \n            \n            \n                \ncheckUserExists(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Verifica si un usuario con el correo indicado ya está registrado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo institucional del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si existe, false si no.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearRole\n                        \n                    \n                \n            \n            \n                \nclearRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Elimina el rol del usuario desde localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:135\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los usuarios registrados.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAzureUser\n                        \n                    \n                \n            \n            \n                \ngetAzureUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Obtiene los datos del usuario actualmente autenticado mediante Azure AD.\n\n\n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                Objeto con email y nombre completo, o null si no hay sesión activa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdUser\n                        \n                    \n                \n            \n            \n                \ngetIdUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Obtiene el ID del usuario almacenado.\n\n\n                        \n                            Returns :     number | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre del usuario almacenado.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol almacenado en localStorage.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario completo desde la base de datos según el correo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Obtiene un usuario desde la base de datos por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID numérico del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario en la base de datos.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de tipo User con los datos del nuevo usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdUser\n                        \n                    \n                \n            \n            \n                \nsetIdUser(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Guarda el ID del usuario autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID numérico del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setName\n                        \n                    \n                \n            \n            \n                \nsetName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Guarda el nombre del usuario para mostrarlo en la interfaz.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre completo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRole\n                        \n                    \n                \n            \n            \n                \nsetRole(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Guarda el rol del usuario en localStorage para uso en frontend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Rol del usuario (ej: \"admin\", \"student\").\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(email: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:144\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevos datos del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/usuarios'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    URL base del API de usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userNameSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userNameSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../models/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio responsable de gestionar la información de los usuarios\n * en la plataforma ConectaDuoc, incluyendo integración con Azure AD\n * y operaciones CRUD sobre la base de datos.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  /** URL base del API de usuarios */\n  private apiUrl = 'http://localhost:9090/api/usuarios';\n  //private apiUrl = 'https://yr3rp1l7fd.execute-api.us-east-1.amazonaws.com/api/usuarios';\n  private msalService = inject(MsalService);\n  private http = inject(HttpClient);\n\n  private userNameSubject = new BehaviorSubject(null);\n  userName$ = this.userNameSubject.asObservable();\n\n  constructor() {\n    const account = this.msalService.instance.getActiveAccount();\n    const localName = localStorage.getItem('nombreUsuario');\n\n    if (account && !localName) {\n      const fullName = account.name || account.username || 'Desconocido';\n      this.setName(fullName); // guarda en BehaviorSubject + localStorage\n    } else if (localName) {\n      this.userNameSubject.next(localName); // sincroniza el observable\n    }\n  }\n\n  /**\n   * Obtiene los datos del usuario actualmente autenticado mediante Azure AD.\n   * @returns Objeto con email y nombre completo, o `null` si no hay sesión activa.\n   */\n  getAzureUser(): { email: string; fullName: string } | null {\n    const account = this.msalService.instance.getActiveAccount();\n    if (!account) return null;\n    return {\n      email: account.username,\n      fullName: account.name || ''\n    };\n  }\n\n  /**\n   * Verifica si un usuario con el correo indicado ya está registrado.\n   * @param email Correo institucional del usuario.\n   * @returns `true` si existe, `false` si no.\n   */\n  checkUserExists(email: string): Observable {\n    const encodedEmail = encodeURIComponent(email);\n    return this.http.get(`${this.apiUrl}/exists/${encodedEmail}`);\n  }\n\n  /**\n   * Registra un nuevo usuario en la base de datos.\n   * @param user Objeto de tipo `User` con los datos del nuevo usuario.\n   */\n  registerUser(user: User): Observable {\n    return this.http.post(this.apiUrl, user);\n  }\n\n  /**\n   * Obtiene el usuario completo desde la base de datos según el correo.\n   * @param email Correo del usuario.\n   */\n  getUser(email: string): Observable {\n    return this.http.get(`${this.apiUrl}/${email}`);\n  }\n\n  /**\n   * Guarda el rol del usuario en `localStorage` para uso en frontend.\n   * @param role Rol del usuario (ej: \"admin\", \"student\").\n   */\n  setRole(role: string) {\n    localStorage.setItem('userRole', role);\n  }\n\n  /** Obtiene el rol almacenado en `localStorage`. */\n  getRole(): string | null {\n    return localStorage.getItem('userRole');\n  }\n\n  /** Elimina el rol del usuario desde `localStorage`. */\n  clearRole() {\n    localStorage.removeItem('userRole');\n  }\n\n  /**\n   * Guarda el nombre del usuario para mostrarlo en la interfaz.\n   * @param name Nombre completo del usuario.\n   */\n  setName(name: string) {\n    this.userNameSubject.next(name);\n    localStorage.setItem('nombreUsuario', name);\n  }\n\n  /** Obtiene el nombre del usuario almacenado. */\n  getName(): string | null {\n    return localStorage.getItem('nombreUsuario');\n  }\n\n  /**\n   * Guarda el ID del usuario autenticado.\n   * @param idUser ID numérico del usuario.\n   */\n  setIdUser(idUser: number) {\n    localStorage.setItem('idUser', idUser.toString());\n  }\n\n  /** Obtiene el ID del usuario almacenado. */\n  getIdUser(): number | null {\n    const raw = localStorage.getItem('idUser');\n    return raw ? Number(raw) : null;\n  }\n\n  /**\n   * Obtiene un usuario desde la base de datos por su ID.\n   * @param idUser ID numérico del usuario.\n   */\n  getUserById(idUser: number): Observable {\n    return this.http.get(`${this.apiUrl}/id/${idUser}`);\n  }\n\n  // ----------------------\n  // Módulo de Configuraciones\n  // ----------------------\n\n  /** Obtiene todos los usuarios registrados. */\n  getAll(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Actualiza los datos de un usuario.\n   * @param id ID del usuario a modificar.\n   * @param user Nuevos datos del usuario.\n   */\n  updateUser(email: string, user: User): Observable {\n    return this.http.put(`${this.apiUrl}/${email}`, user);\n  }\n\n  /**\n   * Elimina un usuario por su ID.\n   * @param id ID del usuario a eliminar.\n   */\n  deleteUser(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsuariosComponent.html":{"url":"components/UsuariosComponent.html","title":"component - UsuariosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsuariosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/usuarios/usuarios.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-usuarios\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                                BreadcrumbComponent\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./usuarios.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./usuarios.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroNombre\n                            \n                            \n                                sedes\n                            \n                            \n                                userForm\n                            \n                            \n                                users\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelarEdicion\n                            \n                            \n                                cargarUsuarios\n                            \n                            \n                                editar\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuariosFiltrados\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarEdicion\n                        \n                    \n                \n            \n            \n                \ncancelarEdicion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarUsuarios\n                        \n                    \n                \n            \n            \n                \ncargarUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuariosFiltrados\n                    \n                \n\n                \n                    \n                        getusuariosFiltrados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:60\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UserService } from '../../../core/services/user.service';\nimport { User } from '../../../models/user';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'app-config-usuarios',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, BreadcrumbComponent, FormsModule],\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n  private fb = inject(FormBuilder);\n  private userService = inject(UserService);\n\n  users: User[] = [];\n  userForm!: FormGroup;\n  editing: User | null = null;\n  filtroNombre: string = '';\n  sedes: string[] = [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ];\n\n  ngOnInit(): void {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      role: ['student', Validators.required],\n      center: ['', Validators.required]\n    });\n\n    this.cargarUsuarios();\n  }\n\n  get usuariosFiltrados(): User[] {\n    if (!this.filtroNombre.trim()) return this.users;\n    const filtro = this.filtroNombre.toLowerCase();\n    return this.users.filter(u => u.name?.toLowerCase().includes(filtro));\n  }\n\n  cargarUsuarios(): void {\n    this.userService.getAll().subscribe(users => (this.users = users));\n  }\n\n  editar(user: User): void {\n    this.editing = { ...user };\n    this.userForm.patchValue(this.editing);\n  }\n\n  cancelarEdicion(): void {\n    this.editing = null;\n    this.userForm.reset({ role: 'student' });\n  }\n\n  guardar(): void {\n    if (this.userForm.invalid || !this.editing?.idUser) return;\n\n    const datos = {\n      ...this.userForm.value,\n      policies: 1\n    };\n\n    this.userService.updateUser(this.editing.email, datos).subscribe(() => {\n      this.userService.setName(datos.name);\n      this.cargarUsuarios();\n      this.cancelarEdicion();\n    });\n  }\n\n  /*   \n  eliminar(user: User): void {\n      if (!user.idUser) return;\n      if (!confirm('¿Eliminar usuario?')) return;\n      this.userService.deleteUser(user.idUser).subscribe(() => {\n        this.cargarUsuarios();\n      });\n    } \n    */\n}\n    \n\n    \n        \n    \n    Usuarios\n    Administra los usuarios de la plataforma\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Admin\n                    Student\n                \n            \n            \n                \n                    Selecciona sede\n                    {{ sede }}\n                \n            \n            \n                Actualizar\n                Cancelar\n            \n        \n    \n\n    \n    \n        \n    \n\n    \n        \n            \n                \n                    Email\n                    Nombre\n                    Rol\n                    Sede\n                    Editar\n                \n            \n            \n                \n                    {{ u.email }}\n                    {{ u.name }}\n                    {{ u.role }}\n                    {{ u.center }}\n                    \n                        \n                         -->\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./usuarios.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Usuarios    Administra los usuarios de la plataforma                                                                                                                                            Admin                    Student                                                                            Selecciona sede                    {{ sede }}                                                        Actualizar                Cancelar                                                                                                        Email                    Nombre                    Rol                    Sede                    Editar                                                                            {{ u.email }}                    {{ u.name }}                    {{ u.role }}                    {{ u.center }}                                                                     -->                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsuariosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            reglasAceptadasGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/components/categorias/categorias.component.ts\n            \n            component\n            CategoriasComponent\n            \n                60 %\n                (17/28)\n            \n        \n        \n            \n                \n                src/app/components/categorias/detalle/detalle.component.ts\n            \n            component\n            DetalleComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/categorias-admin/categorias-admin.component.ts\n            \n            component\n            CategoriasAdminComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/configuracion.component.ts\n            \n            component\n            ConfiguracionComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/notificaciones/notificaciones.component.ts\n            \n            component\n            NotificacionesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/usuarios/usuarios.component.ts\n            \n            component\n            UsuariosComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/components/notificacion-banner/notificacion-banner.component.ts\n            \n            component\n            NotificacionBannerComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                75 %\n                (18/24)\n            \n        \n        \n            \n                \n                src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts\n            \n            component\n            PublicacionesReportadasComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts\n            \n            component\n            ReglasDeLaComunidadComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/services/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/notificacion.service.ts\n            \n            injectable\n            NotificacionService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/post-category.service.ts\n            \n            injectable\n            PostCategoryService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/post.service.ts\n            \n            injectable\n            PostService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/report.service.ts\n            \n            injectable\n            ReportService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                src/app/models/notificacionGlobal.ts\n            \n            interface\n            NotificacionGlobal\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Comment\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Post\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            PostView\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Score\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/postCategory.ts\n            \n            interface\n            PostCategory\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/report.ts\n            \n            interface\n            Report\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/modal-confirmacion/modal-confirmacion.component.ts\n            \n            component\n            ModalConfirmacionComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.0.4\n        \n            @angular/common : ^20.0.4\n        \n            @angular/compiler : ^20.0.4\n        \n            @angular/core : ^20.0.4\n        \n            @angular/forms : ^20.0.4\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.4\n        \n            @angular/platform-browser-dynamic : ^20.0.4\n        \n            @angular/router : ^20.0.4\n        \n            @azure/msal-angular : ^4.0.12\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nConectaDuoc\nThis project was generated using Angular CLI version 19.0.6.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            reglasAceptadasGuard   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Configura la detección de cambios de Angular utilizando zonas.\n     * - `eventCoalescing: true`: Optimiza los eventos de cambio para evitar múltiples detecciones innecesarias.\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n\n    /**\n     * Proporciona las rutas definidas en el archivo `app.routes.ts` al enrutador global.\n     */\n    provideRouter(routes),\n\n    /**\n     * Establece el idioma global de Angular para fechas y localización.\n     */\n    { provide: LOCALE_ID, useValue: 'es-CL' }\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración principal de la aplicación Angular.\nEste archivo define los proveedores globales necesarios para el correcto funcionamiento de la aplicación,\ncomo el enrutador y la detección de cambios optimizada con zonas.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reglasAceptadasGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n    const router = inject(Router);\n    const aceptadas = localStorage.getItem('conectaReglasAceptadas') === 'true';\n\n    if (!aceptadas) {\n        router.navigate(['/reglas-de-la-comunidad']);\n        return false;\n    }\n\n    return true;\n}\n                    \n                \n\n            \n                \n                    Guard personalizado que verifica si el usuario ha aceptado las reglas de la comunidad.\nSi no lo ha hecho, redirige a la ruta /reglas-de-la-comunidad.\nSe usa en conjunto con AuthGuard para rutas protegidas.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
