var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.136,1,0.778]],["body/components/AppComponent.html",[0,0.21,1,1.295,2,1.054,3,0.188,4,0.161,5,0.871,6,0.871,7,0.871,8,0.161,9,2.882,10,0.258,11,1.195,12,3.956,13,0.276,14,0.276,15,3.526,16,1.195,17,2.441,18,3,19,0.621,20,5.265,21,0.931,22,4.186,23,2.43,24,2.869,25,2.869,26,3.108,27,0.871,28,1.804,29,1.804,30,1.851,31,1.195,32,5.323,33,1.295,34,1.295,35,1.195,36,4.661,37,3.145,38,4.661,39,0.188,40,0.336,41,6.005,42,6.005,43,1.219,44,3.91,45,2.134,46,2.59,47,0.808,48,4.661,49,3.592,50,0.953,51,4.661,52,4.661,53,0.931,54,3.145,55,2.268,56,0.9,57,3.145,58,5.393,59,2.631,60,4.661,61,4.186,62,3.395,63,1.439,64,5.729,65,3.866,66,5.729,67,1.977,68,0.556,69,4.661,70,2.268,71,3.145,72,3.956,73,1.736,74,4.661,75,3,76,4.661,77,1.531,78,0.818,79,0.025,80,0.63,81,0.296,82,0.72,83,3.526,84,0.808,85,0.969,86,1.041,87,1.137,88,4.863,89,1.214,90,1.295,91,4.293,92,2.788,93,3.395,94,3.145,95,3.395,96,0.993,97,3.145,98,1.531,99,1.736,100,3.395,101,2.638,102,3.145,103,2.638,104,3.956,105,1.353,106,3.956,107,0.368,108,3.492,109,2.441,110,3.395,111,1.851,112,0.711,113,0.72,114,0.402,115,4.661,116,0.926,117,3.395,118,3.395,119,3.395,120,1.348,121,0.188,122,0.436,123,3.395,124,3.395,125,3.395,126,3.395,127,2.544,128,1.123,129,3.395,130,3.395,131,3.395,132,3.395,133,3.395,134,1.439,135,3.395,136,3.395,137,0.818,138,4.661,139,0.72,140,0.871,141,1.195,142,1.195,143,0.871,144,1.469,145,0.871,146,0.871,147,0.767,148,0.871,149,0.767,150,1.195,151,1.195,152,0.767,153,0.767,154,0.871,155,0.767,156,0.871,157,0.767,158,0.871,159,0.871,160,0.767,161,0.871,162,0.767,163,0.871,164,0.767,165,0.871,166,0.871,167,0.871,168,0.767,169,0.871,170,0.871,171,0.767,172,0.871,173,0.767,174,0.871,175,0.818,176,0.588,177,0.871,178,0.767,179,0.871,180,0.767,181,0.72,182,0.871,183,0.767,184,0.674,185,0.818,186,0.871,187,0.016,188,0.016]],["title/guards/AuthGuard.html",[189,1.948,190,2.322]],["body/guards/AuthGuard.html",[3,0.237,4,0.203,8,0.203,10,0.237,13,0.278,14,0.256,21,0.816,26,2.466,30,1.701,39,0.237,40,0.308,43,1.166,45,2.223,47,0.942,50,0.643,56,0.936,59,2.808,68,0.625,70,2.905,79,0.025,84,0.942,87,1.185,89,1.403,90,1.465,96,0.942,99,1.595,101,2.424,102,3.667,112,0.706,113,0.908,114,0.507,116,1.169,121,0.237,122,0.551,128,1.032,134,1.843,139,1.152,187,0.018,188,0.018,189,3.379,190,3.667,191,2.89,192,3.635,193,5.97,194,3.667,195,4.237,196,4.029,197,5.435,198,5.435,199,5.435,200,4.613,201,0.767,202,1.109,203,5.435,204,0.972,205,3.522,206,1.394,207,3.345,208,3.345,209,4.613,210,6.279,211,5.329,212,4.029,213,5.62,214,4.283,215,2.846,216,3.667,217,5.435,218,3.076,219,2.494,220,3.748,221,3.667,222,4.072,223,3.126,224,1.246,225,3.288,226,5.435,227,1.309,228,2.636,229,2.084,230,1.816,231,1.407,232,4.283,233,2.89,234,3.667,235,3.209,236,2.89,237,4.283,238,4.283,239,3.635,240,4.283,241,2.424,242,3.635,243,3.635,244,3.635,245,3.209,246,3.209]],["title/components/BreadcrumbComponent.html",[0,0.136,147,0.778]],["body/components/BreadcrumbComponent.html",[0,0.2,1,0.696,2,0.985,3,0.17,4,0.146,5,0.79,6,0.79,7,0.79,8,0.146,10,0.241,11,1.409,13,0.271,14,0.271,19,0.472,21,0.964,23,1.847,25,2.681,26,2.492,27,0.79,28,1.786,29,1.796,31,1.117,33,0.696,34,0.696,35,1.117,39,0.28,40,0.314,43,1.193,44,3.11,45,2.046,47,0.755,50,0.87,53,0.824,55,2.673,56,0.906,59,1.847,61,2.079,65,2.94,68,0.539,70,2.82,75,2.281,77,1.805,78,0.742,79,0.025,80,0.598,81,0.321,82,0.653,84,0.876,85,0.816,86,0.876,87,0.865,89,0.923,90,0.985,92,2.82,94,2.94,96,0.952,97,2.94,99,1.623,101,2.466,105,1.265,107,0.671,112,0.515,113,0.653,114,0.365,116,0.841,121,0.17,122,0.396,128,1.323,137,0.742,139,0.923,140,0.79,141,1.117,142,1.117,143,0.79,144,1.409,145,0.79,146,0.79,147,1.242,148,0.79,149,0.696,150,1.117,151,1.117,152,0.696,153,0.696,154,0.79,155,0.696,156,0.79,157,0.696,158,0.79,159,0.79,160,0.696,161,0.79,162,0.696,163,0.79,164,0.696,165,0.79,166,0.79,167,0.79,168,0.696,169,0.79,170,0.79,171,0.696,172,0.79,173,0.696,174,0.79,175,0.742,176,0.534,177,0.79,178,0.696,179,0.79,180,0.696,181,0.653,182,0.79,183,0.696,184,0.612,185,0.742,186,0.79,187,0.015,188,0.015,201,0.56,202,0.703,216,2.94,224,1.228,225,2.646,231,1.431,247,1.431,248,2.615,249,1.847,250,4.356,251,4.525,252,3.698,253,2.866,254,4.356,255,4.356,256,1.431,257,4.356,258,2.281,259,1.623,260,3.264,261,4.356,262,1.882,263,1.265,264,2.459,265,1.431,266,5.054,267,4.356,268,3.567,269,2.046,270,4.356,271,3.081,272,4.356,273,4.356,274,5.493,275,0.712,276,1.847,277,4.356,278,1.847,279,3.911,280,3.786,281,3.786,282,4.356,283,3.698,284,1.431,285,4.356,286,3.081,287,3.264,288,1.254,289,4.356,290,2.877,291,3.698,292,2.94,293,4.356,294,3.698,295,4.356,296,3.698,297,2.615,298,3.081,299,2.681,300,4.356,301,4.356,302,3.911,303,2.94,304,5.796,305,2.94,306,3.264,307,3.698,308,4.356,309,4.356,310,3.081,311,3.081,312,3.698,313,3.081,314,3.081,315,3.081,316,3.081,317,5.054,318,3.081,319,3.081,320,5.054,321,3.081,322,4.356,323,3.081,324,0.742,325,3.081,326,3.081,327,1.896,328,2.308,329,3.081,330,3.081,331,3.081,332,2.615,333,2.308,334,2.615,335,2.308,336,3.698,337,3.264,338,2.615,339,3.264,340,3.264,341,3.081,342,3.081,343,3.081,344,3.911,345,2.466,346,4.733,347,5.493,348,5.493,349,1.345,350,1.012,351,1.896,352,1.431,353,1.805,354,2.94,355,1.224,356,0.79,357,1.431,358,1.012,359,1.896,360,1.148,361,2.281,362,4.356,363,1.398,364,1.307,365,3.081,366,2.615,367,1.398,368,1.077,369,1.499]],["title/components/CategoriasAdminComponent.html",[0,0.136,149,0.778]],["body/components/CategoriasAdminComponent.html",[0,0.187,1,0.617,2,0.903,3,0.151,4,0.129,5,0.7,6,0.7,7,0.7,8,0.129,10,0.287,11,1.024,13,0.259,14,0.254,17,2.092,19,0.564,21,0.952,24,2.458,27,0.7,28,1.762,29,1.762,31,1.024,33,0.617,34,0.617,35,1.024,39,0.151,40,0.288,43,1.072,47,0.692,50,0.985,53,0.599,54,2.695,56,0.882,57,2.695,59,2.204,67,2.204,68,0.569,77,1.312,78,0.962,79,0.025,80,0.654,81,0.367,82,0.847,84,1.034,85,0.893,86,0.958,87,0.793,90,1.175,96,0.9,98,0.897,105,1.508,107,0.433,112,0.706,113,0.579,114,0.323,116,0.745,121,0.151,122,0.351,128,0.962,137,0.962,139,1.101,140,0.7,141,1.024,142,1.024,143,0.7,144,1.332,145,0.7,146,0.7,147,1.175,148,0.7,149,1.175,150,1.332,151,1.024,152,0.617,153,0.617,154,0.7,155,0.617,156,0.7,157,0.617,158,0.7,159,0.7,160,0.617,161,0.7,162,0.617,163,0.7,164,0.617,165,0.7,166,0.7,167,0.7,168,0.617,169,0.7,170,0.7,171,0.617,172,0.7,173,0.617,174,0.7,175,0.658,176,0.958,177,0.7,178,0.617,179,0.7,180,0.617,181,0.579,182,0.7,183,0.617,184,0.542,185,0.658,186,0.7,187,0.014,188,0.014,201,0.742,204,0.918,219,1.586,231,1.312,247,1.312,259,1.488,262,1.759,263,1.16,264,2.298,265,1.312,269,1.935,275,0.683,284,2.136,290,2.092,324,1.137,328,2.993,349,1.233,350,0.897,352,0.897,353,1.312,356,0.7,357,1.312,358,0.897,360,1.017,368,0.955,369,1.329,370,5.618,371,5.618,372,2.318,373,2.906,374,2.695,375,3.874,376,2.62,377,3.903,378,2.294,379,2.941,380,3.994,381,1.817,382,5.383,383,2.003,384,2.673,385,2.906,386,4.722,387,3.994,388,4.722,389,4.722,390,4.693,391,2.673,392,4.722,393,3.898,394,5.196,395,3.507,396,2.695,397,4.722,398,2.731,399,2.261,400,3.893,401,3.994,402,3.203,403,2.731,404,3.024,405,1.944,406,1.776,407,1.605,408,3.994,409,3.466,410,2.731,411,2.648,412,2.993,413,4.693,414,3.994,415,2.731,416,1.812,417,1.812,418,3.994,419,2.695,420,2.731,421,2.261,422,2.695,423,2.261,424,2.261,425,2.731,426,2.261,427,3.39,428,2.673,429,2.731,430,2.731,431,1.488,432,3.39,433,2.695,434,2.731,435,2.261,436,3.994,437,2.059,438,2.731,439,3.994,440,2.092,441,2.458,442,2.731,443,2.261,444,2.458,445,2.458,446,2.731,447,0.9,448,2.294,449,2.731,450,2.731,451,2.695,452,2.993,453,1.085,454,1.546,455,1.546,456,1.239,457,1.43,458,1.843,459,1.843,460,1.843,461,1.43,462,2.731,463,1.546,464,2.673,465,3.187,466,5.196,467,2.731,468,3.994,469,2.318,470,2.731,471,2.731,472,2.731,473,2.731,474,2.731,475,4.009,476,2.731,477,3.994,478,2.731,479,2.731,480,2.731,481,2.318,482,2.731,483,2.731,484,2.318,485,2.731,486,2.695,487,4.411,488,2.695,489,1.586,490,3.994,491,3.994,492,3.994,493,1.017,494,1.017,495,0.955,496,1.43,497,1.546,498,0.897,499,1.158,500,1.681,501,1.017,502,1.681,503,1.085,504,1.43,505,1.158,506,1.681,507,1.43,508,0.955,509,1.017,510,1.239]],["title/components/CategoriasComponent.html",[0,0.136,152,0.778]],["body/components/CategoriasComponent.html",[0,0.141,1,0.394,2,0.639,3,0.096,4,0.083,5,0.447,6,0.447,7,0.447,8,0.083,10,0.226,11,0.725,13,0.273,14,0.259,16,0.725,17,2.522,18,1.48,19,0.634,21,0.952,25,1.739,26,1.282,27,0.447,28,1.65,29,1.65,31,0.725,33,0.394,34,0.394,35,0.725,39,0.197,40,0.203,43,1.231,44,2.192,45,1.525,46,1.375,47,0.49,50,0.999,53,0.723,56,0.889,61,1.177,67,1.737,68,0.533,70,1.375,73,1.053,75,1.48,77,1.842,78,0.858,79,0.025,80,0.532,81,0.378,82,0.755,84,0.946,85,1.024,86,1.099,87,0.893,89,0.599,90,0.394,92,0.849,94,1.907,96,1.07,97,1.907,98,0.928,99,1.053,103,1.599,105,1.189,107,0.592,111,1.122,112,0.692,113,0.37,114,0.206,116,0.476,121,0.096,122,0.224,127,1.307,128,1.272,134,1.265,137,0.986,139,1.156,140,0.447,141,0.725,142,0.725,143,0.447,144,1.05,145,0.447,146,0.447,147,0.926,148,0.447,149,0.394,150,0.725,151,0.725,152,0.926,153,0.394,154,0.447,155,0.394,156,0.447,157,0.394,158,0.447,159,0.447,160,0.394,161,0.447,162,0.394,163,0.447,164,0.394,165,0.447,166,0.447,167,0.447,168,0.926,169,0.725,170,0.447,171,0.394,172,0.447,173,0.394,174,0.447,175,0.42,176,1.158,177,0.447,178,0.394,179,0.447,180,0.394,181,0.37,182,0.447,183,0.394,184,0.893,185,0.42,186,0.447,187,0.01,188,0.01,201,0.679,202,0.726,204,0.905,206,1.47,224,0.813,231,0.928,247,0.928,251,1.177,253,1.858,258,1.48,262,1.327,263,0.82,264,1.733,265,0.928,269,1.525,275,0.692,280,3.371,284,1.92,287,2.117,288,0.813,290,3.002,291,2.399,292,3.682,294,2.399,302,1.177,306,2.117,324,1.084,333,3.608,349,0.873,350,0.573,351,1.074,352,1.345,353,1.478,355,1.626,356,1.546,357,1.345,358,0.928,360,0.65,361,2.356,364,0.74,367,0.791,368,0.988,375,1.599,376,1.616,379,1.599,382,2.399,383,1.51,384,2.016,385,2.192,391,2.016,393,1.907,396,1.907,402,2.857,404,2.144,405,1.375,406,1.75,407,1.265,411,2.425,416,1.282,417,1.858,424,2.87,426,1.599,428,2.016,432,2.399,433,1.907,435,1.599,437,1.525,441,1.739,444,1.739,445,1.739,447,1.013,448,1.415,451,1.907,452,2.117,453,0.693,454,0.987,455,0.987,456,0.791,457,2.144,458,1.177,459,1.177,461,0.914,463,0.987,464,1.599,488,1.907,489,1.122,493,0.65,494,1.327,495,0.61,496,2.356,497,2.016,498,1.17,501,1.053,503,1.122,504,1.865,505,1.198,508,1.773,509,1.794,510,1.282,511,1.481,512,2.117,513,2.826,514,2.404,515,2.522,516,1.907,517,3.562,518,2.826,519,3.562,520,3.562,521,3.562,522,2.763,523,3.023,524,3.562,525,5.071,526,5.071,527,3.562,528,2.318,529,3.562,530,2.52,531,2.318,532,1.345,533,3.476,534,3.476,535,4.095,536,2.399,537,2.399,538,4.095,539,3.562,540,2.826,541,2.136,542,2.765,543,0.954,544,1.744,545,2.763,546,3.068,547,1.616,548,2.235,549,1.375,550,2.763,551,2.399,552,3.476,553,1.858,554,1.744,555,2.399,556,4.095,557,2.117,558,2.117,559,1.744,560,1.907,561,4.095,562,2.117,563,2.117,564,1.744,565,2.117,566,2.826,567,1.744,568,2.399,569,1.51,570,2.669,571,1.907,572,2.399,573,1.744,574,2.399,575,2.826,576,2.826,577,2.826,578,2.399,579,2.826,580,2.399,581,2.826,582,1.907,583,1.744,584,1.198,585,2.826,586,2.826,587,1.744,588,1.084,589,1.744,590,1.744,591,1.599,592,1.744,593,2.826,594,1.744,595,1.744,596,1.744,597,4.816,598,2.399,599,1.744,600,1.739,601,1.744,602,1.744,603,2.826,604,1.744,605,2.117,606,1.744,607,1.744,608,2.399,609,1.744,610,2.399,611,1.744,612,1.907,613,0.873,614,1.907,615,1.599,616,1.744,617,1.744,618,2.117,619,1.744,620,2.826,621,2.399,622,2.117,623,1.907,624,1.744,625,2.399,626,1.122,627,1.744,628,1.739,629,1.744,630,1.744,631,2.399,632,1.074,633,1.074,634,1.307,635,1.307,636,0.987,637,1.307,638,1.307,639,0.791,640,1.481,641,1.307,642,1.744,643,3.562,644,1.481,645,1.744,646,1.744,647,1.481,648,1.744,649,1.481,650,1.177,651,4.499,652,1.744,653,1.744,654,2.826,655,1.744,656,2.826,657,2.399,658,1.744,659,2.826,660,1.481,661,1.744,662,1.282,663,1.744,664,1.481,665,1.744,666,1.744,667,1.744,668,1.481,669,2.032,670,2.669,671,1.744,672,1.744,673,1.744,674,1.744,675,1.744,676,1.744,677,1.744,678,1.744,679,1.744,680,1.744,681,1.744,682,1.744,683,4.095,684,2.826,685,1.744,686,1.744,687,1.744,688,0.914,689,1.744,690,1.744,691,0.914,692,0.849,693,1.481,694,1.744,695,1.074,696,1.744,697,1.177,698,1.744,699,1.074,700,2.399,701,1.307,702,1.744,703,4.499,704,1.907,705,1.481,706,1.744,707,1.481,708,1.481,709,1.307,710,1.481,711,1.481,712,1.481,713,1.481,714,1.481,715,1.481,716,1.481,717,1.481,718,1.481,719,0.693,720,1.744,721,1.744,722,1.744,723,1.744,724,1.481,725,2.399,726,2.826,727,4.095,728,2.826,729,2.826,730,2.826,731,2.826,732,2.826,733,2.765,734,1.907,735,2.144,736,2.826,737,2.826,738,2.826,739,2.826,740,2.826,741,2.117,742,2.399,743,2.826,744,4.095,745,2.117,746,1.48,747,1.739,748,2.399,749,2.399,750,2.826,751,2.826,752,1.307,753,2.826,754,2.399,755,2.399,756,2.826,757,2.826,758,1.307,759,1.307,760,1.481,761,1.744,762,2.042,763,1.744,764,1.481,765,0.987,766,1.51,767,1.51,768,1.307,769,1.733,770,1.744,771,1.375,772,1.481,773,1.074,774,2.117,775,2.826,776,1.599,777,1.481,778,1.481,779,0.914,780,1.177,781,0.914,782,1.481,783,1.481,784,2.016,785,1.074,786,0.849,787,1.744,788,1.074,789,1.599,790,1.744,791,1.599,792,0.914,793,1.907,794,1.074,795,0.987,796,1.481,797,1.307,798,1.481,799,1.744,800,1.744,801,1.739,802,2.117,803,0.849,804,1.481,805,1.177,806,1.307,807,1.307,808,1.307]],["title/interfaces/Comment.html",[809,0.939,810,1.561]],["body/interfaces/Comment.html",[3,0.228,4,0.195,8,0.195,10,0.228,13,0.278,14,0.281,19,0.733,39,0.228,40,0.382,46,2.008,68,0.588,79,0.025,81,0.407,90,1.199,107,0.765,111,1.638,121,0.342,187,0.018,188,0.018,201,0.891,202,1.077,204,0.961,275,0.733,288,1.272,324,0.994,411,1.638,435,2.335,447,1.016,498,2.105,515,3.072,541,1.537,542,2.16,543,1.496,547,2.661,548,2.467,553,1.872,569,2.487,588,1.678,669,2.442,691,2.16,692,2.008,719,2.649,809,1.69,810,2.407,811,1.872,812,2.539,813,3.013,814,3.391,815,3.266,816,3.013,817,3.243,818,2.487,819,3.581,820,3.072,821,2.854,822,3.581,823,3.581,824,2.784,825,2.539,826,2.784,827,3.266,828,3.61,829,3.003,830,3.581,831,3.266,832,2.784,833,2.784,834,2.784,835,2.539,836,2.539,837,2.539,838,2.335,839,2.539,840,2.539]],["title/injectables/CommentService.html",[227,0.829,841,2.118]],["body/injectables/CommentService.html",[3,0.211,4,0.181,8,0.181,10,0.346,13,0.268,14,0.2,16,1.295,19,0.721,21,0.758,30,1.518,39,0.211,40,0.363,43,1.192,47,0.875,50,0.964,53,0.902,56,0.836,63,1.559,68,0.539,78,1.448,79,0.025,80,0.711,81,0.397,82,1.274,84,1.135,85,0.815,86,0.875,96,0.875,107,0.652,112,0.711,113,0.81,114,0.452,120,1.518,121,0.211,122,0.491,137,1.506,139,1.274,176,0.875,187,0.017,188,0.017,201,0.649,204,0.902,224,1.002,227,1.216,230,1.621,249,2.141,253,2.29,256,1.659,259,1.88,275,0.711,276,2.141,288,1.275,376,2.29,377,3.107,378,2.388,406,1.466,407,1.857,416,2.29,422,3.407,423,2.857,431,1.88,447,1.042,498,2.054,543,1.426,548,2.246,549,2.457,569,2.55,588,1.601,613,1.559,615,3.844,636,2.163,688,2.644,719,2.005,810,2.914,814,3.415,816,2.457,817,3.363,841,3.107,842,1.734,843,3.244,844,2.96,845,3.274,846,4.285,847,3.782,848,5.048,849,4.285,850,5.048,851,3.815,852,3.822,853,3.701,854,2.857,855,3.407,856,4.285,857,3.407,858,5.048,859,3.273,860,4.285,861,5.048,862,3.822,863,5.048,864,4.285,865,5.048,866,5.048,867,3.822,868,1.765,869,3.782,870,5.048,871,3.822,872,4.285,873,5.048,874,3.822,875,2.644,876,2.857,877,3.822,878,2.644,879,2.857,880,2.857,881,3.107,882,2.001,883,2.001,884,3.822,885,2.352,886,3.822,887,3.822]],["title/components/ConfiguracionComponent.html",[0,0.136,153,0.778]],["body/components/ConfiguracionComponent.html",[0,0.237,1,0.975,2,1.234,3,0.239,4,0.204,5,1.106,6,1.106,7,1.106,8,0.204,10,0.239,11,1.4,13,0.278,14,0.257,19,0.592,21,0.819,24,3.874,27,1.106,28,1.843,29,1.843,31,1.4,33,0.975,34,0.975,35,1.4,37,3.684,53,0.945,55,2.656,79,0.024,80,0.646,87,1.084,112,0.745,114,0.51,116,1.177,121,0.239,122,0.554,140,1.106,141,1.4,142,1.4,143,1.106,144,1.614,145,1.106,146,1.106,147,1.423,148,1.106,149,0.975,150,1.4,151,1.4,152,0.975,153,1.423,154,1.106,155,0.975,156,1.106,157,0.975,158,1.106,159,1.106,160,0.975,161,1.106,162,0.975,163,1.106,164,0.975,165,1.106,166,1.106,167,1.106,168,0.975,169,1.106,170,1.106,171,0.975,172,1.106,173,0.975,174,1.106,175,1.039,176,1.038,177,1.106,178,0.975,179,1.106,180,0.975,181,0.914,182,1.106,183,0.975,184,1.366,185,1.039,186,1.106,187,0.018,188,0.018,263,1.585,264,2.914,276,2.315,278,2.67,307,4.634,373,3.874,374,3.684,375,3.755,381,2.201,383,2.54,453,1.713,461,2.259,486,3.684,612,3.684,613,1.686,759,4.09,868,1.909,888,3.661,889,5.459,890,5.459,891,5.459,892,3.874,893,4.634,894,5.459,895,5.459,896,5.459,897,5.459,898,4.634]],["title/components/DashboardComponent.html",[0,0.136,155,0.778]],["body/components/DashboardComponent.html",[0,0.182,1,0.591,2,0.875,3,0.145,4,0.124,5,0.671,6,0.671,7,0.671,8,0.124,10,0.214,11,1.305,13,0.255,14,0.215,18,2.026,19,0.699,21,1,23,2.158,26,2.464,27,0.671,28,1.752,29,1.752,31,0.992,33,0.591,34,0.591,35,0.992,39,0.145,40,0.279,43,1.196,46,1.273,47,0.671,50,0.907,53,0.581,56,0.708,63,1.195,68,0.563,71,3.435,73,1.441,75,2.026,77,1.271,78,0.63,79,0.025,80,0.545,81,0.345,82,0.554,83,2.381,84,0.798,85,0.918,86,0.986,87,0.914,96,0.882,98,1.271,107,0.691,109,2.026,112,0.696,113,0.554,114,0.309,116,0.714,121,0.145,122,0.336,128,1.109,134,0.808,137,0.63,139,1.151,140,0.671,141,0.992,142,0.992,143,0.671,144,1.305,145,0.671,146,0.671,147,0.591,148,0.671,149,0.591,150,0.992,151,0.992,152,0.591,153,0.591,154,0.671,155,1.15,156,0.671,157,0.591,158,0.671,159,0.671,160,0.591,161,0.671,162,0.591,163,0.671,164,0.591,165,0.671,166,0.671,167,0.671,168,1.15,169,0.992,170,0.671,171,0.591,172,0.671,173,0.591,174,0.671,175,0.63,176,0.798,177,0.671,178,0.591,179,0.671,180,0.591,181,0.554,182,0.671,183,0.591,184,0.519,185,0.63,186,0.671,187,0.013,188,0.013,201,0.497,202,1.013,204,0.581,206,0.992,218,1.48,220,2.19,224,0.768,231,1.271,247,1.271,262,1.715,263,1.123,264,2.241,265,1.271,269,1.896,275,0.715,278,1.641,279,3.838,280,1.96,284,1.271,287,2.899,288,0.768,290,2.665,292,4.349,324,0.63,332,3.284,333,2.899,334,3.284,337,2.899,338,3.284,339,2.899,340,2.899,345,2.19,349,1.195,350,0.859,352,0.859,353,2.027,355,1.039,356,1.458,357,1.513,358,0.859,360,1.715,361,2.978,364,1.109,367,1.187,368,0.915,373,3.343,375,3.553,383,1.953,404,2.665,406,1.871,409,2.026,413,4.611,417,1.756,433,2.611,437,2.25,448,2.021,453,1.039,457,2.665,458,1.765,459,1.765,460,1.765,493,0.974,494,1.441,495,1.61,505,1.109,508,1.353,510,1.187,532,1.672,537,3.284,572,3.284,574,3.284,578,3.284,580,3.284,582,2.611,584,1.641,591,2.19,613,1.195,614,3.666,626,1.537,628,2.381,632,2.381,633,1.61,634,1.96,639,1.187,647,2.22,649,3.284,710,2.22,711,2.22,712,2.22,713,2.22,714,2.22,715,2.22,716,2.22,717,2.22,735,2.665,762,1.641,766,1.641,767,1.953,769,1.883,771,1.273,773,1.61,779,1.37,785,2.834,786,1.273,791,2.881,792,1.37,793,3.666,795,2.607,805,1.765,892,2.381,893,4.611,899,2.22,900,3.869,901,3.869,902,3.164,903,2.19,904,4.605,905,3.869,906,4.827,907,4.605,908,3.075,909,3.45,910,2.615,911,2.026,912,3.132,913,3.869,914,2.611,915,3.622,916,2.615,917,3.869,918,3.869,919,3.869,920,2.615,921,3.813,922,3.869,923,6.62,924,6.62,925,3.869,926,3.284,927,3.284,928,3.869,929,3.869,930,3.869,931,3.869,932,3.869,933,3.869,934,3.869,935,3.869,936,3.869,937,3.869,938,3.869,939,3.869,940,2.615,941,3.869,942,3.869,943,3.869,944,2.615,945,3.132,946,2.615,947,2.026,948,2.19,949,2.615,950,2.615,951,3.869,952,2.22,953,1.96,954,2.22,955,1.61,956,1.96,957,3.869,958,2.22,959,2.22,960,2.615,961,2.615,962,2.615,963,2.615,964,2.615,965,2.615,966,2.615,967,3.869,968,3.869,969,3.869,970,3.869,971,3.284,972,3.284,973,3.869,974,3.869,975,3.869,976,3.869,977,3.869,978,2.899,979,2.615,980,1.48,981,2.615,982,2.615,983,1.48,984,2.899,985,2.615,986,2.22,987,2.615,988,2.615,989,2.615,990,2.22,991,2.615,992,1.96,993,3.869,994,2.615,995,1.96,996,1.96,997,2.899,998,2.615,999,1.96,1000,2.615,1001,2.22,1002,1.96]],["title/components/DetalleComponent.html",[0,0.136,157,0.778]],["body/components/DetalleComponent.html",[0,0.15,1,0.435,2,0.69,3,0.169,4,0.091,5,0.493,6,0.493,7,0.493,8,0.091,10,0.21,11,1.11,13,0.251,14,0.247,16,0.493,17,1.6,19,0.695,21,0.846,22,2.061,26,1.386,27,0.493,28,1.677,29,1.677,31,0.783,33,0.435,34,0.435,35,0.783,39,0.106,40,0.22,43,1.233,44,2.339,45,1.613,47,0.529,50,0.992,53,0.458,55,1.486,56,0.877,61,1.297,63,0.943,67,1.295,68,0.538,70,1.486,73,1.138,75,2.267,77,1.652,78,0.736,79,0.025,80,0.512,81,0.358,82,0.647,83,1.183,84,0.872,85,1.008,86,1.081,87,0.938,89,0.647,90,0.69,94,2.061,96,1.092,97,2.061,98,1.004,99,1.138,103,1.729,105,0.887,107,0.331,112,0.71,113,0.407,114,0.227,116,0.525,121,0.106,122,0.247,127,1.44,128,1.27,134,1.459,137,0.736,139,1.118,140,0.493,141,0.783,142,0.783,143,0.493,144,1.11,145,0.493,146,0.493,147,0.979,148,0.493,149,0.435,150,0.783,151,0.783,152,0.435,153,0.435,154,0.493,155,0.435,156,0.493,157,0.979,158,0.493,159,0.493,160,0.435,161,0.493,162,0.435,163,0.493,164,0.435,165,0.493,166,0.493,167,0.493,168,0.979,169,0.783,170,0.493,171,0.435,172,0.493,173,0.435,174,0.493,175,0.463,176,0.977,177,0.493,178,0.435,179,0.493,180,0.435,181,0.407,182,0.493,183,0.435,184,0.382,185,0.463,186,0.493,187,0.01,188,0.01,201,0.743,202,0.933,204,0.755,206,1.29,224,0.859,231,1.004,247,1.004,251,1.297,256,1.004,259,2.038,260,3.768,262,1.416,263,0.887,264,1.85,265,1.004,268,1.183,269,1.613,275,0.361,279,1.297,281,2.289,284,1.971,288,1.147,292,2.061,305,2.922,324,1.211,327,1.88,328,3.244,345,1.729,349,0.943,350,0.632,352,1.733,353,2.001,354,1.297,355,1.876,356,1.656,357,1.937,358,1.652,359,1.183,360,0.716,361,1.6,363,2.143,368,1.652,369,0.935,376,1.386,378,1.213,383,1.612,384,2.151,391,2.151,402,2.267,404,1.6,411,1.213,412,2.289,417,1.386,426,1.729,428,2.151,431,1.138,437,1.76,440,1.6,441,1.88,443,1.729,444,1.88,445,1.88,447,0.75,448,1.213,453,0.763,454,1.088,455,1.088,456,0.872,461,1.007,463,1.088,464,1.088,489,1.213,493,0.716,494,1.138,495,0.672,496,1.6,497,1.088,498,1.423,499,0.815,501,1.138,502,1.183,503,1.509,504,1.99,505,1.612,506,1.183,508,2.182,509,1.964,510,0.872,514,2.061,515,2.267,522,2.061,523,3.226,528,2.451,530,2.665,531,2.451,532,1.423,533,4.645,536,3.675,541,2.369,542,2.267,543,1.066,545,2.061,546,3.244,547,1.386,548,2.098,549,1.486,550,3.804,553,1.964,560,2.061,565,2.289,568,3.675,569,1.836,570,3.244,571,3.394,584,1.295,588,0.736,591,1.729,605,2.289,610,2.593,612,2.061,613,0.943,615,3.532,618,2.289,622,3.244,623,2.061,626,1.213,632,1.183,633,1.183,634,1.44,635,1.44,636,1.088,637,1.44,638,1.44,639,0.872,640,1.632,641,1.44,644,1.632,650,2.061,657,1.632,668,1.632,669,1.873,670,2.289,688,1.6,695,2.339,699,2.339,704,2.922,705,2.593,707,2.593,708,1.632,709,1.44,718,1.632,719,1.213,724,2.593,733,2.267,734,2.061,746,1.6,747,1.88,748,2.593,752,1.44,754,2.593,755,2.593,758,1.44,762,1.295,766,1.612,767,1.612,769,1.486,771,2.107,772,1.632,773,1.183,774,1.44,776,1.088,780,1.297,781,1.99,784,3.097,785,2.665,786,2.107,789,2.151,791,2.847,803,0.935,805,1.297,806,2.289,807,1.44,808,1.44,810,2.282,814,2.964,816,1.486,818,0.815,836,2.908,841,2.665,851,1.297,853,1.88,869,3.244,945,1.88,948,1.729,955,1.183,956,2.848,983,1.088,1003,1.632,1004,4.33,1005,3.055,1006,2.593,1007,2.289,1008,3.801,1009,3.055,1010,3.801,1011,5.472,1012,4.724,1013,4.724,1014,3.801,1015,4.33,1016,3.055,1017,3.055,1018,1.922,1019,1.922,1020,1.922,1021,5.472,1022,2.593,1023,3.055,1024,1.922,1025,2.922,1026,5.03,1027,1.922,1028,1.922,1029,3.055,1030,3.055,1031,1.922,1032,2.289,1033,1.922,1034,2.593,1035,1.922,1036,2.289,1037,2.593,1038,1.922,1039,2.593,1040,1.922,1041,1.922,1042,2.593,1043,1.922,1044,3.055,1045,1.922,1046,1.922,1047,3.055,1048,1.922,1049,3.055,1050,2.289,1051,3.055,1052,3.055,1053,1.922,1054,1.922,1055,1.922,1056,1.922,1057,1.922,1058,1.922,1059,1.922,1060,3.055,1061,1.632,1062,1.922,1063,1.922,1064,1.922,1065,1.922,1066,1.922,1067,4.33,1068,1.922,1069,1.922,1070,1.922,1071,3.055,1072,1.922,1073,1.922,1074,3.055,1075,1.922,1076,1.922,1077,0.815,1078,3.055,1079,1.922,1080,1.922,1081,1.922,1082,4.33,1083,1.922,1084,3.055,1085,1.922,1086,1.922,1087,1.922,1088,1.922,1089,1.922,1090,1.922,1091,1.922,1092,1.922,1093,1.632,1094,1.922,1095,1.922,1096,3.055,1097,3.055,1098,3.055,1099,3.055,1100,3.055,1101,3.055,1102,3.055,1103,3.055,1104,3.055,1105,3.055,1106,3.055,1107,2.593,1108,2.289,1109,2.565,1110,3.055,1111,1.922,1112,1.632,1113,1.632,1114,1.922,1115,1.922,1116,1.922,1117,2.289,1118,1.922,1119,1.632,1120,3.055,1121,1.183,1122,1.183,1123,1.6,1124,1.183,1125,1.922,1126,1.922,1127,1.44,1128,1.632,1129,1.922,1130,1.922,1131,1.922,1132,1.922,1133,1.922,1134,1.922,1135,1.922,1136,1.922,1137,1.922,1138,1.922]],["title/components/FooterComponent.html",[0,0.136,34,0.778]],["body/components/FooterComponent.html",[0,0.23,1,0.917,2,1.186,3,0.224,4,0.192,5,1.04,6,1.04,7,1.04,8,0.192,10,0.224,11,1.346,13,0.276,14,0.252,16,1.346,21,0.788,22,4.152,27,1.04,28,1.833,29,1.833,31,1.346,33,0.917,34,1.391,35,1.346,37,3.542,39,0.224,40,0.378,50,0.609,53,0.788,56,0.73,68,0.552,77,2.021,79,0.024,80,0.621,81,0.258,85,0.655,86,0.703,87,1.042,89,1.112,90,1.186,108,3.932,109,2.748,112,0.621,114,0.48,116,1.107,121,0.224,122,0.521,140,1.04,141,1.346,142,1.346,143,1.04,144,1.578,145,1.04,146,1.04,147,0.917,148,1.04,149,0.917,150,1.346,151,1.346,152,0.917,153,0.917,154,1.04,155,0.917,156,1.04,157,0.917,158,1.04,159,1.04,160,0.917,161,1.04,162,0.917,163,1.04,164,0.917,165,1.04,166,1.04,167,1.04,168,0.917,169,1.04,170,1.04,171,0.917,172,1.04,173,0.917,174,1.04,175,0.977,176,0.703,177,1.04,178,0.917,179,1.04,180,0.917,181,1.233,182,1.04,183,0.917,184,0.805,185,0.977,186,1.04,187,0.018,188,0.018,206,1.346,244,4.455,246,3.932,252,4.455,263,1.524,275,0.621,381,1.835,447,0.91,543,1.112,551,4.455,584,2.226,662,2.381,735,2.748,868,1.835,1006,4.455,1139,3.443,1140,5.249,1141,3.542,1142,6.153,1143,5.249,1144,5.249,1145,4.939,1146,5.249,1147,5.249,1148,5.819,1149,5.249,1150,4.056,1151,5.249,1152,5.9,1153,5.249,1154,6.528,1155,4.455,1156,5.249,1157,5.249,1158,5.249,1159,5.249,1160,5.249,1161,3.932,1162,5.249,1163,5.249,1164,4.455,1165,5.249,1166,5.249,1167,5.249,1168,5.249,1169,5.249,1170,5.249,1171,4.455,1172,4.455,1173,4.455,1174,4.455,1175,5.249,1176,4.455,1177,4.455]],["title/components/ForbiddenComponent.html",[0,0.136,160,0.778]],["body/components/ForbiddenComponent.html",[0,0.244,1,1.038,2,1.283,3,0.254,4,0.217,5,1.178,6,1.178,7,1.178,8,0.217,10,0.254,11,1.456,13,0.244,14,0.181,26,2.576,27,1.178,28,1.852,29,1.852,31,1.178,33,1.038,34,1.038,35,1.456,37,3.831,73,2.115,75,2.973,79,0.024,80,0.672,90,1.283,105,1.648,112,0.543,114,0.543,121,0.254,122,0.59,140,1.178,141,1.456,142,1.456,143,1.178,144,1.651,145,1.178,146,1.178,147,1.038,148,1.178,149,1.038,150,1.456,151,1.456,152,1.038,153,1.038,154,1.178,155,1.038,156,1.178,157,1.038,158,1.178,159,1.178,160,1.455,161,1.178,162,1.038,163,1.178,164,1.038,165,1.178,166,1.178,167,1.178,168,1.038,169,1.178,170,1.178,171,1.038,172,1.178,173,1.038,174,1.178,175,1.106,176,0.796,177,1.178,178,1.038,179,1.178,180,1.038,181,0.973,182,1.178,183,1.038,184,0.912,185,1.106,186,1.178,187,0.019,188,0.019,191,3.831,201,0.73,202,0.917,204,0.852,288,1.127,447,0.796,555,4.819,584,2.408,864,4.819,879,3.213,1178,3.898,1179,4.819,1180,4.819,1181,5.677,1182,4.819,1183,4.254,1184,6.438,1185,5.677,1186,5.677,1187,4.592,1188,4.592,1189,5.677]],["title/components/LoginComponent.html",[0,0.136,162,0.778]],["body/components/LoginComponent.html",[0,0.18,1,0.58,2,0.862,3,0.142,4,0.121,5,0.658,6,0.658,7,0.658,8,0.121,10,0.211,11,0.978,13,0.274,14,0.254,16,0.978,19,0.612,21,0.937,22,1.73,23,2.137,27,0.658,28,1.748,29,1.761,31,0.658,33,0.58,34,0.58,35,0.978,39,0.142,40,0.274,43,1.191,45,1.877,46,2.215,47,0.661,50,0.921,53,0.847,56,0.701,59,1.617,68,0.539,73,1.42,78,0.618,79,0.025,80,0.539,81,0.242,82,0.543,83,1.578,84,0.873,85,0.87,86,0.934,87,0.904,89,1.425,96,0.978,98,1.974,99,1.42,101,2.158,102,3.401,105,1.107,107,0.547,108,3.776,109,2.957,111,1.514,112,0.637,113,0.543,114,0.303,116,0.7,121,0.142,122,0.33,128,0.918,134,1.664,137,0.618,140,0.658,141,0.978,142,0.978,143,0.658,144,1.293,145,0.658,146,0.658,147,0.58,148,0.658,149,0.58,150,0.978,151,0.978,152,0.58,153,0.58,154,0.658,155,0.58,156,0.658,157,0.58,158,0.658,159,0.658,160,0.58,161,0.658,162,1.139,163,0.658,164,0.58,165,0.658,166,0.658,167,0.658,168,0.58,169,0.658,170,0.658,171,0.58,172,0.658,173,0.58,174,0.658,175,0.618,176,0.444,177,0.658,178,0.58,179,0.658,180,0.58,181,0.543,182,0.658,183,0.58,184,0.509,185,0.618,186,0.658,187,0.013,188,0.013,194,2.573,195,2.573,196,4.054,202,1.08,204,0.572,205,3.479,206,1.293,207,3.102,208,3.102,212,3.401,215,2.639,219,1.514,220,2.853,221,3.401,223,3.146,224,1.218,225,2.639,228,1.578,229,1.248,231,1.253,233,2.573,234,3.636,235,1.921,236,4.331,241,1.451,247,1.253,249,1.617,256,1.253,262,1.695,263,1.107,265,1.253,269,1.877,275,0.668,276,1.617,279,2.573,284,1.77,324,0.618,327,1.578,349,1.177,350,0.842,351,1.578,352,2.017,353,2.168,354,1.73,355,2.242,356,1.293,357,1.855,358,1.495,360,1.695,363,1.163,364,1.617,367,2.065,368,1.592,369,1.855,381,1.333,407,1.177,421,2.158,437,0.955,440,1.997,443,2.158,447,0.873,489,1.514,493,1.42,494,1.695,495,1.592,499,1.087,500,1.578,501,1.877,503,1.514,504,1.343,505,1.087,507,1.997,508,1.763,509,1.42,510,1.163,532,1.656,560,2.573,562,2.857,563,2.857,613,1.177,626,1.514,628,2.347,639,1.163,650,1.73,695,3.102,699,3.845,700,4.278,701,2.857,735,1.343,746,1.997,759,1.921,762,2.137,765,2.853,766,1.087,767,1.087,769,1.248,779,2.384,781,1.343,784,1.451,788,1.578,791,2.853,801,1.578,803,1.855,805,1.73,868,1.333,903,1.451,911,2.639,947,1.343,980,1.451,983,1.451,984,1.921,1077,1.93,1127,1.921,1161,2.857,1171,3.236,1172,3.236,1173,3.236,1174,3.236,1176,3.236,1177,3.236,1180,3.236,1190,2.176,1191,2.857,1192,5.04,1193,5.302,1194,4.573,1195,3.236,1196,2.857,1197,5.04,1198,4.552,1199,3.813,1200,5.847,1201,3.813,1202,4.278,1203,3.813,1204,2.564,1205,3.401,1206,3.813,1207,1.997,1208,2.347,1209,2.564,1210,3.236,1211,3.236,1212,3.813,1213,3.813,1214,2.564,1215,2.573,1216,2.573,1217,3.236,1218,2.564,1219,3.236,1220,2.564,1221,3.236,1222,2.564,1223,2.564,1224,2.564,1225,3.236,1226,2.564,1227,1.578,1228,5.387,1229,3.813,1230,2.564,1231,2.564,1232,2.564,1233,2.564,1234,2.564,1235,2.176,1236,2.564,1237,2.564,1238,4.552,1239,2.564,1240,2.564,1241,2.564,1242,2.564,1243,2.857,1244,2.564,1245,2.564,1246,2.176,1247,2.564,1248,2.564,1249,2.564,1250,2.564,1251,2.564,1252,3.813,1253,2.573,1254,2.573,1255,2.564,1256,1.578,1257,1.921,1258,2.564,1259,2.564,1260,3.41,1261,1.73,1262,1.73,1263,2.176,1264,2.564,1265,2.564,1266,1.73,1267,1.73,1268,2.176,1269,2.564,1270,2.564,1271,2.564,1272,2.176,1273,2.564,1274,2.564,1275,2.564]],["title/components/ModalConfirmacionComponent.html",[0,0.136,164,0.778]],["body/components/ModalConfirmacionComponent.html",[0,0.214,1,0.797,2,1.081,3,0.195,4,0.167,5,0.904,6,0.904,7,0.904,8,0.167,10,0.195,11,1.226,13,0.214,14,0.262,18,2.504,19,0.631,27,0.904,28,1.81,29,1.81,31,0.904,33,0.797,34,0.797,35,1.226,39,0.264,50,0.913,56,0.809,68,0.562,73,1.781,79,0.025,80,0.566,81,0.386,85,0.876,86,0.94,87,1.155,89,1.013,90,1.081,92,2.326,107,0.519,111,1.899,112,0.417,114,0.417,121,0.195,122,0.453,134,1.476,140,0.904,141,1.226,142,1.226,143,0.904,144,1.492,145,0.904,146,0.904,147,0.797,148,0.904,149,0.797,150,1.226,151,1.226,152,0.797,153,0.797,154,0.904,155,0.797,156,0.904,157,0.797,158,0.904,159,0.904,160,0.797,161,0.904,162,0.797,163,0.904,164,1.315,165,1.795,166,0.904,167,0.904,168,0.797,169,0.904,170,0.904,171,0.797,172,0.904,173,0.797,174,0.904,175,0.849,176,0.611,177,0.904,178,0.797,179,0.904,180,0.797,181,0.747,182,0.904,183,0.797,184,0.699,185,0.849,186,0.904,187,0.016,188,0.016,201,0.615,202,0.94,205,3.047,218,1.994,247,1.571,263,1.388,265,1.571,268,2.169,278,2.027,288,0.949,303,4.105,349,1.476,350,1.158,352,1.571,353,1.912,355,1.399,356,1.674,357,1.571,358,1.571,361,1.845,367,1.599,378,1.899,393,4.105,399,2.706,419,3.226,447,0.829,493,2.266,494,1.781,495,1.232,496,1.845,498,1.571,499,2.027,501,2.167,503,1.399,505,2.027,508,1.232,509,1.312,584,2.027,600,2.942,662,2.169,733,2.504,762,2.301,765,1.994,766,2.027,767,1.494,769,2.326,771,2.326,776,1.994,779,1.845,782,4.939,789,1.994,797,2.64,801,2.942,802,2.64,803,1.715,879,2.706,948,2.706,984,2.64,1121,3.34,1122,2.942,1123,3.047,1124,2.942,1179,4.939,1254,3.927,1256,2.169,1257,2.64,1276,5.325,1277,4.233,1278,2.991,1279,4.781,1280,6.416,1281,4.066,1282,4.781,1283,4.781,1284,5.426,1285,4.781,1286,4.781,1287,4.33,1288,4.781,1289,3.524,1290,4.781,1291,5.325,1292,5.819,1293,4.939,1294,3.524,1295,4.781,1296,3.524,1297,6.083,1298,3.524,1299,5.819,1300,5.819,1301,3.524,1302,4.058,1303,5.426,1304,3.524,1305,3.524,1306,3.524,1307,2.991,1308,2.64,1309,3.524,1310,3.524,1311,2.991,1312,2.991,1313,4.058,1314,2.64,1315,3.524]],["title/components/NavbarComponent.html",[0,0.136,33,0.778]],["body/components/NavbarComponent.html",[0,0.196,1,0.674,2,0.962,3,0.165,4,0.141,5,0.764,6,0.764,7,0.764,8,0.141,10,0.165,11,1.091,13,0.277,14,0.242,16,1.091,18,2.228,19,0.733,20,4.858,21,0.94,23,1.804,27,0.764,28,1.78,29,1.79,31,1.091,33,1.223,34,0.674,35,1.091,39,0.165,40,0.306,43,1.183,45,2.016,47,0.737,50,0.97,53,0.859,55,2.07,56,0.871,63,1.314,65,2.011,67,2.104,68,0.61,79,0.025,80,0.503,81,0.189,84,0.938,85,0.961,86,1.031,87,0.985,89,0.632,92,1.45,96,1.105,98,1.955,99,1.585,101,2.408,102,2.871,105,1.235,107,0.461,112,0.725,113,0.632,114,0.353,116,1.161,121,0.165,122,0.383,128,0.718,134,1.532,140,0.764,141,1.091,142,1.091,143,0.764,144,1.388,145,0.764,146,0.764,147,0.674,148,0.764,149,0.674,150,1.091,151,1.091,152,0.674,153,0.674,154,0.764,155,0.674,156,0.764,157,0.674,158,0.764,159,0.764,160,0.674,161,0.764,162,0.674,163,0.764,164,1.223,165,1.571,166,0.764,167,0.764,168,0.674,169,0.764,170,0.764,171,0.674,172,0.764,173,0.674,174,0.764,175,0.718,176,0.516,177,0.764,178,0.674,179,0.764,180,0.674,181,0.632,182,0.764,183,0.674,184,0.592,185,0.718,186,0.764,187,0.014,188,0.014,195,2.871,196,4.302,202,1.103,205,3.517,206,1.091,207,3.054,208,3.054,212,2.011,224,1.074,228,1.834,229,1.45,231,1.398,233,2.871,234,3.348,236,2.871,241,1.687,247,1.398,249,1.804,256,1.398,259,1.585,262,1.848,263,1.235,265,1.398,269,2.016,275,0.704,284,1.88,303,2.871,306,3.188,349,1.314,350,0.979,352,1.778,353,2.058,355,1.69,356,0.764,357,1.778,358,1.398,359,1.834,360,1.585,363,1.352,364,1.264,368,1.488,369,2.07,383,2.104,399,2.408,419,3.652,437,2.132,443,2.408,448,2.532,453,1.184,489,1.69,493,1.11,494,1.11,495,1.488,499,1.264,500,1.834,501,1.11,503,1.184,504,1.561,507,1.561,508,1.488,509,1.11,510,1.352,532,1.88,584,2.295,600,2.618,613,1.314,626,1.69,639,1.352,688,1.561,695,1.834,725,2.53,762,1.264,766,1.264,767,1.264,779,2.598,788,1.834,859,2.07,868,1.042,909,4.693,911,2.228,952,2.53,953,2.233,954,2.53,955,1.834,980,1.687,1109,2.011,1145,4.212,1202,4.858,1211,3.611,1215,3.652,1216,2.871,1217,3.611,1235,2.53,1254,4.016,1260,3.188,1261,2.011,1262,2.011,1263,2.53,1266,2.011,1267,2.011,1277,2.011,1316,2.53,1317,4.255,1318,3.611,1319,4.962,1320,4.255,1321,4.962,1322,5.412,1323,5.412,1324,2.98,1325,5.412,1326,2.98,1327,2.98,1328,2.98,1329,2.618,1330,2.98,1331,2.98,1332,2.98,1333,2.98,1334,4.255,1335,2.98,1336,4.255,1337,4.255,1338,2.98,1339,2.53,1340,2.53,1341,2.98,1342,2.233,1343,2.98,1344,2.98,1345,2.98,1346,2.98,1347,2.98,1348,2.98,1349,4.255,1350,2.98,1351,2.98,1352,2.98,1353,4.255,1354,3.611,1355,3.188,1356,2.98,1357,2.98,1358,4.255,1359,2.98,1360,2.98]],["title/components/NotificacionBannerComponent.html",[0,0.136,168,0.778]],["body/components/NotificacionBannerComponent.html",[0,0.193,1,0.653,2,0.94,3,0.16,4,0.137,5,0.74,6,0.74,7,0.74,8,0.137,10,0.16,11,1.368,13,0.25,14,0.257,19,0.674,21,0.8,25,2.56,27,0.74,28,1.773,29,1.773,31,1.067,33,0.653,34,0.653,35,1.067,39,0.23,40,0.299,43,1.093,47,0.721,50,0.964,53,0.8,63,1.284,65,2.807,67,1.764,68,0.557,71,3.6,77,1.994,79,0.025,80,0.492,81,0.339,84,0.924,85,0.951,86,1.02,87,0.968,89,1.131,92,2.751,96,0.98,112,0.669,113,0.612,114,0.342,120,1.147,121,0.16,122,0.371,134,1.505,140,0.74,141,1.067,142,1.067,143,0.74,144,1.368,145,0.74,146,0.74,147,0.653,148,0.74,149,0.653,150,1.067,151,1.067,152,0.653,153,0.653,154,0.74,155,0.653,156,0.74,157,0.653,158,0.74,159,0.74,160,0.653,161,0.74,162,0.653,163,0.74,164,0.653,165,0.74,166,0.74,167,0.74,168,1.206,169,1.647,170,0.74,171,0.653,172,0.74,173,0.653,174,0.74,175,0.695,176,0.5,177,0.74,178,0.653,179,0.74,180,0.653,181,0.612,182,0.74,183,0.653,184,0.968,185,0.695,186,0.74,187,0.014,188,0.014,201,0.535,204,0.624,206,1.067,219,1.652,224,1.169,231,1.366,247,1.366,258,2.178,259,1.549,262,1.816,263,1.207,265,1.366,269,1.987,283,3.53,284,1.994,288,0.826,299,2.56,303,3.6,324,1.285,349,1.284,350,0.949,352,1.366,353,1.935,355,1.147,356,1.622,357,2.11,358,1.602,363,1.887,364,1.225,367,1.31,368,1.705,369,1.405,383,2.067,399,2.354,406,1.207,407,1.284,431,1.816,437,1.987,440,2.178,453,1.147,494,1.076,495,1.454,496,2.553,497,1.634,501,1.549,505,1.225,507,1.512,508,1.705,509,1.076,543,0.612,569,1.225,584,1.764,600,2.56,632,4.081,633,4.002,662,1.887,746,2.178,762,2.262,765,2.354,766,1.225,767,1.225,768,3.116,769,1.405,773,1.777,774,2.163,776,1.634,784,1.634,786,1.405,789,2.354,792,1.512,793,3.6,794,1.777,795,2.354,796,2.451,797,2.163,798,2.451,801,1.777,802,2.163,803,1.405,868,1.454,892,4.081,903,3.019,911,2.178,921,2.163,986,3.53,992,3.116,995,2.163,996,3.116,997,3.996,999,2.163,1001,2.451,1002,3.652,1109,1.949,1210,3.53,1215,2.807,1254,3.6,1256,2.56,1262,1.949,1307,2.451,1361,5.519,1362,2.451,1363,4.159,1364,3.53,1365,4.159,1366,2.56,1367,4.159,1368,4.875,1369,4.875,1370,4.159,1371,4.875,1372,4.875,1373,5.334,1374,5.334,1375,2.888,1376,4.159,1377,5.888,1378,2.888,1379,4.159,1380,3.53,1381,4.159,1382,2.888,1383,4.159,1384,5.334,1385,4.159,1386,2.888,1387,3.53,1388,3.53,1389,3.333,1390,2.888,1391,2.807,1392,2.888,1393,4.159,1394,2.888,1395,2.888,1396,4.159,1397,5.653,1398,2.888,1399,4.159,1400,4.159,1401,4.159,1402,4.159,1403,2.888,1404,4.159,1405,2.163,1406,1.777,1407,2.451,1408,2.888,1409,2.888,1410,2.451,1411,4.875,1412,4.159,1413,2.888,1414,4.159,1415,2.888,1416,2.888,1417,2.888,1418,4.159,1419,2.888,1420,4.159,1421,4.159,1422,4.159,1423,2.888,1424,2.888,1425,4.159,1426,2.888,1427,2.888,1428,2.888,1429,2.888,1430,2.451,1431,4.159,1432,2.451,1433,2.451,1434,2.888,1435,4.159,1436,2.888,1437,2.888,1438,2.888,1439,2.888,1440,2.888,1441,2.888,1442,2.888,1443,2.888,1444,2.888,1445,2.888]],["title/interfaces/NotificacionGlobal.html",[809,0.939,1389,1.948]],["body/interfaces/NotificacionGlobal.html",[3,0.263,4,0.225,8,0.225,10,0.263,13,0.284,14,0.282,18,3.412,19,0.629,39,0.263,40,0.418,53,0.714,56,0.661,79,0.025,81,0.424,92,3.045,105,1.684,107,0.77,111,2.303,121,0.263,184,0.944,187,0.02,188,0.02,204,0.714,225,3.037,258,2.49,381,1.663,493,2.427,543,1.326,569,2.46,582,4.397,588,1.637,809,1.298,811,2.157,813,2.314,818,2.763,820,3.412,821,2.822,868,1.663,898,4.036,912,2.927,1141,3.209,1287,4.586,1389,3.283,1391,4.721,1446,4.036,1447,4.755,1448,5.531,1449,5.531,1450,4.923,1451,5.8]],["title/injectables/NotificacionService.html",[227,0.829,1406,2.118]],["body/injectables/NotificacionService.html",[3,0.22,4,0.188,8,0.188,10,0.338,13,0.277,14,0.241,19,0.662,23,2.198,30,1.58,39,0.22,40,0.373,43,1.07,47,0.898,49,3.891,50,0.975,53,0.778,56,0.903,63,1.886,68,0.465,71,4.122,77,1.703,78,1.389,79,0.025,80,0.682,81,0.388,82,1.222,84,1.146,85,0.643,86,0.69,96,1.058,107,0.432,112,0.723,114,0.471,120,1.58,121,0.22,122,0.512,137,1.389,139,1.295,184,1.029,187,0.018,188,0.018,204,0.917,224,1.029,227,1.249,229,2.522,230,1.688,249,2.198,253,2.352,256,1.703,276,2.198,299,3.759,376,2.352,378,2.426,381,1.813,405,2.522,406,1.885,407,1.601,416,2.352,423,2.934,424,3.585,447,0.898,543,1.222,588,1.564,613,1.601,697,3.498,818,2.198,840,3.19,842,1.805,844,3.019,845,3.463,854,2.934,859,3.299,868,1.813,875,2.715,878,3.198,880,2.934,882,3.198,883,2.084,885,2.449,892,4.209,903,3.457,912,3.19,914,3.498,1141,4.122,1387,5.185,1389,3.796,1391,4.525,1405,2.982,1406,3.19,1452,3.378,1453,6.108,1454,6.108,1455,3.979,1456,5.184,1457,5.184,1458,5.184,1459,5.184,1460,3.979,1461,4.4,1462,3.498,1463,4.4,1464,3.979,1465,3.979,1466,5.184,1467,5.184,1468,3.979,1469,5.184,1470,3.979,1471,2.686,1472,2.982,1473,3.979]],["title/components/NotificacionesComponent.html",[0,0.136,171,0.778]],["body/components/NotificacionesComponent.html",[0,0.176,1,0.557,2,0.836,3,0.136,4,0.116,5,0.631,6,0.631,7,0.631,8,0.116,10,0.273,11,0.949,13,0.266,14,0.248,21,0.741,27,0.631,28,1.739,29,1.739,31,0.949,33,0.557,34,0.557,35,0.949,39,0.136,40,0.266,43,0.983,47,0.641,49,3.334,50,0.928,53,0.555,56,0.904,58,2.09,59,2.359,63,1.525,67,2.095,68,0.592,73,1.378,77,1.827,78,1.07,79,0.025,80,0.627,81,0.336,82,0.942,84,1.029,85,0.597,86,0.641,87,0.981,89,1.258,90,0.836,96,0.641,107,0.658,111,1.469,112,0.658,114,0.291,121,0.136,122,0.316,128,0.891,134,1.142,137,1.19,139,0.942,140,0.631,141,0.949,142,0.949,143,0.631,144,1.267,145,0.631,146,0.631,147,1.117,148,0.631,149,0.557,150,0.949,151,0.949,152,0.557,153,0.557,154,0.631,155,0.557,156,0.631,157,0.557,158,0.631,159,0.631,160,0.557,161,0.631,162,0.557,163,0.631,164,0.557,165,0.631,166,0.631,167,0.631,168,0.557,169,0.949,170,0.631,171,1.117,172,0.631,173,0.557,174,0.631,175,0.593,176,0.427,177,0.631,178,0.557,179,0.631,180,0.557,181,0.522,182,0.631,183,0.557,184,1.051,185,0.593,186,0.631,187,0.013,188,0.013,201,0.475,204,0.891,206,1.267,215,1.937,218,2.094,219,1.962,224,0.734,225,1.937,231,1.215,247,1.215,256,1.623,262,1.655,263,1.074,265,1.215,269,1.84,275,0.732,284,1.74,302,2.496,324,0.593,344,1.662,346,1.845,349,1.142,350,0.809,352,1.895,353,2.063,355,1.962,356,1.632,357,2.09,358,1.995,359,3.04,360,0.917,363,2.402,364,1.044,367,1.117,368,1.554,369,1.198,373,1.515,376,2.887,378,2.209,381,1.294,383,1.884,384,2.515,391,2.796,402,3.289,405,2.404,406,1.615,407,1.717,416,1.678,417,1.678,422,2.496,423,2.094,424,3.265,428,2.515,431,1.378,447,0.641,453,0.978,454,3.148,455,1.394,456,1.117,461,1.289,463,1.394,464,2.796,486,2.496,493,1.378,494,0.917,495,0.861,496,1.289,497,1.394,498,0.809,499,1.044,500,1.515,501,0.917,502,1.515,503,0.978,504,1.289,505,1.044,506,1.515,507,1.289,508,2.272,509,2.072,510,1.117,522,3.334,543,0.942,553,1.117,565,2.771,582,3.334,588,1.34,591,2.094,628,2.277,632,2.277,662,2.241,745,2.771,752,2.771,762,1.044,765,1.394,766,1.884,767,1.884,768,2.771,769,1.8,771,1.8,780,2.496,781,1.937,783,2.09,784,2.997,785,1.515,786,1.198,791,1.394,792,2.327,793,2.496,794,2.277,795,2.094,803,1.8,804,2.09,807,2.771,816,2.577,818,2.799,820,2.587,857,2.496,868,1.294,892,4.206,903,2.796,911,1.937,912,2.277,921,1.845,978,1.845,980,2.094,983,2.515,992,1.845,995,1.845,996,1.845,997,2.771,999,1.845,1002,2.771,1032,3.701,1108,1.845,1117,1.845,1152,3.14,1205,2.496,1287,2.998,1308,2.771,1318,3.14,1389,2.515,1391,4.454,1405,1.845,1406,3.551,1407,2.09,1410,2.09,1432,2.09,1433,2.09,1448,4.193,1449,2.09,1450,3.14,1463,3.14,1474,2.09,1475,3.699,1476,3.14,1477,3.14,1478,4.443,1479,3.699,1480,4.94,1481,4.94,1482,3.699,1483,4.94,1484,2.462,1485,3.699,1486,3.14,1487,3.14,1488,3.14,1489,2.462,1490,2.462,1491,2.462,1492,3.699,1493,2.462,1494,3.699,1495,4.94,1496,3.699,1497,2.462,1498,3.699,1499,3.699,1500,3.699,1501,3.699,1502,2.462,1503,3.699,1504,2.462,1505,3.699,1506,3.699,1507,2.462,1508,4.94,1509,2.462,1510,3.699,1511,4.443,1512,3.699,1513,2.462,1514,2.462,1515,2.462,1516,2.462,1517,2.462,1518,2.462,1519,2.462,1520,2.771,1521,3.699,1522,3.699,1523,3.699,1524,3.699,1525,3.699,1526,3.699,1527,2.462,1528,2.462,1529,2.462,1530,1.845,1531,2.09,1532,2.462,1533,3.14,1534,2.09,1535,3.699,1536,2.462,1537,2.462,1538,2.462,1539,3.699,1540,1.845,1541,2.462,1542,2.462,1543,2.462,1544,2.462,1545,3.699,1546,2.462,1547,2.462]],["title/components/PerfilComponent.html",[0,0.136,173,0.778]],["body/components/PerfilComponent.html",[0,0.144,1,0.407,2,0.655,3,0.1,4,0.085,5,0.462,6,0.462,7,0.462,8,0.085,10,0.231,11,0.743,13,0.276,14,0.218,17,1.517,19,0.697,21,0.95,23,1.768,27,0.462,28,1.659,29,1.659,31,0.743,33,0.407,34,0.407,35,0.743,39,0.1,40,0.209,43,1.175,45,1.553,47,0.502,50,1,53,0.733,55,1.41,56,0.68,63,0.895,68,0.545,70,1.41,77,1.37,78,0.876,79,0.025,80,0.541,81,0.386,82,0.771,84,1.003,85,1.014,86,1.088,87,0.575,89,0.614,96,1.022,98,0.952,99,1.079,103,1.64,105,0.841,106,2.46,107,0.53,109,1.517,112,0.719,113,0.381,114,0.213,116,0.491,120,0.715,121,0.1,122,0.231,128,1.237,137,0.876,139,1.132,140,0.462,141,0.743,142,0.743,143,0.462,144,1.069,145,0.462,146,0.462,147,0.943,148,0.462,149,0.407,150,0.743,151,0.743,152,0.407,153,0.407,154,0.462,155,0.407,156,0.462,157,0.407,158,0.462,159,0.462,160,0.407,161,0.462,162,0.407,163,0.462,164,0.407,165,0.462,166,0.462,167,0.462,168,0.407,169,0.462,170,0.462,171,0.407,172,0.462,173,0.943,174,0.462,175,0.433,176,1.192,177,0.462,178,0.407,179,0.462,180,0.407,181,0.381,182,0.462,183,0.407,184,0.357,185,0.433,186,0.462,187,0.01,188,0.01,201,0.628,202,1.051,204,0.435,206,0.743,220,2.36,223,1.517,224,0.828,225,1.517,231,0.952,241,1.019,246,4.417,247,0.952,249,1.229,251,1.215,256,0.952,259,1.553,262,1.355,263,0.841,264,1.77,265,0.952,268,1.108,269,1.553,275,0.578,278,1.229,284,1.86,288,0.575,290,2.394,299,1.783,324,1.364,327,1.108,344,1.956,345,2.36,346,2.171,349,0.895,350,0.591,352,1.502,353,1.605,356,1.536,357,1.37,358,1.195,360,0.67,363,1.892,364,0.763,368,0.629,374,1.956,375,2.36,377,3.561,379,2.36,383,1.543,385,2.239,396,1.956,400,2.171,402,1.517,404,1.517,405,1.41,406,1.551,409,1.905,412,2.171,421,1.64,426,1.64,431,1.079,433,1.956,437,1.553,440,1.517,447,0.847,448,1.151,451,3.606,452,2.171,453,0.715,456,0.817,457,2.184,458,1.215,459,1.215,460,1.215,461,0.942,489,1.151,494,0.67,495,0.629,498,0.591,499,0.763,501,0.67,503,0.715,508,2.062,509,1.355,512,2.171,528,2.36,531,2.36,532,1.37,534,2.46,541,2.231,543,1.303,546,2.171,548,1.458,550,2.814,552,3.54,553,1.315,557,2.171,558,3.124,560,1.956,563,4.003,584,1.768,588,0.698,605,2.171,612,1.956,613,0.895,615,3.337,618,2.171,622,3.124,623,1.956,626,1.151,631,2.46,635,1.348,636,1.019,637,1.348,638,1.348,639,0.817,641,1.348,660,3.088,664,1.528,669,1.355,688,2.184,733,2.558,745,2.171,749,2.46,758,1.348,762,0.763,764,3.088,766,1.229,767,0.763,771,2.029,776,1.019,777,2.46,778,1.528,781,0.942,785,2.566,786,2.224,788,1.108,792,0.942,794,1.108,795,1.019,803,0.876,808,1.348,815,1.783,827,1.783,837,1.783,839,3.484,841,2.566,869,2.171,902,1.517,906,3.088,945,2.566,953,1.348,955,1.108,959,1.528,983,1.019,1034,2.46,1042,3.54,1061,1.528,1077,2.178,1108,1.348,1117,2.171,1119,1.528,1121,1.108,1122,1.108,1123,1.905,1124,1.108,1127,1.348,1128,1.528,1207,1.517,1208,1.783,1227,1.108,1243,1.348,1253,1.956,1262,1.215,1272,1.528,1311,2.46,1354,2.46,1355,4.417,1366,2.566,1530,2.171,1531,2.46,1534,2.46,1548,1.528,1549,2.898,1550,4.69,1551,4.885,1552,4.17,1553,3.638,1554,2.898,1555,3.638,1556,3.638,1557,3.638,1558,4.571,1559,3.848,1560,4.571,1561,4.571,1562,2.898,1563,4.885,1564,4.17,1565,3.638,1566,3.638,1567,3.638,1568,4.571,1569,2.898,1570,1.8,1571,2.898,1572,4.17,1573,2.898,1574,2.898,1575,1.8,1576,4.17,1577,2.171,1578,4.17,1579,2.898,1580,1.8,1581,1.8,1582,2.898,1583,2.898,1584,1.8,1585,2.46,1586,1.8,1587,1.8,1588,1.8,1589,1.8,1590,1.8,1591,1.8,1592,1.8,1593,2.898,1594,1.8,1595,2.46,1596,1.783,1597,2.171,1598,1.8,1599,1.8,1600,1.8,1601,1.8,1602,1.8,1603,2.171,1604,2.171,1605,4.003,1606,2.171,1607,2.171,1608,2.171,1609,2.171,1610,2.171,1611,2.171,1612,2.171,1613,2.171,1614,2.171,1615,1.956,1616,2.171,1617,3.66,1618,2.171,1619,2.171,1620,2.171,1621,2.171,1622,2.171,1623,3.606,1624,2.171,1625,2.171,1626,2.171,1627,1.956,1628,2.171,1629,2.171,1630,2.171,1631,2.171,1632,2.171,1633,2.171,1634,2.171,1635,2.171,1636,2.171,1637,2.171,1638,1.8,1639,2.46,1640,1.8,1641,4.17,1642,1.8,1643,1.8,1644,1.8,1645,1.8,1646,1.8,1647,1.8,1648,1.8,1649,2.898,1650,2.46,1651,1.8,1652,1.8,1653,2.898,1654,1.8,1655,1.8,1656,2.898,1657,1.8,1658,1.8,1659,1.8,1660,1.528,1661,3.638,1662,2.898,1663,1.8,1664,1.8,1665,1.8,1666,2.898,1667,1.8,1668,1.8,1669,1.8,1670,3.638,1671,1.8,1672,2.898,1673,1.8,1674,1.8,1675,1.8,1676,2.898,1677,2.898,1678,1.8,1679,2.898,1680,1.8,1681,1.8,1682,1.8,1683,1.8,1684,1.8,1685,2.898,1686,2.898,1687,1.8,1688,1.8,1689,1.8,1690,1.528,1691,1.528,1692,1.8,1693,1.8,1694,1.8,1695,1.8,1696,1.8,1697,1.8,1698,1.8,1699,1.8,1700,1.8,1701,3.638,1702,1.8,1703,1.8,1704,2.898,1705,1.8,1706,1.8,1707,2.898,1708,2.898,1709,2.898,1710,2.898,1711,2.898,1712,4.885,1713,2.898,1714,2.898,1715,2.898,1716,2.898,1717,1.8,1718,1.528,1719,2.898,1720,2.898,1721,2.898,1722,1.8,1723,1.8,1724,1.8,1725,1.8]],["title/interfaces/Post.html",[541,1.282,809,0.939]],["body/interfaces/Post.html",[3,0.223,4,0.191,8,0.191,10,0.223,13,0.282,14,0.283,16,1.035,19,0.707,39,0.223,40,0.377,46,2.988,68,0.52,79,0.025,81,0.422,90,0.912,107,0.763,111,2.078,121,0.34,187,0.018,188,0.018,201,0.881,202,1.071,204,0.955,258,2.113,275,0.619,288,1.219,324,0.972,411,2.078,435,2.961,447,1.006,498,2.09,515,3.04,541,1.949,542,2.113,543,1.509,547,2.633,548,2.499,553,1.831,569,2.462,588,1.673,669,2.428,691,3.216,692,2.988,719,2.635,809,1.676,810,1.831,811,1.831,812,2.484,813,2.988,814,3.172,815,2.484,816,1.964,817,2.113,818,2.462,819,2.724,820,3.04,821,2.825,822,2.724,823,2.724,824,3.53,825,3.22,826,3.53,827,3.572,828,3.779,829,3.285,830,3.917,831,3.916,832,2.724,833,2.724,834,2.724,835,2.484,836,2.484,837,2.484,838,2.284,839,2.484,840,2.484,1726,4.036]],["title/interfaces/PostCategory.html",[409,1.802,809,0.939]],["body/interfaces/PostCategory.html",[3,0.272,4,0.233,8,0.233,10,0.373,13,0.278,14,0.278,16,1.263,39,0.272,40,0.426,59,2.512,79,0.025,80,0.78,81,0.419,107,0.743,121,0.272,176,0.853,187,0.02,188,0.02,201,0.633,204,0.739,258,2.579,275,0.583,324,1.427,335,4.439,336,5.029,340,4.439,356,1.519,406,1.43,409,3.102,411,2.794,448,2.353,465,4.45,487,5.029,488,3.998,489,2.353,543,1.452,588,1.427,691,3.453,741,3.69,809,1.344,811,2.234,813,2.397,821,2.883,948,3.353,1727,4.18,1728,4.925,1729,5.925,1730,3.646]],["title/injectables/PostCategoryService.html",[227,0.829,457,1.802]],["body/injectables/PostCategoryService.html",[3,0.215,4,0.184,8,0.184,10,0.335,13,0.271,14,0.239,16,1.31,19,0.554,21,0.767,30,1.546,39,0.215,40,0.368,43,1.198,47,0.885,50,0.969,53,0.767,56,0.898,57,4.087,63,1.578,68,0.458,73,1.903,78,1.374,79,0.025,80,0.675,81,0.385,82,1.209,84,1.14,85,0.825,86,0.885,96,0.885,107,0.422,112,0.717,113,0.825,114,0.461,120,1.546,121,0.215,122,0.5,137,1.459,139,1.284,176,1.05,187,0.017,188,0.017,201,0.657,204,0.969,206,1.31,224,1.014,227,1.231,230,1.651,253,2.318,256,1.679,259,1.903,275,0.605,276,2.167,375,3.778,376,2.318,378,2.405,405,2.486,406,1.758,407,1.87,409,3.495,411,2.772,416,2.318,422,3.448,423,2.892,424,2.892,431,1.903,447,1.05,457,2.676,460,2.627,543,1.368,549,2.486,588,1.641,613,1.578,688,2.676,691,2.676,697,3.448,842,1.766,844,2.987,845,3.293,846,4.337,847,3.828,849,4.337,851,3.849,854,3.428,855,3.448,859,3.285,875,2.676,876,2.892,878,2.676,879,2.892,880,2.892,881,3.145,882,2.039,883,2.039,885,2.396,945,3.145,1007,3.828,1039,4.337,1205,3.448,1471,2.627,1472,2.917,1731,5.584,1732,3.304,1733,4.538,1734,5.11,1735,3.893,1736,6.814,1737,4.337,1738,5.11,1739,3.893,1740,3.893,1741,3.828,1742,5.11,1743,3.893,1744,5.11,1745,4.337,1746,3.893,1747,3.893,1748,3.304,1749,3.304,1750,3.893]],["title/injectables/PostService.html",[227,0.829,528,1.948]],["body/injectables/PostService.html",[3,0.196,4,0.168,8,0.168,10,0.348,13,0.275,14,0.269,16,1.231,19,0.633,21,0.876,30,1.409,39,0.196,40,0.346,43,1.167,47,0.832,50,0.965,53,0.721,56,0.909,63,1.802,68,0.523,78,1.469,79,0.025,80,0.721,81,0.399,82,1.292,84,1.133,85,0.775,86,0.832,89,1.237,90,1.086,96,0.832,98,1.917,105,1.394,107,0.385,112,0.69,113,0.752,114,0.42,120,1.409,121,0.196,122,0.456,137,1.469,139,1.332,176,1.18,181,1.018,187,0.016,188,0.016,204,1.005,206,1.231,219,1.907,224,0.953,227,1.157,230,1.504,249,2.037,253,2.179,256,1.917,259,1.789,275,0.69,276,2.474,305,3.241,376,2.179,378,2.317,379,2.718,405,2.337,406,1.694,407,1.802,411,2.317,416,2.179,417,2.179,423,2.718,424,3.303,431,1.789,447,1.161,512,3.598,516,3.241,528,2.718,541,2.341,543,1.444,548,2.45,588,1.66,613,1.483,636,2.008,688,2.515,692,2.337,697,3.241,719,2.596,747,2.956,818,2.037,828,3.591,831,2.956,842,1.609,844,2.851,845,3.193,847,3.598,851,3.674,854,3.303,855,3.241,856,4.076,857,3.241,859,3.289,875,2.515,876,2.718,878,2.515,879,2.718,880,2.718,881,2.956,882,1.857,883,1.857,885,2.183,914,3.241,1221,4.076,1291,4.076,1462,3.241,1471,2.394,1733,3.598,1745,4.076,1751,3.011,1752,4.802,1753,4.802,1754,4.802,1755,4.802,1756,3.547,1757,4.802,1758,4.802,1759,4.802,1760,3.547,1761,4.802,1762,4.802,1763,3.547,1764,4.802,1765,5.445,1766,3.011,1767,4.802,1768,3.547,1769,4.802,1770,3.547,1771,3.598,1772,4.802,1773,3.547,1774,3.547,1775,3.547,1776,3.547,1777,3.547,1778,3.547]],["title/interfaces/PostView.html",[809,0.939,838,1.948]],["body/interfaces/PostView.html",[3,0.237,4,0.203,8,0.203,10,0.237,13,0.281,14,0.282,19,0.703,39,0.237,40,0.391,46,2.086,68,0.535,79,0.025,81,0.345,90,0.969,107,0.738,111,1.702,121,0.347,187,0.018,188,0.018,201,0.883,202,1.047,204,0.973,275,0.643,288,1.185,324,1.032,411,1.702,435,2.426,447,0.942,498,1.786,515,3.127,541,1.597,542,2.245,543,1.502,547,2.709,548,2.478,553,1.945,569,2.306,588,1.668,669,2.224,691,2.245,692,2.086,719,2.672,809,1.714,810,1.945,811,1.945,812,2.638,813,3.056,814,3.223,815,2.638,816,2.086,817,2.245,818,2.306,819,2.893,820,2.847,821,2.646,822,2.893,823,2.893,824,2.893,825,2.638,826,2.893,827,3.676,828,3.989,829,3.38,830,4.03,831,3.989,832,2.893,833,2.893,834,2.893,835,2.638,836,2.638,837,3.347,838,3.078,839,3.347,840,3.347]],["title/components/RegisterComponent.html",[0,0.136,178,0.778]],["body/components/RegisterComponent.html",[0,0.183,1,0.594,2,0.878,3,0.145,4,0.124,5,0.674,6,0.674,7,0.674,8,0.124,10,0.145,11,0.996,13,0.275,14,0.248,16,1.308,17,2.034,19,0.682,21,0.908,27,0.674,28,1.753,29,1.753,31,0.996,33,0.594,34,0.594,35,0.996,39,0.145,40,0.28,43,1.147,45,1.9,47,0.673,50,0.927,53,0.766,55,1.89,56,0.793,59,1.647,67,2.163,68,0.578,79,0.025,80,0.674,81,0.324,84,0.673,85,0.92,86,0.987,87,0.771,89,0.823,91,3.822,92,1.279,96,0.987,98,1.676,99,1.446,103,2.198,104,3.296,107,0.553,109,2.034,112,0.644,113,0.557,114,0.311,116,0.717,121,0.145,122,0.338,128,0.935,139,0.823,140,0.674,141,0.996,142,0.996,143,0.674,144,1.308,145,0.674,146,0.674,147,0.594,148,0.674,149,0.594,150,0.996,151,0.996,152,0.594,153,0.594,154,0.674,155,0.594,156,0.674,157,0.594,158,0.674,159,0.674,160,0.594,161,0.674,162,0.594,163,0.674,164,0.594,165,0.674,166,0.674,167,0.674,168,0.594,169,0.674,170,0.674,171,0.594,172,0.674,173,0.594,174,0.674,175,0.633,176,0.455,177,0.674,178,1.153,179,0.674,180,0.594,181,1.081,182,0.674,183,0.594,184,0.522,185,0.633,186,0.674,187,0.013,188,0.013,201,0.499,202,1.1,204,0.766,205,2.983,206,0.996,207,3.724,208,3.724,220,2.888,223,2.85,224,1.294,225,2.671,231,1.276,241,1.488,247,1.276,249,1.647,256,1.676,260,2.91,262,1.72,263,1.127,265,1.276,268,1.618,269,1.9,275,0.644,278,1.647,284,1.676,288,0.917,302,1.774,345,2.198,349,1.199,350,0.863,351,1.618,352,1.872,353,1.988,355,1.044,356,0.996,357,1.517,358,0.863,359,1.618,360,1.72,361,1.376,363,1.762,364,1.115,367,1.762,368,0.919,384,2.614,391,2.614,395,2.621,402,2.983,404,2.034,406,1.127,407,1.199,426,2.198,428,2.614,431,1.446,441,2.39,443,2.198,444,2.39,445,2.39,447,0.673,448,2.026,454,1.488,455,1.488,456,1.192,463,1.488,464,1.488,493,0.979,495,1.615,498,0.863,499,1.115,501,0.979,502,1.618,503,1.542,508,1.784,509,0.979,522,1.774,532,1.676,545,2.621,591,2.198,625,3.296,626,1.542,639,1.192,695,1.618,699,2.39,701,1.969,733,2.983,734,2.621,735,2.983,746,2.034,771,1.279,779,2.034,781,1.376,786,1.279,789,1.488,791,1.488,792,1.376,794,1.618,853,2.39,908,1.488,911,2.034,945,2.39,947,1.376,980,1.488,1032,2.91,1077,1.959,1109,1.774,1121,1.618,1122,1.618,1123,2.85,1124,1.618,1194,5.531,1196,1.969,1207,2.983,1208,2.39,1219,2.231,1225,3.92,1227,1.618,1246,2.231,1253,2.621,1256,1.618,1257,1.969,1260,1.969,1261,1.774,1266,1.774,1267,1.774,1281,2.91,1287,1.774,1314,1.969,1462,3.443,1540,1.969,1550,4.797,1559,4.416,1577,2.91,1603,2.91,1604,2.91,1605,4.533,1606,2.91,1607,2.91,1608,2.91,1609,2.91,1610,2.91,1611,2.91,1612,2.91,1613,2.91,1614,2.91,1615,2.621,1616,2.91,1617,4.269,1618,2.91,1619,2.91,1620,2.91,1621,2.91,1622,2.91,1623,4.083,1624,2.91,1625,2.91,1626,2.91,1627,2.621,1628,2.91,1629,2.91,1630,2.91,1631,2.91,1632,2.91,1633,2.91,1634,2.91,1635,2.91,1636,2.91,1637,2.91,1718,2.231,1779,2.231,1780,3.296,1781,4.33,1782,5.102,1783,3.883,1784,4.619,1785,3.883,1786,4.619,1787,5.102,1788,2.628,1789,2.91,1790,2.628,1791,2.628,1792,2.628,1793,2.628,1794,3.822,1795,2.628,1796,2.628,1797,3.883,1798,2.628,1799,2.628,1800,3.883,1801,2.628,1802,3.883,1803,2.628,1804,3.883,1805,2.628,1806,2.628,1807,2.628,1808,2.628,1809,1.774,1810,2.628,1811,2.628,1812,2.628,1813,2.628,1814,2.628,1815,3.883,1816,3.883,1817,3.883,1818,2.628,1819,6.051,1820,2.628,1821,2.628,1822,2.628,1823,2.231,1824,2.231,1825,2.628]],["title/components/ReglasDeLaComunidadComponent.html",[0,0.136,180,0.778]],["body/components/ReglasDeLaComunidadComponent.html",[0,0.145,1,0.411,2,0.66,3,0.101,4,0.086,5,0.466,6,0.466,7,0.466,8,0.086,10,0.101,11,0.749,13,0.284,14,0.278,15,1.798,16,1.375,17,1.529,18,1.529,19,0.582,21,1.008,27,0.466,28,1.662,29,1.662,31,0.749,33,0.411,34,0.411,35,0.749,39,0.101,40,0.21,43,0.911,45,1.562,47,0.506,50,0.805,53,0.887,55,1.421,56,0.875,59,1.239,68,0.588,72,3.56,73,1.562,79,0.025,80,0.346,81,0.115,84,0.727,85,0.677,86,0.727,87,0.974,89,0.776,90,1.408,91,2.188,96,0.727,98,1.762,99,1.088,101,1.653,103,2.072,105,1.768,109,1.529,111,1.16,112,0.544,113,0.385,114,0.215,116,0.496,121,0.101,122,0.234,128,1.01,134,1.131,140,0.466,141,0.749,142,0.749,143,0.466,144,1.075,145,0.466,146,0.466,147,0.411,148,0.466,149,0.411,150,0.749,151,0.749,152,0.411,153,0.411,154,0.466,155,0.411,156,0.466,157,0.411,158,0.466,159,0.466,160,0.411,161,0.466,162,0.411,163,0.466,164,0.948,165,1.322,166,0.466,167,0.466,168,0.411,169,0.466,170,0.466,171,0.411,172,0.466,173,0.411,174,0.466,175,0.438,176,0.796,177,0.466,178,0.411,179,0.466,180,0.948,181,1.441,182,0.466,183,0.411,184,1.024,185,0.438,186,0.466,187,0.01,188,0.01,194,1.971,200,2.479,201,0.76,202,0.866,204,0.736,205,2.569,206,1.516,209,2.479,219,1.665,223,1.529,224,0.912,236,1.971,239,2.479,245,2.188,247,0.96,256,0.96,258,1.529,259,1.088,263,0.848,265,0.96,275,0.744,278,1.553,284,1.378,288,1.064,290,0.952,312,2.479,324,1.182,335,2.188,337,2.188,339,2.188,344,2.83,345,1.653,349,0.902,350,0.597,351,1.118,352,1.942,353,2.164,354,1.971,355,1.824,356,1.322,357,1.942,358,1.612,360,1.711,361,0.952,363,1.325,364,1.778,367,1.661,368,1.606,376,1.325,377,1.798,378,1.16,381,1.986,385,2.254,399,1.653,405,1.421,406,1.869,407,0.561,417,1.325,419,2.83,421,1.653,431,1.088,447,0.959,456,0.825,488,1.971,489,1.16,493,2.453,494,1.364,495,2.029,498,0.597,499,0.771,501,1.088,503,1.16,505,2.081,506,1.118,507,0.952,508,1.935,509,1.562,510,1.325,532,1.378,548,1.021,549,1.421,553,1.325,558,3.142,562,2.188,569,2.274,570,2.188,571,1.971,584,1.239,600,1.798,614,1.971,615,1.653,626,1.16,639,0.825,650,1.971,699,1.118,733,0.952,734,1.971,735,3.095,741,3.142,742,4.165,746,0.952,747,2.581,762,1.553,765,2.072,766,0.771,767,0.771,769,0.884,771,1.782,773,1.118,776,1.653,779,2.196,780,1.226,781,1.917,784,1.653,786,1.782,788,1.118,789,1.653,792,1.917,795,1.653,803,2.041,806,2.188,855,2.83,857,1.971,868,1.021,911,1.529,912,1.798,914,1.226,927,4.165,948,1.653,955,1.798,971,3.56,972,2.479,978,2.743,980,1.653,983,1.029,990,1.543,1022,2.479,1025,1.226,1036,2.188,1037,2.479,1050,2.188,1077,1.239,1107,2.479,1112,2.479,1113,1.543,1121,2.254,1122,1.118,1123,1.529,1124,1.118,1155,2.479,1161,3.676,1164,2.479,1191,2.188,1196,3.142,1207,2.406,1215,2.83,1216,2.471,1253,1.971,1256,1.118,1261,1.226,1266,1.971,1267,2.471,1268,2.479,1277,1.226,1281,1.362,1293,2.479,1302,2.479,1308,1.362,1312,1.543,1313,2.479,1314,1.362,1329,2.827,1339,1.543,1340,1.543,1355,2.188,1364,2.479,1380,3.108,1430,1.543,1477,2.479,1533,1.543,1540,2.188,1577,2.188,1597,2.188,1660,2.479,1690,2.479,1691,2.479,1780,2.479,1781,2.479,1809,3.48,1823,1.543,1824,1.543,1826,4.697,1827,4.697,1828,1.543,1829,2.921,1830,2.921,1831,4.194,1832,2.921,1833,3.662,1834,2.921,1835,3.662,1836,4.194,1837,4.194,1838,4.194,1839,4.194,1840,1.817,1841,2.921,1842,2.921,1843,2.921,1844,1.817,1845,2.921,1846,4.906,1847,2.921,1848,1.817,1849,2.921,1850,1.817,1851,2.921,1852,2.921,1853,1.817,1854,4.906,1855,2.921,1856,2.921,1857,6.518,1858,2.921,1859,2.921,1860,2.921,1861,2.921,1862,2.921,1863,4.194,1864,2.921,1865,2.921,1866,2.921,1867,2.921,1868,2.921,1869,2.921,1870,4.194,1871,2.921,1872,2.921,1873,2.921,1874,2.921,1875,2.921,1876,2.479,1877,2.921,1878,2.921,1879,4.906,1880,2.921,1881,2.921,1882,2.921,1883,2.921,1884,2.921,1885,2.921,1886,2.921,1887,2.921,1888,2.921,1889,2.921,1890,2.921,1891,4.194,1892,2.921,1893,2.921,1894,2.921,1895,2.921,1896,2.921,1897,2.921,1898,2.921,1899,2.921,1900,2.921,1901,2.921,1902,2.921,1903,2.921,1904,2.921,1905,4.194,1906,2.921,1907,2.921,1908,2.921,1909,2.921,1910,2.921,1911,2.921,1912,2.921,1913,2.921,1914,2.921,1915,2.479,1916,2.921,1917,2.921,1918,2.921,1919,2.921,1920,2.921,1921,2.921,1922,2.921,1923,2.921,1924,2.921,1925,2.743,1926,2.921,1927,2.921,1928,2.921,1929,2.921,1930,2.921,1931,2.921,1932,2.921,1933,2.921,1934,2.921,1935,2.921,1936,2.921,1937,2.921,1938,2.921,1939,2.921,1940,2.921,1941,2.921,1942,2.921,1943,3.56,1944,2.921,1945,2.921,1946,2.921,1947,2.921,1948,2.188,1949,2.921,1950,2.921,1951,1.817,1952,1.817,1953,1.817,1954,1.817,1955,1.817,1956,2.921,1957,1.817,1958,1.817,1959,2.921,1960,1.817,1961,1.817,1962,2.921,1963,2.479,1964,2.921,1965,2.921,1966,2.921,1967,1.817,1968,1.817,1969,2.921,1970,2.921,1971,2.921,1972,2.921,1973,2.921,1974,2.921,1975,2.921,1976,2.921,1977,2.921,1978,2.921,1979,2.921,1980,2.921,1981,2.921,1982,2.921,1983,2.921,1984,2.921,1985,2.921,1986,2.921,1987,2.921,1988,2.921,1989,2.921,1990,2.921,1991,2.921,1992,2.921,1993,2.921,1994,4.194,1995,4.194,1996,1.817,1997,2.921,1998,1.817,1999,1.817,2000,1.817,2001,1.817,2002,3.662,2003,1.817,2004,1.817,2005,1.817,2006,2.921,2007,3.662,2008,1.817,2009,1.817,2010,2.921,2011,1.817,2012,1.817,2013,2.921,2014,1.817,2015,1.817,2016,1.817]],["title/interfaces/Report.html",[809,0.939,2017,2.322]],["body/interfaces/Report.html",[3,0.23,4,0.197,8,0.197,10,0.23,13,0.211,14,0.211,19,0.748,39,0.23,40,0.384,68,0.589,79,0.025,81,0.438,82,1.479,89,1.435,90,1.207,105,1.908,107,0.734,112,0.493,121,0.23,187,0.018,188,0.018,201,0.799,202,1.003,204,0.801,224,1.233,275,0.632,288,1.233,296,5.746,324,1.286,356,1.369,447,1.077,465,4.194,489,2.12,514,4.782,541,2.547,543,1.497,548,2.299,588,1.63,669,2.315,692,3.024,704,4.194,709,4,719,2.468,809,1.136,810,3.032,811,1.89,813,2.598,814,3.199,817,3.254,818,2.264,820,2.796,821,2.598,825,3.286,1025,3.603,1093,4.531,1342,4,1596,3.286,1737,4.531,2017,3.603,2018,3.535,2019,5.275,2020,6.214,2021,5.338,2022,6.214,2023,5.338,2024,6.425,2025,6.425,2026,5.338,2027,5.338,2028,4,2029,4.531]],["title/injectables/ReportService.html",[227,0.829,530,2.118]],["body/injectables/ReportService.html",[3,0.188,4,0.161,8,0.161,10,0.317,13,0.256,14,0.245,16,1.196,19,0.721,21,0.86,30,1.349,39,0.188,40,0.336,43,1.219,47,0.808,50,0.954,53,0.7,56,0.9,63,1.44,68,0.606,77,1.532,78,1.282,79,0.025,80,0.63,81,0.364,82,1.129,84,1.122,85,0.86,86,0.923,96,0.993,107,0.689,112,0.711,113,0.72,114,0.402,120,1.349,121,0.188,122,0.437,128,1.494,137,1.494,139,1.215,176,0.808,187,0.016,188,0.016,201,0.599,202,0.753,204,0.7,206,1.591,224,0.926,227,1.123,230,1.441,249,1.978,253,2.116,275,0.678,276,1.978,278,1.978,288,1.285,324,1.38,356,1.63,381,1.631,407,1.44,417,2.116,431,1.737,447,0.993,465,4.288,489,2.276,514,4.706,516,3.147,530,2.87,532,1.883,543,1.434,545,3.868,548,2.004,549,2.269,571,3.868,588,1.494,613,1.44,614,4.187,615,2.639,626,1.852,628,2.87,662,2.116,669,2.311,670,3.494,692,2.269,693,2.884,704,4.484,719,2.115,814,2.789,816,1.653,817,2.788,835,2.87,842,1.541,844,2.788,845,3.145,853,2.87,859,3.314,860,4.865,868,1.631,872,3.958,875,2.442,876,2.639,878,2.442,880,2.639,881,2.87,882,1.779,883,1.779,1025,3.868,1182,3.958,1195,3.958,1342,3.494,1520,3.494,1596,3.819,1741,3.494,1915,3.958,2017,4.431,2019,3.958,2028,3.494,2029,3.958,2030,2.884,2031,5.731,2032,4.663,2033,4.663,2034,4.663,2035,3.397,2036,3.494,2037,4.663,2038,4.663,2039,4.663,2040,3.397,2041,4.663,2042,4.663,2043,3.397,2044,4.663,2045,3.397,2046,4.663,2047,4.663,2048,3.958,2049,4.663,2050,3.397,2051,3.397,2052,3.397,2053,4.663,2054,3.397,2055,3.397,2056,3.397,2057,4.663,2058,3.397,2059,3.397,2060,3.397,2061,3.397,2062,3.397,2063,3.397,2064,3.397,2065,3.397,2066,3.397,2067,3.397,2068,3.397,2069,3.397]],["title/guards/RoleGuard.html",[189,1.948,2070,2.578]],["body/guards/RoleGuard.html",[3,0.241,4,0.206,8,0.206,10,0.304,12,4.668,13,0.267,14,0.263,19,0.686,21,0.825,23,2.332,26,2.957,30,1.733,39,0.241,40,0.314,43,1.174,44,3.385,45,2.355,47,0.953,50,0.655,53,0.825,56,0.879,68,0.635,70,2.676,75,2.88,77,1.807,78,1.051,79,0.025,80,0.516,81,0.277,82,0.925,84,0.953,87,1.195,89,1.41,90,1.243,96,0.756,99,1.626,107,0.473,112,0.713,113,0.925,114,0.516,116,1.191,121,0.241,122,0.561,128,1.325,134,1.859,137,1.051,139,1.166,187,0.019,188,0.019,189,3.113,191,2.945,201,0.707,202,1.091,204,0.825,211,5.366,213,5.366,215,2.88,216,4.266,218,3.113,219,1.733,222,4.12,223,2.88,227,1.325,230,1.851,231,1.434,241,2.47,275,0.787,447,0.953,532,2.141,626,1.733,747,2.686,902,3.412,958,3.704,1183,4.12,1329,3.385,1366,3.385,1486,4.668,1876,4.668,1925,4.12,2070,4.12,2071,3.704,2072,5.5,2073,5.5,2074,5.5,2075,5.5,2076,6.322,2077,4.364,2078,5.5,2079,5.5,2080,5.5,2081,5.5,2082,5.5,2083,4.364,2084,4.364,2085,4.364,2086,4.364,2087,6.022,2088,4.364,2089,4.364,2090,4.364,2091,4.364]],["title/injectables/RoleService.html",[227,0.829,2092,2.578]],["body/injectables/RoleService.html",[3,0.229,4,0.196,8,0.196,10,0.294,13,0.245,14,0.245,15,3.275,21,0.798,30,1.646,39,0.229,47,0.922,50,0.931,56,0.863,63,1.643,68,0.631,73,2.31,77,2.222,78,0.998,79,0.025,80,0.49,81,0.263,82,0.878,84,1.172,87,1.303,89,1.491,90,1.203,96,0.922,105,1.545,107,0.724,112,0.49,114,0.49,121,0.229,122,0.533,128,0.998,134,2.027,137,0.998,139,1.315,187,0.018,188,0.018,201,0.684,202,1.001,215,3.438,216,3.591,218,3.716,219,2.113,222,4.918,227,1.282,230,1.757,243,4.516,275,0.815,278,2.256,288,1.231,437,2.31,842,1.88,902,3.708,908,3.012,915,3.948,947,3.359,1183,3.986,1329,3.817,1520,3.986,1730,3.275,1925,4.918,2028,3.986,2092,3.986,2093,3.517,2094,5.321,2095,6.202,2096,5.264,2097,5.321,2098,6.202,2099,6.202,2100,4.143,2101,4.516,2102,5.321,2103,5.321,2104,4.143,2105,5.321,2106,5.878,2107,5.321,2108,5.321,2109,4.143,2110,6.202,2111,4.143,2112,5.321,2113,3.517,2114,5.878]],["title/interfaces/Score.html",[547,1.561,809,0.939]],["body/interfaces/Score.html",[3,0.233,4,0.199,8,0.199,10,0.233,13,0.28,14,0.282,19,0.715,39,0.233,40,0.387,46,2.051,68,0.531,79,0.025,81,0.376,90,0.953,107,0.736,111,1.674,121,0.345,187,0.018,188,0.018,201,0.888,202,1.082,204,0.99,275,0.637,288,1.239,324,1.296,411,1.674,435,2.386,447,1.027,498,1.768,515,3.453,541,1.57,542,2.817,543,1.508,547,3.079,548,2.473,553,2.441,569,2.282,588,1.674,669,2.456,691,2.208,692,2.051,719,2.662,809,1.703,810,1.913,811,1.913,812,2.595,813,3.037,814,3.209,815,2.595,816,2.051,817,2.208,818,2.282,819,2.845,820,2.817,821,2.618,822,2.845,823,2.845,824,2.845,825,2.595,826,2.845,827,3.311,828,3.647,829,3.045,830,3.631,831,3.311,832,3.631,833,3.631,834,3.631,835,3.311,836,3.311,837,2.595,838,2.386,839,2.595,840,2.595]],["title/injectables/ScoreService.html",[227,0.829,531,1.948]],["body/injectables/ScoreService.html",[3,0.197,4,0.168,8,0.168,10,0.337,13,0.28,14,0.269,16,1.233,19,0.727,21,0.982,23,2.04,25,2.96,30,1.412,39,0.197,40,0.346,43,1.168,47,0.833,50,0.944,53,0.722,56,0.669,63,1.942,68,0.524,78,1.407,79,0.025,80,0.691,81,0.388,82,1.238,84,1.114,85,0.777,86,0.833,89,1.019,96,0.833,98,1.58,105,1.695,107,0.386,112,0.691,113,0.753,114,0.421,120,1.412,121,0.197,122,0.457,137,1.515,139,1.238,176,1.012,184,0.955,187,0.016,188,0.016,201,0.618,202,1.1,204,0.944,206,1.498,224,0.955,227,1.158,230,1.507,245,3.603,249,2.04,253,2.65,256,1.58,259,1.791,275,0.691,276,2.04,288,1.248,299,2.96,305,3.246,327,2.188,379,2.722,381,1.682,395,3.246,406,1.695,407,1.485,411,1.91,437,1.791,515,3.51,516,3.246,531,2.722,541,1.791,542,2.519,543,1.469,547,3.068,548,2.383,549,2.34,550,4.414,557,4.712,588,1.641,598,4.082,608,4.082,613,1.485,621,4.082,623,3.246,636,2.012,669,2.343,719,2.319,760,4.082,829,2.722,842,1.613,844,2.854,845,3.195,854,3.306,859,3.226,875,2.519,876,2.722,878,2.519,879,2.722,880,2.722,881,2.96,882,1.861,883,1.861,1462,3.246,1596,2.96,1730,2.96,1741,3.603,1766,3.017,1771,3.603,2115,3.017,2116,4.81,2117,4.81,2118,4.81,2119,4.81,2120,4.81,2121,4.81,2122,3.555,2123,4.81,2124,4.81,2125,6.102,2126,3.555,2127,4.81,2128,4.082,2129,4.81,2130,4.81,2131,3.555,2132,4.81,2133,4.81,2134,4.81,2135,3.555,2136,4.81,2137,3.555,2138,3.555,2139,3.555,2140,3.555,2141,3.555,2142,3.555,2143,3.555,2144,3.555]],["title/interfaces/User.html",[809,0.939,1077,1.459]],["body/interfaces/User.html",[3,0.265,4,0.226,8,0.226,10,0.265,13,0.23,14,0.189,16,1.227,19,0.764,39,0.265,40,0.419,79,0.025,80,0.773,81,0.432,82,1.384,107,0.771,121,0.265,181,1.234,187,0.02,188,0.02,202,1.143,275,0.566,288,0.95,324,1.152,356,1.227,381,1.673,406,1.69,448,2.312,489,2.312,543,1.442,588,1.402,669,2.432,733,2.505,809,1.305,811,2.17,813,2.328,821,2.833,902,3.048,908,3.695,915,3.583,947,3.048,948,3.295,1077,2.469,1123,3.419,1207,3.419,1208,3.583,1550,3.928,1615,3.928,1623,3.928,1627,3.928,1730,4.018,1789,3.584,1794,4.361,1809,4.406,1948,4.361,2145,4.06,2146,5.821]],["title/injectables/UserService.html",[227,0.829,532,1.131]],["body/injectables/UserService.html",[3,0.132,4,0.113,8,0.113,10,0.339,13,0.264,14,0.255,16,0.927,19,0.768,21,0.882,23,1.532,30,0.948,39,0.132,40,0.26,43,1.187,47,0.626,49,3.525,50,1.013,53,0.921,56,0.854,59,1.532,63,1.994,67,2.493,68,0.621,78,1.45,79,0.025,80,0.748,81,0.396,82,1.276,84,1.146,85,0.843,86,0.905,87,0.717,89,1.246,96,0.952,98,2.157,105,1.412,107,0.736,112,0.618,113,0.506,114,0.282,120,0.948,121,0.132,122,0.307,128,1.324,134,1.116,137,1.478,139,1.339,184,1.091,187,0.012,188,0.012,194,2.438,195,2.438,196,2.438,201,0.464,202,1.152,205,1.892,206,1.621,207,3.618,208,3.383,212,3.282,215,1.892,219,1.435,220,2.752,221,2.438,224,0.717,227,0.87,228,1.469,229,1.161,230,1.012,233,2.438,234,3.282,235,2.707,253,1.639,256,1.598,275,0.782,276,2.602,284,1.598,288,1.218,297,2.026,366,3.067,378,1.435,381,1.264,407,1.116,416,2.206,421,3.231,437,2.354,440,1.892,447,0.843,448,2.565,532,1.187,543,1.321,549,2.366,588,1.602,613,1.116,662,1.639,669,1.811,746,1.892,842,1.083,844,2.546,845,2.736,853,2.993,854,2.752,859,3.237,868,1.264,875,2.546,876,2.045,878,1.892,882,1.25,883,1.25,885,1.469,902,3.079,908,2.468,909,3.267,915,2.224,947,1.892,956,1.788,1007,2.707,1077,2.803,1191,2.707,1193,3.067,1205,2.438,1207,3.152,1208,3.618,1227,1.469,1329,3.704,1366,2.224,1461,3.067,1471,1.611,1472,1.788,1488,3.067,1595,3.067,1596,2.224,1730,2.224,1733,3.643,1748,2.026,1749,2.026,1771,2.707,1789,2.707,1794,4.118,1943,3.067,1948,2.707,1963,2.026,2036,2.707,2048,2.026,2096,4.128,2101,4.665,2113,2.026,2128,3.067,2147,2.026,2148,3.613,2149,4.36,2150,3.613,2151,4.863,2152,3.613,2153,4.863,2154,4.863,2155,4.863,2156,3.613,2157,3.613,2158,3.613,2159,3.613,2160,3.613,2161,3.613,2162,3.613,2163,3.613,2164,4.36,2165,4.863,2166,3.613,2167,3.067,2168,3.613,2169,2.387,2170,3.613,2171,2.387,2172,3.613,2173,2.387,2174,2.387,2175,2.387,2176,2.387,2177,2.387,2178,2.387,2179,3.613,2180,2.387,2181,3.613,2182,2.387,2183,4.863,2184,3.613,2185,2.387,2186,3.613,2187,2.387,2188,3.613,2189,2.387,2190,3.613,2191,3.613,2192,3.613,2193,2.387,2194,3.613,2195,3.613,2196,2.387,2197,3.613,2198,2.387,2199,2.387,2200,3.613,2201,3.613,2202,3.613,2203,2.387,2204,3.067,2205,3.613,2206,3.613,2207,3.613,2208,3.613,2209,3.613,2210,2.387,2211,3.613,2212,3.613,2213,3.613,2214,3.613,2215,2.387,2216,2.387,2217,2.387,2218,2.387,2219,4.36,2220,3.613,2221,4.36,2222,3.613,2223,3.613,2224,2.387,2225,2.387,2226,2.387,2227,2.387,2228,2.387,2229,2.387,2230,2.387,2231,2.387,2232,2.387,2233,2.387,2234,2.387,2235,3.613,2236,2.387,2237,2.387,2238,2.387,2239,2.387]],["title/components/UsuariosComponent.html",[0,0.136,183,0.778]],["body/components/UsuariosComponent.html",[0,0.182,1,0.591,2,0.875,3,0.145,4,0.124,5,0.671,6,0.671,7,0.671,8,0.124,10,0.214,11,0.992,13,0.268,14,0.244,15,2.381,19,0.669,21,0.907,24,2.381,27,0.671,28,1.752,29,1.752,31,0.992,33,0.591,34,0.591,35,0.992,39,0.145,40,0.279,43,1.056,47,0.671,50,0.977,53,0.942,54,2.611,56,0.896,57,3.435,67,2.158,68,0.563,78,0.63,79,0.025,80,0.602,81,0.361,82,0.554,84,0.986,85,0.918,86,0.986,87,0.768,96,0.882,98,1.513,107,0.552,112,0.696,113,0.554,114,0.309,116,0.714,121,0.145,122,0.336,128,0.932,137,0.932,139,1.151,140,0.671,141,0.992,142,0.992,143,0.671,144,1.305,145,0.671,146,0.671,147,1.15,148,0.671,149,0.591,150,1.305,151,0.992,152,0.591,153,0.591,154,0.671,155,0.591,156,0.671,157,0.591,158,0.671,159,0.671,160,0.591,161,0.671,162,0.591,163,0.671,164,0.591,165,0.671,166,0.671,167,0.671,168,0.591,169,0.671,170,0.671,171,0.591,172,0.671,173,0.591,174,0.671,175,0.63,176,0.453,177,0.671,178,0.591,179,0.671,180,0.591,181,0.554,182,0.671,183,1.15,184,1.356,185,0.63,186,0.671,187,0.013,188,0.013,201,0.497,202,1.083,219,1.537,224,0.768,231,1.271,247,1.271,259,1.441,262,1.715,263,1.123,264,2.241,265,1.271,269,1.896,275,0.602,284,2.092,288,0.914,290,2.026,324,0.63,349,1.195,350,0.859,352,0.859,353,1.271,356,0.671,357,1.271,358,0.859,360,0.974,368,0.915,369,1.273,373,2.834,374,2.611,377,3.966,378,1.039,379,2.881,381,1.353,383,1.953,384,2.607,385,2.834,390,3.909,391,2.607,393,2.611,395,3.435,396,2.611,399,2.19,400,4.261,402,3.164,404,2.665,407,1.572,416,1.187,417,1.187,421,2.19,426,2.19,427,3.284,428,2.607,431,1.896,437,2.023,440,2.665,441,2.381,443,2.19,444,2.381,445,2.381,447,0.882,448,2.259,451,2.611,453,1.039,454,1.48,455,1.48,456,1.187,461,1.37,463,1.48,464,2.881,469,2.22,475,3.284,481,2.22,484,2.22,486,2.611,493,0.974,494,0.974,495,0.915,496,1.37,497,1.48,498,0.859,499,1.109,500,1.61,501,0.974,502,1.61,503,1.039,504,1.37,505,1.109,506,1.61,507,1.37,508,0.915,509,0.974,510,1.187,532,1.672,591,2.19,613,1.195,626,1.537,639,1.187,868,1.353,902,2.026,908,2.19,915,2.381,947,2.665,1077,2.807,1123,1.37,1207,2.412,1216,2.611,1227,1.61,1243,1.96,1366,2.381,1476,3.284,1550,4.795,1559,4.07,1603,2.899,1604,2.899,1605,4.527,1606,2.899,1607,2.899,1608,2.899,1609,2.899,1610,2.899,1611,2.899,1612,2.899,1613,2.899,1614,2.899,1615,2.611,1616,2.899,1617,4.261,1618,2.899,1619,2.899,1620,2.899,1621,2.899,1622,2.899,1623,4.077,1624,2.899,1625,2.899,1626,2.899,1627,2.611,1628,2.899,1629,2.899,1630,2.899,1631,2.899,1632,2.899,1633,2.899,1634,2.899,1635,2.899,1636,2.899,1637,2.899,1639,3.284,1650,3.284,1809,1.765,2036,2.899,2240,2.22,2241,4.605,2242,3.869,2243,4.605,2244,4.605,2245,5.089,2246,5.089,2247,5.089,2248,4.605,2249,2.615,2250,2.615,2251,3.869,2252,2.615,2253,3.869,2254,3.869,2255,2.615,2256,3.869,2257,2.615,2258,2.615,2259,3.869,2260,3.869,2261,2.615,2262,2.615,2263,2.615,2264,2.615,2265,2.615,2266,3.869,2267,2.615,2268,2.615,2269,2.615,2270,2.615,2271,2.615,2272,4.605,2273,2.615,2274,3.869,2275,2.615,2276,2.615,2277,2.615,2278,2.615,2279,2.615,2280,2.615,2281,2.615,2282,2.615,2283,2.615,2284,2.615,2285,2.615,2286,2.615,2287,2.615,2288,2.615,2289,2.615,2290,3.869,2291,3.869,2292,3.869,2293,3.869,2294,3.869]],["title/coverage.html",[2295,3.993]],["body/coverage.html",[0,0.283,1,0.985,8,0.206,9,3.698,13,0.217,14,0.217,33,0.985,34,0.985,79,0.025,81,0.277,147,0.985,149,0.985,152,0.985,153,0.985,155,0.985,157,0.985,160,0.985,162,0.985,164,0.985,168,0.985,171,0.985,173,0.985,175,1.049,178,0.985,180,0.985,183,0.985,187,0.019,188,0.019,189,3.109,190,2.94,192,3.698,227,1.645,248,3.698,370,3.698,371,3.698,372,3.698,409,2.281,457,2.281,511,3.698,528,2.466,530,2.681,531,2.466,532,1.431,541,1.623,547,1.976,633,2.681,662,1.976,801,4.491,809,1.864,810,1.976,812,3.888,838,2.466,841,2.681,843,3.698,888,3.698,899,3.698,1003,3.698,1077,1.847,1139,3.698,1178,3.698,1190,3.698,1276,3.698,1277,2.94,1278,3.698,1316,3.698,1361,3.698,1362,3.698,1389,2.466,1406,2.681,1446,3.698,1452,3.698,1474,3.698,1548,3.698,1727,3.698,1731,3.698,1732,3.698,1751,3.698,1779,3.698,1826,3.698,1827,3.698,1828,3.698,2017,2.94,2018,3.698,2030,3.698,2070,3.264,2071,3.698,2092,3.264,2093,3.698,2115,3.698,2145,3.698,2147,3.698,2240,3.698,2295,3.698,2296,4.356,2297,4.356,2298,4.356,2299,6.318,2300,3.698,2301,5.493,2302,3.698,2303,6.318,2304,3.698,2305,3.698,2306,6.318,2307,4.356,2308,4.356,2309,5.493,2310,5.493,2311,6.318,2312,5.493,2313,4.356,2314,5.493,2315,4.356,2316,4.356,2317,4.356,2318,4.356,2319,6.017,2320,6.513,2321,5.493,2322,4.356,2323,4.356,2324,4.356,2325,4.356]],["title/dependencies.html",[2326,2.436,2327,3.515]],["body/dependencies.html",[79,0.025,114,0.634,116,1.462,120,2.127,187,0.021,188,0.021,228,3.297,229,2.606,453,2.127,456,2.43,2327,4.547,2328,5.356,2329,7.09,2330,5.356,2331,5.356,2332,5.356,2333,6.226,2334,5.285,2335,5.356,2336,5.356,2337,5.356,2338,5.356,2339,5.356,2340,5.356,2341,5.356,2342,5.356,2343,5.356,2344,5.356,2345,5.356,2346,5.356]],["title/index.html",[39,0.159,2347,2.87,2348,2.87]],["body/index.html",[0,0.25,2,1.104,4,0.231,16,1.253,79,0.02,85,0.952,185,1.177,187,0.02,188,0.02,229,3.2,349,1.509,662,2.216,926,4.147,1530,3.66,2167,4.147,2204,4.147,2334,4.147,2349,6.332,2350,4.885,2351,5.896,2352,6.731,2353,4.147,2354,4.885,2355,5.896,2356,6.332,2357,4.885,2358,6.731,2359,6.839,2360,6.839,2361,4.885,2362,5.896,2363,4.885,2364,4.885,2365,5.896,2366,4.885,2367,4.885,2368,4.885,2369,4.885,2370,4.885,2371,5.896,2372,5.896,2373,4.885,2374,4.885,2375,4.885,2376,6.332,2377,4.885,2378,4.885,2379,4.885,2380,4.885,2381,4.885,2382,4.885,2383,4.885,2384,6.332,2385,4.885,2386,4.885,2387,4.885,2388,4.885,2389,4.885,2390,4.885,2391,4.885,2392,4.885,2393,4.885,2394,5.896,2395,6.332,2396,4.885,2397,4.885,2398,4.885,2399,4.885,2400,4.885,2401,6.332,2402,4.885,2403,6.839,2404,4.885,2405,5.896,2406,4.885,2407,4.885,2408,4.885,2409,4.885,2410,4.885,2411,4.885,2412,4.885,2413,4.885,2414,4.885,2415,4.885,2416,4.885,2417,4.885,2418,4.885,2419,4.885,2420,4.885,2421,3.66,2422,4.885,2423,4.885]],["title/modules.html",[2424,3.993]],["body/modules.html",[79,0.022,187,0.022,188,0.022,2424,4.813]],["title/overview.html",[2421,3.525]],["body/overview.html",[2,1.27,79,0.022,187,0.022,188,0.022,191,3.791,811,2.549,842,2.549,1036,4.209,1597,4.795,2421,4.209,2425,5.618]],["title/properties.html",[40,0.298,2326,2.436]],["body/properties.html",[40,0.407,79,0.023,187,0.022,188,0.022,2353,4.797,2426,5.651]],["title/miscellaneous/variables.html",[2427,2.436,2428,3.515]],["body/miscellaneous/variables.html",[13,0.278,14,0.274,15,3.54,21,0.863,24,2.887,26,2.128,39,0.259,45,1.747,53,0.863,54,3.881,56,0.902,68,0.597,70,2.799,73,1.747,79,0.025,81,0.298,83,2.887,85,0.929,86,0.997,87,1.287,88,3.981,89,1.219,90,1.06,99,1.747,128,1.385,134,1.448,139,1.219,181,1.219,187,0.019,188,0.019,189,2.655,190,3.165,201,0.603,202,0.757,206,1.475,215,2.456,221,3.165,223,2.456,224,0.931,229,3.027,242,3.981,275,0.681,278,1.989,281,3.514,406,1.67,735,3.258,829,3.255,903,2.655,1050,3.514,1141,3.881,1388,3.981,1487,3.981,1585,3.981,2300,3.981,2302,4.882,2304,3.981,2305,4.882,2427,3.981,2428,3.981,2429,4.691,2430,4.691,2431,4.691,2432,4.691,2433,5.752,2434,4.691,2435,5.752,2436,5.752,2437,4.691,2438,4.691,2439,4.691,2440,4.691,2441,4.691,2442,4.691,2443,4.691,2444,5.752,2445,4.691,2446,5.752,2447,4.691,2448,4.691,2449,4.691,2450,4.691,2451,4.691,2452,4.691,2453,4.691,2454,4.691,2455,4.691,2456,4.691,2457,4.691,2458,4.691,2459,4.691,2460,5.752,2461,4.691,2462,4.691,2463,4.691,2464,4.691,2465,4.691,2466,4.691,2467,4.691,2468,4.691]]],"invertedIndex":[["",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":356,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["0.0.0",{"_index":2426,"title":{},"body":{"properties.html":{}}}],["0.04",{"_index":1118,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.05",{"_index":770,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["0.06",{"_index":780,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.08",{"_index":798,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["0.1",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["0.15",{"_index":1359,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.15.0",{"_index":2346,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1542,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.25",{"_index":1544,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.25rem",{"_index":1132,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.2s",{"_index":794,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["0.35rem",{"_index":1356,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.3rem",{"_index":1537,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.3s",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.4s",{"_index":1432,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["0.5rem",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.6",{"_index":1306,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["0.6rem",{"_index":1538,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["0.6s",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.7",{"_index":1442,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["0.75rem",{"_index":784,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["0.7rem",{"_index":2011,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["0.85rem",{"_index":1721,"title":{},"body":{"components/PerfilComponent.html":{}}}],["0.875rem",{"_index":1115,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.8rem",{"_index":1130,"title":{},"body":{"components/DetalleComponent.html":{}}}],["0.95rem",{"_index":359,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["000",{"_index":1274,"title":{},"body":{"components/LoginComponent.html":{}}}],["098",{"_index":1167,"title":{},"body":{"components/FooterComponent.html":{}}}],["0d6efd",{"_index":1722,"title":{},"body":{"components/PerfilComponent.html":{}}}],["1",{"_index":324,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["1).padstart(2",{"_index":2060,"title":{},"body":{"injectables/ReportService.html":{}}}],["1.05rem",{"_index":1533,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.125rem",{"_index":1111,"title":{},"body":{"components/DetalleComponent.html":{}}}],["1.15rem",{"_index":2000,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.25rem",{"_index":1109,"title":{},"body":{"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{}}}],["1.2rem",{"_index":2003,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.4rem",{"_index":2012,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.5rem",{"_index":765,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.6",{"_index":2004,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.7",{"_index":2001,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["1.75rem",{"_index":1113,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["1.8s",{"_index":1436,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["1.amazonaws.com/api/usuarios",{"_index":2218,"title":{},"body":{"injectables/UserService.html":{}}}],["1/1",{"_index":2303,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["10/10",{"_index":2314,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":801,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1307,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["100vh",{"_index":1818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":775,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["11",{"_index":1942,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["11/11",{"_index":2311,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1169,"title":{},"body":{"components/FooterComponent.html":{}}}],["1200px",{"_index":1428,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["12px",{"_index":2007,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["13/13",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["140px",{"_index":1315,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["14px",{"_index":1998,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["15px",{"_index":1439,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["16px",{"_index":1308,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["180px",{"_index":2016,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["19",{"_index":2425,"title":{},"body":{"overview.html":{}}}],["19.0.6",{"_index":2354,"title":{},"body":{"index.html":{}}}],["19/19",{"_index":2318,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":785,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["1rem",{"_index":762,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["2",{"_index":1036,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"overview.html":{}}}],["2.25rem",{"_index":772,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["2.3.0",{"_index":2344,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["2/2",{"_index":2313,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1547,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["20.0.3",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["20.0.4",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":1166,"title":{},"body":{"components/FooterComponent.html":{}}}],["2025",{"_index":1171,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["20px",{"_index":797,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["212529",{"_index":1723,"title":{},"body":{"components/PerfilComponent.html":{}}}],["22/22",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["227",{"_index":1168,"title":{},"body":{"components/FooterComponent.html":{}}}],["24/24",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["245",{"_index":1170,"title":{},"body":{"components/FooterComponent.html":{}}}],["24px",{"_index":1110,"title":{},"body":{"components/DetalleComponent.html":{}}}],["25",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["255",{"_index":1358,"title":{},"body":{"components/NavbarComponent.html":{}}}],["27/28",{"_index":2308,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":510,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["2rem",{"_index":494,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["3",{"_index":806,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["3/3",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":1129,"title":{},"body":{"components/DetalleComponent.html":{}}}],["3663",{"_index":1156,"title":{},"body":{"components/FooterComponent.html":{}}}],["36px",{"_index":1120,"title":{},"body":{"components/DetalleComponent.html":{}}}],["3px",{"_index":778,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["3rem",{"_index":1997,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["4",{"_index":1037,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["4.0.12",{"_index":2336,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2123,"title":{},"body":{"injectables/ScoreService.html":{}}}],["4/4",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{}}}],["442",{"_index":1165,"title":{},"body":{"components/FooterComponent.html":{}}}],["444",{"_index":1114,"title":{},"body":{"components/DetalleComponent.html":{}}}],["45px",{"_index":1360,"title":{},"body":{"components/NavbarComponent.html":{}}}],["48px",{"_index":1275,"title":{},"body":{"components/LoginComponent.html":{}}}],["4px",{"_index":504,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["5",{"_index":553,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["5.3.6",{"_index":2341,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{}}}],["500",{"_index":1430,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["555",{"_index":1135,"title":{},"body":{"components/DetalleComponent.html":{}}}],["56",{"_index":1154,"title":{},"body":{"components/FooterComponent.html":{}}}],["5px",{"_index":1718,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1904,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["6.7.2",{"_index":2339,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2306,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":781,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["60px",{"_index":502,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["6px",{"_index":768,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["7",{"_index":1380,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["7.8.0",{"_index":2342,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":773,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["768px",{"_index":1444,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["8",{"_index":1597,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"overview.html":{}}}],["8/8",{"_index":2299,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":777,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["888",{"_index":1116,"title":{},"body":{"components/DetalleComponent.html":{}}}],["8px",{"_index":506,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["9",{"_index":1155,"title":{},"body":{"components/FooterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["9/9",{"_index":2312,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1309,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["90px",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["920px",{"_index":1996,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["9565",{"_index":1157,"title":{},"body":{"components/FooterComponent.html":{}}}],["96",{"_index":2307,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1131,"title":{},"body":{"components/DetalleComponent.html":{}}}],["9]+/g",{"_index":715,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["_",{"_index":1705,"title":{},"body":{"components/PerfilComponent.html":{}}}],["abre",{"_index":1851,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["abri",{"_index":1030,"title":{},"body":{"components/DetalleComponent.html":{}}}],["absolute",{"_index":774,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["academicas",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["académico",{"_index":1917,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["académicos",{"_index":1158,"title":{},"body":{"components/FooterComponent.html":{}}}],["acc",{"_index":1679,"title":{},"body":{"components/PerfilComponent.html":{}}}],["acceder",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{}}}],["acceso",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["accesos",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accessors",{"_index":396,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["acciones",{"_index":1281,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["acción",{"_index":1291,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"injectables/PostService.html":{}}}],["account",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["account.idtokenclaims",{"_index":1348,"title":{},"body":{"components/NavbarComponent.html":{}}}],["account.name",{"_index":2222,"title":{},"body":{"injectables/UserService.html":{}}}],["account.username",{"_index":2223,"title":{},"body":{"injectables/UserService.html":{}}}],["acept",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{}}}],["acepta",{"_index":1841,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptación",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptadas",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aceptado",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aceptarlas",{"_index":1830,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aceptarreglas",{"_index":1836,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["acosadores",{"_index":1861,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["activa",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["activas",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{}}}],["activatedroute",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["activatedroutesnapshot",{"_index":2076,"title":{},"body":{"guards/RoleGuard.html":{}}}],["active",{"_index":366,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/UserService.html":{}}}],["actividades",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["activo",{"_index":1342,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["actual",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["actual.mensaje",{"_index":1422,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["actual.titulo",{"_index":1421,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["actual_component",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["actuales",{"_index":1508,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["actualiza",{"_index":549,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"injectables/PostCategoryService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["actualizaciones",{"_index":1336,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actualizada",{"_index":1744,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["actualizado",{"_index":872,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{}}}],["actualizar",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"injectables/PostCategoryService.html":{},"components/UsuariosComponent.html":{}}}],["actualmente",{"_index":440,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["actuar",{"_index":1930,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["actúa",{"_index":890,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["acuerdo",{"_index":1995,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ad",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["additional",{"_index":2413,"title":{},"body":{"index.html":{}}}],["adecuado",{"_index":1876,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{}}}],["adecuados",{"_index":865,"title":{},"body":{"injectables/CommentService.html":{}}}],["admin",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["admin.component.html",{"_index":387,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.scss",{"_index":386,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts",{"_index":372,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["admin.component.ts:108",{"_index":415,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:22",{"_index":442,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:25",{"_index":434,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:28",{"_index":430,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:31",{"_index":429,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:34",{"_index":438,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:37",{"_index":446,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:42",{"_index":425,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:55",{"_index":450,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:64",{"_index":403,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:72",{"_index":410,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:80",{"_index":398,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin.component.ts:88",{"_index":420,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["admin/categorias",{"_index":371,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["administra",{"_index":486,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["administrador",{"_index":2028,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{}}}],["administradores",{"_index":1364,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["administrar",{"_index":374,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["administrativa",{"_index":889,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["administrativo",{"_index":1475,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["adminonly",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["agregar",{"_index":328,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{}}}],["ahora",{"_index":1960,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["al",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["alameda",{"_index":1607,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["alert",{"_index":1133,"title":{},"body":{"components/DetalleComponent.html":{}}}],["alert('comentario",{"_index":1092,"title":{},"body":{"components/DetalleComponent.html":{}}}],["alert('error",{"_index":702,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alert('no",{"_index":686,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alert('publicación",{"_index":708,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["alert('¡publicación",{"_index":696,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["alerta",{"_index":1434,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["algún",{"_index":1967,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["align",{"_index":1122,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["all.length",{"_index":1687,"title":{},"body":{"components/PerfilComponent.html":{}}}],["all.reduce((acc",{"_index":1677,"title":{},"body":{"components/PerfilComponent.html":{}}}],["almacenada",{"_index":2074,"title":{},"body":{"guards/RoleGuard.html":{}}}],["almacenado",{"_index":2101,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["almacenados",{"_index":1060,"title":{},"body":{"components/DetalleComponent.html":{}}}],["almacenamiento",{"_index":2166,"title":{},"body":{"injectables/UserService.html":{}}}],["almacenar",{"_index":2094,"title":{},"body":{"injectables/RoleService.html":{}}}],["alonso",{"_index":1609,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["alt",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["alto",{"_index":1622,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["amarillo",{"_index":360,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["amigable",{"_index":294,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{}}}],["andrés",{"_index":1633,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["angular",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":453,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":883,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":456,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2333,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{},"dependencies.html":{}}}],["anidadas",{"_index":1271,"title":{},"body":{"components/LoginComponent.html":{}}}],["animation",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["ante",{"_index":1855,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["anterior",{"_index":1715,"title":{},"body":{"components/PerfilComponent.html":{}}}],["anteriores",{"_index":261,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["antes",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["antonio",{"_index":1611,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["anónimo",{"_index":1085,"title":{},"body":{"components/DetalleComponent.html":{}}}],["api",{"_index":875,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["api.us",{"_index":2216,"title":{},"body":{"injectables/UserService.html":{}}}],["apiurl",{"_index":844,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["aplica",{"_index":296,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/Report.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/RoleService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["apología",{"_index":1883,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["apoquindo",{"_index":1626,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["apoyo",{"_index":1991,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["app",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["app.component.html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.ts",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":2365,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apuestas",{"_index":1885,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["aqu",{"_index":725,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NavbarComponent.html":{}}}],["arauco",{"_index":1631,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["archivo",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr",{"_index":1678,"title":{},"body":{"components/PerfilComponent.html":{}}}],["arr.length",{"_index":1680,"title":{},"body":{"components/PerfilComponent.html":{}}}],["array.from",{"_index":1702,"title":{},"body":{"components/PerfilComponent.html":{}}}],["arreglo",{"_index":299,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["artifacts",{"_index":2388,"title":{},"body":{"index.html":{}}}],["asegura",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["asignar",{"_index":620,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["asociada",{"_index":825,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["asociado",{"_index":2021,"title":{},"body":{"interfaces/Report.html":{}}}],["asociados",{"_index":869,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["aspectos",{"_index":896,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["asterisk",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":1353,"title":{},"body":{"components/NavbarComponent.html":{}}}],["autenticación",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["autenticado",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["authentication",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":190,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":507,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["automatically",{"_index":2366,"title":{},"body":{"index.html":{}}}],["automática",{"_index":1379,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["automáticamente",{"_index":1758,"title":{},"body":{"injectables/PostService.html":{}}}],["automático",{"_index":1401,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["autor",{"_index":1021,"title":{},"body":{"components/DetalleComponent.html":{}}}],["autorizada",{"_index":1181,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["autorizado",{"_index":2091,"title":{},"body":{"guards/RoleGuard.html":{}}}],["available",{"_index":2379,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":1119,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["avg",{"_index":724,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["ayudantias",{"_index":334,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["ayudantías",{"_index":335,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["azul",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["azure",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["azure/msal",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["azureuser",{"_index":1800,"title":{},"body":{"components/RegisterComponent.html":{}}}],["azureuser.email",{"_index":1803,"title":{},"body":{"components/RegisterComponent.html":{}}}],["azureuser.fullname",{"_index":1805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["año",{"_index":1142,"title":{},"body":{"components/FooterComponent.html":{}}}],["aún",{"_index":745,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["backend",{"_index":407,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["background",{"_index":352,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["badge",{"_index":804,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{}}}],["banner",{"_index":632,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["banner'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["banner.component",{"_index":634,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{}}}],["banner.component.html",{"_index":1370,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.scss",{"_index":1369,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts",{"_index":1362,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["banner.component.ts:20",{"_index":1395,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:23",{"_index":1394,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:26",{"_index":1390,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:29",{"_index":1392,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:32",{"_index":1403,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:35",{"_index":1398,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:40",{"_index":1386,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:58",{"_index":1378,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:68",{"_index":1375,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner.component.ts:76",{"_index":1382,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["banner/notificacion",{"_index":633,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["bar",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barra",{"_index":1317,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basa",{"_index":2073,"title":{},"body":{"guards/RoleGuard.html":{}}}],["base",{"_index":276,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":2165,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":2209,"title":{},"body":{"injectables/UserService.html":{}}}],["bernardo",{"_index":1624,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["bg",{"_index":1272,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["bienvenido/a",{"_index":1815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["blanco",{"_index":779,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["block",{"_index":500,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["body",{"_index":805,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{}}}],["bold",{"_index":369,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["book",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["bootstrap",{"_index":2340,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":508,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["boton",{"_index":1825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["botones",{"_index":2013,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["bottom",{"_index":771,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["botón",{"_index":1914,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["box",{"_index":766,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["breadcrumb",{"_index":251,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["breadcrumb'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["breadcrumb.component.html",{"_index":267,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":266,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":461,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["breadcrumbcomponent",{"_index":147,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["breve",{"_index":1729,"title":{},"body":{"interfaces/PostCategory.html":{}}}],["browser",{"_index":2334,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["btn",{"_index":803,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["build",{"_index":2384,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":2385,"title":{},"body":{"index.html":{}}}],["button",{"_index":788,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["búsqueda",{"_index":593,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["c",{"_index":474,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.description",{"_index":491,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.name",{"_index":490,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.name.tolowercase().includes(filtro",{"_index":472,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["c.status",{"_index":492,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["cabecera",{"_index":763,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cada",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/ScoreService.html":{}}}],["calcula",{"_index":1576,"title":{},"body":{"components/PerfilComponent.html":{}}}],["calcular",{"_index":2116,"title":{},"body":{"injectables/ScoreService.html":{}}}],["calificaciones",{"_index":622,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["calificación",{"_index":546,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["calificar",{"_index":533,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["calificar(pub",{"_index":540,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["calificar(valor",{"_index":1017,"title":{},"body":{"components/DetalleComponent.html":{}}}],["cambia",{"_index":1571,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cambiarpagina",{"_index":1562,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cambiarpagina(pagina",{"_index":1569,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cambio",{"_index":1585,"title":{},"body":{"components/PerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["cambios",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":1540,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["campus",{"_index":1605,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["canactivate",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":2075,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cancela",{"_index":399,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["cancelar",{"_index":393,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/UsuariosComponent.html":{}}}],["cancelaredicion",{"_index":2246,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cancelarlogout",{"_index":1322,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cancelarrechazo",{"_index":1837,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cantidad",{"_index":837,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["caracteres",{"_index":575,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["card",{"_index":791,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["carga",{"_index":404,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["cargadas",{"_index":432,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{}}}],["cargado",{"_index":646,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cargados",{"_index":2266,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cargan",{"_index":1503,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["cargando",{"_index":561,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["cargar",{"_index":394,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["cargarnotificaciones",{"_index":1481,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["cargarpublicaciones",{"_index":534,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["cargarpublicaciones(iduser",{"_index":1574,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cargarusuarios",{"_index":2247,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["cariño",{"_index":1175,"title":{},"body":{"components/FooterComponent.html":{}}}],["carlos",{"_index":1625,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["caso",{"_index":1925,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["cat",{"_index":413,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{}}}],["cat.adminonly",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.description",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.name",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cat.status",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoria",{"_index":280,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["categoria.idcategory",{"_index":652,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoria.name",{"_index":654,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoria/${slug",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["categoriaform",{"_index":388,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categoriaid",{"_index":519,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorianombre",{"_index":520,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorias",{"_index":382,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{}}}],["categorias'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["categorias.component.html",{"_index":518,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categorias.component.scss",{"_index":517,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["categoriasadmincomponent",{"_index":149,"title":{"components/CategoriasAdminComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["categoriascomponent",{"_index":152,"title":{"components/CategoriasComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["categoriasfiltradas",{"_index":397,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categories",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["categories.find(cat",{"_index":648,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["category",{"_index":1736,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service",{"_index":459,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["category.service.ts",{"_index":1732,"title":{},"body":{"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:15",{"_index":1746,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:18",{"_index":1747,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:24",{"_index":1740,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:37",{"_index":1735,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:47",{"_index":1743,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["category.service.ts:55",{"_index":1739,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["categoryid",{"_index":1765,"title":{},"body":{"injectables/PostService.html":{}}}],["categoryservice",{"_index":389,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["categoría",{"_index":411,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["categorías",{"_index":375,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{}}}],["cats",{"_index":1659,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ced4da",{"_index":787,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["center",{"_index":1123,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["cerrando",{"_index":1847,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cerrar",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["chart",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["checkandredirect",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkandredirect(email",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{}}}],["checkuserexists",{"_index":2150,"title":{},"body":{"injectables/UserService.html":{}}}],["checkuserexists(email",{"_index":2168,"title":{},"body":{"injectables/UserService.html":{}}}],["child",{"_index":1534,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["choose",{"_index":2409,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cierre",{"_index":1325,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cl",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claims",{"_index":1347,"title":{},"body":{"components/NavbarComponent.html":{}}}],["claro",{"_index":1908,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["clases",{"_index":1270,"title":{},"body":{"components/LoginComponent.html":{}}}],["clasificarse",{"_index":1728,"title":{},"body":{"interfaces/PostCategory.html":{}}}],["class",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["clave",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["clearrole",{"_index":2151,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":2352,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":878,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["close",{"_index":1438,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["code",{"_index":2371,"title":{},"body":{"index.html":{}}}],["cog",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coincide",{"_index":2108,"title":{},"body":{"injectables/RoleService.html":{}}}],["colaboración",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["colaborativa",{"_index":1970,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["colaborativo",{"_index":1871,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["color",{"_index":353,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["color.adjust($amarillo",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["color.adjust($azul",{"_index":1545,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["color.adjust($gris",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["com",{"_index":1026,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.content",{"_index":1105,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.date",{"_index":1103,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.iduser",{"_index":1102,"title":{},"body":{"components/DetalleComponent.html":{}}}],["com.iduser.charat(0).touppercase",{"_index":1101,"title":{},"body":{"components/DetalleComponent.html":{}}}],["come",{"_index":2407,"title":{},"body":{"index.html":{}}}],["comentado",{"_index":2287,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["comentar",{"_index":1015,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentario",{"_index":814,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["comentario:hover",{"_index":1125,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentarioform",{"_index":1010,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comentarios",{"_index":615,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["comercial",{"_index":1875,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comienzo",{"_index":330,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["command",{"_index":2401,"title":{},"body":{"index.html":{}}}],["comment",{"_index":810,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["commentrequests",{"_index":1671,"title":{},"body":{"components/PerfilComponent.html":{}}}],["commentrequests.length",{"_index":1674,"title":{},"body":{"components/PerfilComponent.html":{}}}],["comments",{"_index":1011,"title":{},"body":{"components/DetalleComponent.html":{}}}],["comments.length",{"_index":1100,"title":{},"body":{"components/DetalleComponent.html":{}}}],["commentservice",{"_index":841,"title":{"injectables/CommentService.html":{}},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"coverage.html":{}}}],["commonmodule",{"_index":383,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["como",{"_index":278,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["comparaciones",{"_index":1506,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["comparando",{"_index":1494,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["compartir",{"_index":727,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["compile",{"_index":2386,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2378,"title":{},"body":{"index.html":{}}}],["completo",{"_index":1794,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["componen",{"_index":300,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["componentes",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["components/navbar/navbar.component",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["comunicar",{"_index":1365,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["comunidad",{"_index":735,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["comunidad'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["comunidad.component.html",{"_index":1834,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.scss",{"_index":1833,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts",{"_index":1828,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["comunidad.component.ts:104",{"_index":1850,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:112",{"_index":1848,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:139",{"_index":1844,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:21",{"_index":1953,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:24",{"_index":1952,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:27",{"_index":1853,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:32",{"_index":1951,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad.component.ts:83",{"_index":1840,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["comunidad/reglas",{"_index":1827,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["comunitarias",{"_index":2146,"title":{},"body":{"interfaces/User.html":{}}}],["con",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["concedido",{"_index":2024,"title":{},"body":{"interfaces/Report.html":{}}}],["concepción",{"_index":1634,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["concretarse",{"_index":1926,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conecta",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["conectaduoc",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["config",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["configura",{"_index":1388,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"miscellaneous/variables.html":{}}}],["configuracion",{"_index":893,"title":{},"body":{"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{}}}],["configuracion'},{'name",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["configuracion.component.html",{"_index":894,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracion.component.scss",{"_index":895,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["configuracioncomponent",{"_index":153,"title":{"components/ConfiguracionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["configuraciones",{"_index":1749,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["configuración",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm('¿eliminar",{"_index":484,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["confirma",{"_index":1302,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmacion",{"_index":1283,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion'},{'name",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["confirmacion.component",{"_index":1340,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmacion.component.html",{"_index":1285,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.scss",{"_index":1284,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts",{"_index":1278,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["confirmacion.component.ts:18",{"_index":1294,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:23",{"_index":1289,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:29",{"_index":1296,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:34",{"_index":1301,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion.component.ts:39",{"_index":1298,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmacion/modal",{"_index":1277,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["confirmación",{"_index":419,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["confirmar",{"_index":1280,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["confirmarlogout",{"_index":1323,"title":{},"body":{"components/NavbarComponent.html":{}}}],["confirmarrechazo",{"_index":1838,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conjunto",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conos",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consentimiento",{"_index":1892,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["consola",{"_index":1341,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.error('error",{"_index":701,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.error('login",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('logout",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('account",{"_index":1344,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('existe",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('id",{"_index":1345,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log('redirijo",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('slug",{"_index":645,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["console.warn('no",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.warn(`acceso",{"_index":2089,"title":{},"body":{"guards/RoleGuard.html":{}}}],["const",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/UserService.html":{}}}],["constructor(http",{"_index":1455,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["constructor(notificacionservice",{"_index":1484,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["constructor(private",{"_index":1470,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["construido",{"_index":1985,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["construir",{"_index":591,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["construye",{"_index":273,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["consultar",{"_index":621,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["container",{"_index":351,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["contenedor",{"_index":759,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/LoginComponent.html":{}}}],["contenido",{"_index":569,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["content",{"_index":498,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{},"components/UsuariosComponent.html":{}}}],["continua",{"_index":1614,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["continuar",{"_index":1817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contrario",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["control",{"_index":1138,"title":{},"body":{"components/DetalleComponent.html":{}}}],["controla",{"_index":600,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["controlado",{"_index":1950,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["conversación",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["convierte",{"_index":287,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["convivencia",{"_index":1981,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["core/services/comment.service",{"_index":1061,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/notificacion.service",{"_index":1407,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["core/services/post",{"_index":458,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/post.service",{"_index":638,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/report.service",{"_index":640,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["core/services/score.service",{"_index":641,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["core/services/user.service",{"_index":639,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["correctamente",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["correcto",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correo",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["correos",{"_index":1896,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["correspondan",{"_index":1941,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["corresponde",{"_index":2110,"title":{},"body":{"injectables/RoleService.html":{}}}],["correspondiente",{"_index":562,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["correspondientes",{"_index":1656,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cortesía",{"_index":1867,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["corto",{"_index":1498,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["coverage",{"_index":2295,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":826,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["crea",{"_index":423,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["creación",{"_index":435,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["creada",{"_index":697,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["creado",{"_index":860,"title":{},"body":{"injectables/CommentService.html":{},"injectables/ReportService.html":{}}}],["crear",{"_index":376,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["crear(nueva",{"_index":1459,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["create",{"_index":846,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["create(category",{"_index":1734,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["create(comment",{"_index":850,"title":{},"body":{"injectables/CommentService.html":{}}}],["createddate",{"_index":692,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["createpost",{"_index":1752,"title":{},"body":{"injectables/PostService.html":{}}}],["createpost(post",{"_index":1755,"title":{},"body":{"injectables/PostService.html":{}}}],["creemos",{"_index":1969,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["creencias",{"_index":1913,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["crud",{"_index":1488,"title":{},"body":{"components/NotificacionesComponent.html":{},"injectables/UserService.html":{}}}],["críticas",{"_index":1282,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["cualquier",{"_index":1886,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cuando",{"_index":1179,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["cuenta",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cuentas",{"_index":1945,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["cuerpo",{"_index":1451,"title":{},"body":{"interfaces/NotificacionGlobal.html":{}}}],["cuidar",{"_index":1931,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["culturales",{"_index":337,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["cumple",{"_index":2080,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cumulativepath",{"_index":317,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["currentindex",{"_index":1371,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["currentroute",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.snapshot.data",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["currentyear",{"_index":1148,"title":{},"body":{"components/FooterComponent.html":{}}}],["cursor",{"_index":2008,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dada",{"_index":1044,"title":{},"body":{"components/DetalleComponent.html":{}}}],["dark",{"_index":2010,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dashboard",{"_index":279,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{}}}],["dashboard'},{'name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["dashboard.component.html",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/${slug",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":155,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/NotificacionesComponent.html":{}}}],["data['showfooter",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["data['shownavbar",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":816,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["date().getfullyear",{"_index":1149,"title":{},"body":{"components/FooterComponent.html":{}}}],["date().toisostring",{"_index":693,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ReportService.html":{}}}],["date().toisostring().split('t')[0",{"_index":1514,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":752,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":807,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{}}}],["datos",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["datos).subscribe",{"_index":481,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["dd",{"_index":1501,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["ddd",{"_index":1137,"title":{},"body":{"components/DetalleComponent.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["deben",{"_index":1928,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["debes",{"_index":1947,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["decoration",{"_index":362,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1295,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["define",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["definidas",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definido",{"_index":2102,"title":{},"body":{"injectables/RoleService.html":{}}}],["del",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["delete",{"_index":847,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["delete(id",{"_index":1738,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["delete(idcomment",{"_index":861,"title":{},"body":{"injectables/CommentService.html":{}}}],["delete(idpost",{"_index":1759,"title":{},"body":{"injectables/PostService.html":{}}}],["deleteuser",{"_index":2152,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":2172,"title":{},"body":{"injectables/UserService.html":{}}}],["denegado",{"_index":2090,"title":{},"body":{"guards/RoleGuard.html":{}}}],["dentro",{"_index":258,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["denuncias",{"_index":1915,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["dependencies",{"_index":2327,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deportes",{"_index":336,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/PostCategory.html":{}}}],["deportivas",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["derechos",{"_index":1172,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["derivar",{"_index":1902,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["desarrollado",{"_index":1174,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["desarrollar",{"_index":1187,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["desconocido",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"injectables/UserService.html":{}}}],["describe",{"_index":1290,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["descripcion",{"_index":1857,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["descripción",{"_index":488,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["desde",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["desea",{"_index":2107,"title":{},"body":{"injectables/RoleService.html":{}}}],["deseada",{"_index":1573,"title":{},"body":{"components/PerfilComponent.html":{}}}],["después",{"_index":1811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["destruir",{"_index":1383,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["detailed",{"_index":2418,"title":{},"body":{"index.html":{}}}],["detallado",{"_index":824,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["detalle",{"_index":1004,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detalle'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["detalle.component.html",{"_index":1009,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detalle.component.scss",{"_index":1008,"title":{},"body":{"components/DetalleComponent.html":{}}}],["detallecomponent",{"_index":157,"title":{"components/DetalleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["detecciones",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detección",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detiene",{"_index":1376,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["dev",{"_index":1177,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["development",{"_index":2355,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":451,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["diccionario",{"_index":597,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["dignidad",{"_index":1866,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dinámicamente",{"_index":252,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["dio",{"_index":2132,"title":{},"body":{"injectables/ScoreService.html":{}}}],["direcciones",{"_index":1897,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["directive",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["directives",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["directory",{"_index":2204,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["disabled",{"_index":1546,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["discriminatorios",{"_index":1860,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["display",{"_index":499,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["disponible",{"_index":1583,"title":{},"body":{"components/PerfilComponent.html":{}}}],["disponibles",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"components/RegisterComponent.html":{}}}],["dist",{"_index":2389,"title":{},"body":{"index.html":{}}}],["diversidad",{"_index":1910,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["document.title",{"_index":1068,"title":{},"body":{"components/DetalleComponent.html":{}}}],["documentation",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["drogas",{"_index":1884,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["dudas",{"_index":729,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["duoc",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["dynamic",{"_index":2335,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1466,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["e0e0e0",{"_index":1724,"title":{},"body":{"components/PerfilComponent.html":{}}}],["e2e",{"_index":2404,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":2406,"title":{},"body":{"index.html":{}}}],["e8f0fb",{"_index":1426,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["ease",{"_index":795,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["east",{"_index":2217,"title":{},"body":{"injectables/UserService.html":{}}}],["ecoduoc",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["edición",{"_index":400,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["editado",{"_index":2260,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["editando",{"_index":439,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["editar",{"_index":377,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["editar(cat",{"_index":408,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["editar(post",{"_index":1579,"title":{},"body":{"components/PerfilComponent.html":{}}}],["editar(user",{"_index":2251,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["editing",{"_index":390,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["educación",{"_index":1613,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["eee",{"_index":1117,"title":{},"body":{"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["ej",{"_index":1730,"title":{},"body":{"interfaces/PostCategory.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ejemplo",{"_index":835,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["el",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["elimina",{"_index":416,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["eliminación",{"_index":436,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["eliminadas",{"_index":743,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["eliminando",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eliminar",{"_index":378,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["eliminar(cat",{"_index":414,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["eliminar(id",{"_index":1463,"title":{},"body":{"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["eliminar(user",{"_index":2288,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["email",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["emitido",{"_index":1300,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["empático",{"_index":1906,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["en",{"_index":275,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["encargado",{"_index":249,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["encodedemail",{"_index":2226,"title":{},"body":{"injectables/UserService.html":{}}}],["encodeuricomponent(email",{"_index":2227,"title":{},"body":{"injectables/UserService.html":{}}}],["encontr",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["encuentros",{"_index":1923,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["end",{"_index":2403,"title":{},"body":{"index.html":{}}}],["enlaces",{"_index":1143,"title":{},"body":{"components/FooterComponent.html":{}}}],["enrutador",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enrutamiento",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["entorno",{"_index":1949,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["entre",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["enviar",{"_index":612,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["envía",{"_index":545,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{}}}],["envíos",{"_index":1051,"title":{},"body":{"components/DetalleComponent.html":{}}}],["err",{"_index":700,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":699,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["es",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["esa",{"_index":308,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["esactiva",{"_index":1482,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["esactiva(fechafin",{"_index":1492,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["esactiva(n.fechafin",{"_index":1522,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["escribi",{"_index":823,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["escucha",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["espacio",{"_index":1870,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["espacios",{"_index":578,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["especiales",{"_index":576,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["específica",{"_index":516,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["específico",{"_index":2041,"title":{},"body":{"injectables/ReportService.html":{}}}],["espera",{"_index":1919,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["esperado",{"_index":2105,"title":{},"body":{"injectables/RoleService.html":{}}}],["esperados",{"_index":2079,"title":{},"body":{"guards/RoleGuard.html":{}}}],["est",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["esta",{"_index":747,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{}}}],["establece",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estado",{"_index":489,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/User.html":{}}}],["estadísticas",{"_index":1551,"title":{},"body":{"components/PerfilComponent.html":{}}}],["estas",{"_index":1477,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["este",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["esto",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["estoy",{"_index":1994,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estrellas",{"_index":836,"title":{},"body":{"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["estrictamente",{"_index":1936,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiante",{"_index":2112,"title":{},"body":{"injectables/RoleService.html":{}}}],["estudiantes",{"_index":1986,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiantil",{"_index":1161,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["estudiantiles",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["estás",{"_index":1292,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["estén",{"_index":1920,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["etc",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{}}}],["event",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1297,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["evento",{"_index":1299,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["eventos",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evitar",{"_index":281,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":2359,"title":{},"body":{"index.html":{}}}],["exchange",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exclusivo",{"_index":1944,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["execute",{"_index":2396,"title":{},"body":{"index.html":{}}}],["existe",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["existente",{"_index":422,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{}}}],["existentes",{"_index":427,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["exists",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["exitoso",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["expectedrole",{"_index":2106,"title":{},"body":{"injectables/RoleService.html":{}}}],["expectedroles",{"_index":2085,"title":{},"body":{"guards/RoleGuard.html":{}}}],["expectedroles.includes(userrole",{"_index":2088,"title":{},"body":{"guards/RoleGuard.html":{}}}],["experiencia",{"_index":1974,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["expir",{"_index":1496,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["expirada",{"_index":1523,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["explora",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explícito",{"_index":1893,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["export",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["expuesto",{"_index":2206,"title":{},"body":{"injectables/UserService.html":{}}}],["f0f0f0",{"_index":1128,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["f0f8ff",{"_index":1134,"title":{},"body":{"components/DetalleComponent.html":{}}}],["f4b942",{"_index":1273,"title":{},"body":{"components/LoginComponent.html":{}}}],["f6f9ff",{"_index":1427,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["f8f9fa",{"_index":1725,"title":{},"body":{"components/PerfilComponent.html":{}}}],["f9f9f9",{"_index":1126,"title":{},"body":{"components/DetalleComponent.html":{}}}],["f9fafb",{"_index":1821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fa",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fadeinup",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fafafa",{"_index":1136,"title":{},"body":{"components/DetalleComponent.html":{}}}],["fallback",{"_index":1957,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["false",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["falsos",{"_index":1939,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["family",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["far",{"_index":754,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["fas",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fb",{"_index":391,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["fecha",{"_index":818,"title":{},"body":{"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["fechafin",{"_index":1448,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{}}}],["fechainicio",{"_index":1449,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{}}}],["fechas",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":1108,"title":{},"body":{"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["fff7e6",{"_index":1717,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ffffff",{"_index":1527,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["files",{"_index":2370,"title":{},"body":{"index.html":{}}}],["filter",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(cat",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filtra",{"_index":1764,"title":{},"body":{"injectables/PostService.html":{}}}],["filtradas",{"_index":452,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["filtrado",{"_index":513,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["filtrados",{"_index":1650,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["filtrando",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filtrar",{"_index":379,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["filtro",{"_index":469,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["filtrobusqueda",{"_index":521,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["filtrocategoria",{"_index":392,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["filtronombre",{"_index":2243,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["filtropost",{"_index":1555,"title":{},"body":{"components/PerfilComponent.html":{}}}],["fin",{"_index":1495,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["final",{"_index":2005,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["financiamiento",{"_index":1159,"title":{},"body":{"components/FooterComponent.html":{}}}],["fines",{"_index":1868,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fixed",{"_index":1305,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["flag",{"_index":1049,"title":{},"body":{"components/DetalleComponent.html":{}}}],["flex",{"_index":1121,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["flujo",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["focus",{"_index":1541,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["following",{"_index":2400,"title":{},"body":{"index.html":{}}}],["fomentamos",{"_index":1907,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["font",{"_index":357,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["fontawesome",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["footer",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["footer'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["footer.component.html",{"_index":1146,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1147,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":34,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["forbidden",{"_index":1184,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["forbidden.component.html",{"_index":1185,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.scss",{"_index":1186,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":160,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["forkjoin",{"_index":1657,"title":{},"body":{"components/PerfilComponent.html":{}}}],["forkjoin(commentrequests).subscribe(all",{"_index":1675,"title":{},"body":{"components/PerfilComponent.html":{}}}],["forkjoin(scorerequests).subscribe(all",{"_index":1684,"title":{},"body":{"components/PerfilComponent.html":{}}}],["form",{"_index":522,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["formato",{"_index":582,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{}}}],["formbuilder",{"_index":454,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formgroup",{"_index":428,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formsmodule",{"_index":385,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["formulario",{"_index":402,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["formularios",{"_index":444,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["foro",{"_index":761,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["fortalecer",{"_index":1989,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["fragmento",{"_index":293,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["framework",{"_index":2408,"title":{},"body":{"index.html":{}}}],["free",{"_index":2338,"title":{},"body":{"dependencies.html":{}}}],["frontend",{"_index":2194,"title":{},"body":{"injectables/UserService.html":{}}}],["fuera",{"_index":1927,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["fulldate",{"_index":1099,"title":{},"body":{"components/DetalleComponent.html":{}}}],["fullname",{"_index":2221,"title":{},"body":{"injectables/UserService.html":{}}}],["fullpath",{"_index":313,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["fullpath.split('/').filter(boolean",{"_index":316,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["funcionamiento",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futbol",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["futuro",{"_index":1188,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["g",{"_index":717,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["gap",{"_index":1312,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["garantizar",{"_index":1973,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["gener",{"_index":2022,"title":{},"body":{"interfaces/Report.html":{}}}],["generadas",{"_index":1757,"title":{},"body":{"injectables/PostService.html":{}}}],["generado",{"_index":1737,"title":{},"body":{"injectables/PostCategoryService.html":{},"interfaces/Report.html":{}}}],["generados",{"_index":858,"title":{},"body":{"injectables/CommentService.html":{}}}],["general",{"_index":760,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["generales",{"_index":897,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["generalmente",{"_index":1182,"title":{},"body":{"components/ForbiddenComponent.html":{},"injectables/ReportService.html":{}}}],["generar",{"_index":250,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["generate",{"_index":2376,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2350,"title":{},"body":{"index.html":{}}}],["gestiona",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["gestionar",{"_index":613,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["gestión",{"_index":1520,"title":{},"body":{"components/NotificacionesComponent.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{}}}],["getall",{"_index":1733,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["getall(categoryid",{"_index":1762,"title":{},"body":{"injectables/PostService.html":{}}}],["getallreports",{"_index":2031,"title":{},"body":{"injectables/ReportService.html":{}}}],["getaveragescore",{"_index":2117,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getaveragescore(idpost",{"_index":2121,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getazureuser",{"_index":2153,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid",{"_index":1753,"title":{},"body":{"injectables/PostService.html":{}}}],["getbyid(idpost",{"_index":1767,"title":{},"body":{"injectables/PostService.html":{}}}],["getbypostid",{"_index":848,"title":{},"body":{"injectables/CommentService.html":{}}}],["getbypostid(idpost",{"_index":866,"title":{},"body":{"injectables/CommentService.html":{}}}],["getcategoriasfiltradas",{"_index":449,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["getchild",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(route",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["gethoyiso",{"_index":1483,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["getiduser",{"_index":2154,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":2155,"title":{},"body":{"injectables/UserService.html":{}}}],["getpaginas",{"_index":1651,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getpostsfiltrados",{"_index":1645,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getpostspaginados",{"_index":1654,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getpublicacionesfiltradas",{"_index":629,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["getresumenscores",{"_index":2118,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getresumenscores(iduser",{"_index":2124,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getrole",{"_index":2096,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":2347,"title":{"index.html":{}},"body":{}}],["gettodas",{"_index":1453,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["gettotalpaginas",{"_index":1647,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getuser",{"_index":2156,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(email",{"_index":2179,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid",{"_index":2157,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(iduser",{"_index":2181,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserinitial",{"_index":1563,"title":{},"body":{"components/PerfilComponent.html":{}}}],["getuserscore",{"_index":2119,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getuserscore(idpost",{"_index":2130,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getusuariosfiltrados",{"_index":2268,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["getvigentes",{"_index":1454,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["global",{"_index":1141,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"miscellaneous/variables.html":{}}}],["globales",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"miscellaneous/variables.html":{}}}],["gracias",{"_index":1993,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["gradient(to",{"_index":1424,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["gris",{"_index":367,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["group",{"_index":1531,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["gráfica",{"_index":1882,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["guard",{"_index":189,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guarda",{"_index":421,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["guardar",{"_index":395,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/RegisterComponent.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["guardarregistro",{"_index":1787,"title":{},"body":{"components/RegisterComponent.html":{}}}],["guardarsede",{"_index":1564,"title":{},"body":{"components/PerfilComponent.html":{}}}],["guards",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["guiones",{"_index":579,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["género",{"_index":1911,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["h2",{"_index":1310,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["h4",{"_index":1719,"title":{},"body":{"components/PerfilComponent.html":{}}}],["h5",{"_index":1720,"title":{},"body":{"components/PerfilComponent.html":{}}}],["h6",{"_index":1532,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["ha",{"_index":829,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"miscellaneous/variables.html":{}}}],["hacia",{"_index":307,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ConfiguracionComponent.html":{}}}],["hasrole",{"_index":2097,"title":{},"body":{"injectables/RoleService.html":{}}}],["hasrole(expectedrole",{"_index":2103,"title":{},"body":{"injectables/RoleService.html":{}}}],["hay",{"_index":746,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["hazlo",{"_index":1352,"title":{},"body":{"components/NavbarComponent.html":{}}}],["header",{"_index":1127,"title":{},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["hecho",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":503,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["helpbuilding",{"_index":2383,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":1104,"title":{},"body":{"components/DetalleComponent.html":{}}}],["hidden",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["highlight",{"_index":1000,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hija",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["históricas",{"_index":1467,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["hover",{"_index":364,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["hoy",{"_index":1480,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["hoy.toisostring().split('t')[0",{"_index":1513,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["hoystr",{"_index":1512,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["html",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["http",{"_index":845,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2364,"title":{},"body":{"index.html":{}}}],["http://localhost:9090/api/comment",{"_index":873,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:9090/api/notificaciones",{"_index":1469,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["http://localhost:9090/api/post",{"_index":1745,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["http://localhost:9090/api/report",{"_index":2049,"title":{},"body":{"injectables/ReportService.html":{}}}],["http://localhost:9090/api/score",{"_index":2136,"title":{},"body":{"injectables/ScoreService.html":{}}}],["http://localhost:9090/api/usuarios",{"_index":2197,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclient",{"_index":882,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["https://yr3rp1l7fd.execute",{"_index":2215,"title":{},"body":{"injectables/UserService.html":{}}}],["iconmap",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["icono",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["id",{"_index":588,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idcategoria",{"_index":2125,"title":{},"body":{"injectables/ScoreService.html":{}}}],["idcategoria=${idcategoria",{"_index":2143,"title":{},"body":{"injectables/ScoreService.html":{}}}],["idcategory",{"_index":691,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["idcomment",{"_index":817,"title":{},"body":{"interfaces/Comment.html":{},"injectables/CommentService.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{}}}],["identidad",{"_index":1935,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["identifier",{"_index":2297,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idpost",{"_index":719,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["idreport",{"_index":2019,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["ids",{"_index":661,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["ids.foreach(id",{"_index":665,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["iduser",{"_index":669,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iduser).subscribe(score",{"_index":1073,"title":{},"body":{"components/DetalleComponent.html":{}}}],["iduser.tostring",{"_index":2234,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoran",{"_index":277,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["igual",{"_index":1968,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ilícito",{"_index":1887,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["impersonar",{"_index":1940,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["implements",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{}}}],["implica",{"_index":1982,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["import",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["important",{"_index":1819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["importante",{"_index":1367,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["imports",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["inactiva",{"_index":487,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{}}}],["inactivo",{"_index":2029,"title":{},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["inapropiadas",{"_index":740,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["inapropiado",{"_index":570,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["includes",{"_index":2373,"title":{},"body":{"index.html":{}}}],["including",{"_index":2417,"title":{},"body":{"index.html":{}}}],["inclusiva",{"_index":1971,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["inclusivo",{"_index":1905,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["incluye",{"_index":1894,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["incluyendo",{"_index":2128,"title":{},"body":{"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["indexados",{"_index":603,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["indica",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PostService.html":{}}}],["indicado",{"_index":2170,"title":{},"body":{"injectables/UserService.html":{}}}],["individual",{"_index":1005,"title":{},"body":{"components/DetalleComponent.html":{}}}],["infinite",{"_index":1437,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["información",{"_index":1366,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["information",{"_index":2416,"title":{},"body":{"index.html":{}}}],["infrinjan",{"_index":1900,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ingresado",{"_index":631,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["inicia",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["inicial",{"_index":1042,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inicializa",{"_index":426,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["inicializar",{"_index":272,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["iniciar",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["iniciarrotacion",{"_index":1373,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["inicio",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/LoginComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["inject",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["inject(activatedroute",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["inject(commentservice",{"_index":1034,"title":{},"body":{"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(formbuilder",{"_index":441,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["inject(httpclient",{"_index":876,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["inject(msalservice",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["inject(notificacionservice",{"_index":1402,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["inject(postcategoryservice",{"_index":433,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(postservice",{"_index":605,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(reportservice",{"_index":610,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["inject(router",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["inject(scoreservice",{"_index":618,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["inject(userservice",{"_index":626,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"components/UsuariosComponent.html":{}}}],["injectable",{"_index":227,"title":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":842,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["innecesarias",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":782,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{}}}],["input[type=\"date",{"_index":1528,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["input[type=\"text",{"_index":1529,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["inputs",{"_index":1286,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["instanceof",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["instancia",{"_index":1404,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["institucional",{"_index":1948,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["institucionales",{"_index":1946,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["integración",{"_index":2148,"title":{},"body":{"injectables/UserService.html":{}}}],["intenta",{"_index":1180,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{}}}],["intento",{"_index":1845,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["interactuar",{"_index":2200,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":809,"title":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":811,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":2191,"title":{},"body":{"injectables/UserService.html":{}}}],["interval",{"_index":1408,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["interval(7000).subscribe",{"_index":1417,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["intervalo",{"_index":1385,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["intro",{"_index":1999,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["invitamos",{"_index":1977,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["inyección",{"_index":1486,"title":{},"body":{"components/NotificacionesComponent.html":{},"guards/RoleGuard.html":{}}}],["inyecta",{"_index":1457,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["irrelevantes",{"_index":321,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isadmin",{"_index":2098,"title":{},"body":{"injectables/RoleService.html":{}}}],["islast",{"_index":322,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["isloggedin",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["iso",{"_index":820,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{}}}],["isstudent",{"_index":2099,"title":{},"body":{"injectables/RoleService.html":{}}}],["italic",{"_index":1824,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["item",{"_index":344,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["item.descripcion",{"_index":1984,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["item.label",{"_index":348,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.path",{"_index":347,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["item.titulo",{"_index":1983,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["items",{"_index":268,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{}}}],["joaquín",{"_index":1627,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["jp",{"_index":1176,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["junto",{"_index":555,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ForbiddenComponent.html":{}}}],["justify",{"_index":1124,"title":{},"body":{"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["karma",{"_index":2397,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":302,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["las",{"_index":406,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":346,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{}}}],["le",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{}}}],["leaf",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["left",{"_index":776,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["legend",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["legible",{"_index":291,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{}}}],["length",{"_index":1703,"title":{},"body":{"components/PerfilComponent.html":{}}}],["lenguaje",{"_index":1879,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["letra",{"_index":1582,"title":{},"body":{"components/PerfilComponent.html":{}}}],["library",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["light",{"_index":1269,"title":{},"body":{"components/LoginComponent.html":{}}}],["lightness",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["limpia",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["limpias",{"_index":1351,"title":{},"body":{"components/NavbarComponent.html":{}}}],["limpio",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{}}}],["line",{"_index":1112,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["linear",{"_index":1423,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["link",{"_index":800,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["list",{"_index":1530,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"index.html":{}}}],["lista",{"_index":431,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"components/UsuariosComponent.html":{}}}],["listar",{"_index":1476,"title":{},"body":{"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["literal",{"_index":297,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/UserService.html":{}}}],["llamamos",{"_index":1954,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["lo",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":523,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["local",{"_index":2167,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["localdatetime",{"_index":2057,"title":{},"body":{"injectables/ReportService.html":{}}}],["locale_id",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locales",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["localización",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localname",{"_index":2219,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage",{"_index":1329,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('conectareglasaceptadas",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('iduser",{"_index":2236,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('nombreusuario",{"_index":2220,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('userrole",{"_index":2113,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["localstorage.removeitem('conectareglasaceptadas",{"_index":1962,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.removeitem('name",{"_index":1964,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.removeitem('userrole",{"_index":1963,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('conectareglasaceptadas",{"_index":1956,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["localstorage.setitem('iduser",{"_index":2233,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('nombreusuario",{"_index":2232,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('userrole",{"_index":2230,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["login'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["login.component.html",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":162,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["logo",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["logout",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["los",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["lucro",{"_index":1869,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["lógica",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ReportService.html":{}}}],["maip",{"_index":1615,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["maneja",{"_index":628,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/ReportService.html":{}}}],["manejar",{"_index":443,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["manejo",{"_index":1813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mantiene",{"_index":2212,"title":{},"body":{"injectables/UserService.html":{}}}],["manualmente",{"_index":329,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["map(cat",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mapa",{"_index":332,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["mapa[slug",{"_index":341,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["mar",{"_index":1630,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["marca",{"_index":1849,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["marcar",{"_index":1955,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["marcarlo",{"_index":2046,"title":{},"body":{"injectables/ReportService.html":{}}}],["margin",{"_index":505,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["masks",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matching",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1878,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["math.ceil(this.postsfiltrados.length",{"_index":1700,"title":{},"body":{"components/PerfilComponent.html":{}}}],["max",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["media",{"_index":1443,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["mediante",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["mejora",{"_index":254,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["melipilla",{"_index":1616,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["mensaje",{"_index":1287,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["mensajes",{"_index":898,"title":{},"body":{"components/ConfiguracionComponent.html":{},"interfaces/NotificacionGlobal.html":{}}}],["mesa",{"_index":1151,"title":{},"body":{"components/FooterComponent.html":{}}}],["metadata",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["methods",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["mi",{"_index":1354,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["microsoft",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["min",{"_index":1314,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["minúsculas",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mis",{"_index":1711,"title":{},"body":{"components/PerfilComponent.html":{}}}],["miscellaneous",{"_index":2427,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miscore",{"_index":1012,"title":{},"body":{"components/DetalleComponent.html":{}}}],["mismo",{"_index":1052,"title":{},"body":{"components/DetalleComponent.html":{}}}],["misscores",{"_index":524,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["misscores[pub.idpost",{"_index":756,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["mm",{"_index":1500,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["modal",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["modalconfirmacioncomponent",{"_index":164,"title":{"components/ModalConfirmacionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["modalidad",{"_index":1603,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["models",{"_index":635,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["models/notificacionglobal",{"_index":1405,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["models/post",{"_index":636,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["models/postcategory",{"_index":460,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{}}}],["models/report",{"_index":2054,"title":{},"body":{"injectables/ReportService.html":{}}}],["models/user",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["moderación",{"_index":1898,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["modern",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modificar",{"_index":2048,"title":{},"body":{"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["modify",{"_index":2369,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2424,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["montt",{"_index":1637,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["more",{"_index":2415,"title":{},"body":{"index.html":{}}}],["mostrada",{"_index":1047,"title":{},"body":{"components/DetalleComponent.html":{}}}],["mostrado",{"_index":551,"title":{},"body":{"components/CategoriasComponent.html":{},"components/FooterComponent.html":{}}}],["mostrar",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/RegisterComponent.html":{}}}],["mostrarfooter",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["mostrarformulario",{"_index":525,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["mostrarlo",{"_index":2190,"title":{},"body":{"injectables/UserService.html":{}}}],["mostrarmodal",{"_index":1835,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["mostrarmodallogout",{"_index":1321,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mostrarnavbar",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["motivo",{"_index":1025,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["msal",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["msalservice",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["muestra",{"_index":584,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["muted",{"_index":755,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["mutuo",{"_index":1992,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["más",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["módulo",{"_index":1748,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["módulos",{"_index":891,"title":{},"body":{"components/ConfiguracionComponent.html":{}}}],["múltiples",{"_index":1050,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"miscellaneous/variables.html":{}}}],["n.fechafin",{"_index":1525,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.fechainicio",{"_index":1524,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.mensaje",{"_index":1526,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["n.titulo",{"_index":1521,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["nacimiento",{"_index":1632,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["nada",{"_index":1714,"title":{},"body":{"components/PerfilComponent.html":{}}}],["name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["namefor",{"_index":2377,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["navbar.component.html",{"_index":1320,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1319,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":33,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["navegar",{"_index":306,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/NavbarComponent.html":{}}}],["navigate",{"_index":2363,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["ndice",{"_index":1393,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["necesario",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["necesarios",{"_index":1487,"title":{},"body":{"components/NotificacionesComponent.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":2412,"title":{},"body":{"index.html":{}}}],["negro",{"_index":495,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["nete",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["new",{"_index":662,"title":{},"body":{"components/CategoriasComponent.html":{},"components/FooterComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":695,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ng",{"_index":2360,"title":{},"body":{"index.html":{}}}],["ngondestroy",{"_index":1374,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["ngoninit",{"_index":269,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["ni",{"_index":856,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{}}}],["nico",{"_index":821,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}}}],["niega",{"_index":2081,"title":{},"body":{"guards/RoleGuard.html":{}}}],["nombre",{"_index":448,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["nombreautor",{"_index":1013,"title":{},"body":{"components/DetalleComponent.html":{}}}],["nombrecategoriamostrada",{"_index":526,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombres",{"_index":556,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombresusuarios",{"_index":527,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nombresusuarios[pub.iduser",{"_index":750,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["none",{"_index":363,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["normalize('nfd').replace(/[\\u0300",{"_index":711,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["normas",{"_index":739,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["norte",{"_index":1618,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["nos",{"_index":1988,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["notificacion",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["notificacionbannercomponent",{"_index":168,"title":{"components/NotificacionBannerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["notificaciones",{"_index":892,"title":{},"body":{"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["notificaciones'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["notificaciones.component.html",{"_index":1479,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notificaciones.component.scss",{"_index":1478,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["notificacionescomponent",{"_index":171,"title":{"components/NotificacionesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["notificacionglobal",{"_index":1389,"title":{"interfaces/NotificacionGlobal.html":{}},"body":{"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["notificacionservice",{"_index":1406,"title":{"injectables/NotificacionService.html":{}},"body":{"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["notificación",{"_index":1391,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{}}}],["now",{"_index":2056,"title":{},"body":{"injectables/ReportService.html":{}}}],["now.getfullyear",{"_index":2058,"title":{},"body":{"injectables/ReportService.html":{}}}],["nueva",{"_index":424,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["nuevapublicacion",{"_index":535,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["nuevo",{"_index":853,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{}}}],["nuevocomentario",{"_index":1083,"title":{},"body":{"components/DetalleComponent.html":{}}}],["nuevos",{"_index":1007,"title":{},"body":{"components/DetalleComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["null",{"_index":437,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["number",{"_index":543,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["number(raw",{"_index":2237,"title":{},"body":{"injectables/UserService.html":{}}}],["number(this.route.snapshot.parammap.get('id",{"_index":1062,"title":{},"body":{"components/DetalleComponent.html":{}}}],["number:'1.1",{"_index":758,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["number:\\'1.1",{"_index":808,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["numérico",{"_index":2183,"title":{},"body":{"injectables/UserService.html":{}}}],["número",{"_index":827,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["números",{"_index":1653,"title":{},"body":{"components/PerfilComponent.html":{}}}],["o",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["objeto",{"_index":854,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["objetos",{"_index":1741,"title":{},"body":{"injectables/PostCategoryService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["obliga",{"_index":1829,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["observable",{"_index":859,"title":{},"body":{"injectables/CommentService.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["obtener",{"_index":688,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["obtenidas",{"_index":1396,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["obtenido",{"_index":625,"title":{},"body":{"components/CategoriasComponent.html":{},"components/RegisterComponent.html":{}}}],["obtiene",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["oculta",{"_index":586,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["oeste",{"_index":1619,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["ofensivos",{"_index":1859,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["oferta",{"_index":1873,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["omit",{"_index":851,"title":{},"body":{"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{}}}],["ondestroy",{"_index":1368,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["one",{"_index":2410,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":262,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["online",{"_index":1604,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["opacity",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["opcional",{"_index":305,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["open",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["operaciones",{"_index":1595,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UserService.html":{}}}],["optimiza",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizada",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":2391,"title":{},"body":{"index.html":{}}}],["optional",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["origen",{"_index":1912,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["otorg",{"_index":834,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["otorga",{"_index":832,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["otros",{"_index":1163,"title":{},"body":{"components/FooterComponent.html":{}}}],["out",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["outline",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["output",{"_index":1303,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["outputs",{"_index":1288,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["ovalle",{"_index":1610,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["overflow",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["overlay",{"_index":1304,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["overview",{"_index":2421,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1311,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{}}}],["p.content.tolowercase().includes(texto",{"_index":1699,"title":{},"body":{"components/PerfilComponent.html":{}}}],["p.iduser",{"_index":664,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["p.title.tolowercase().includes(texto",{"_index":1698,"title":{},"body":{"components/PerfilComponent.html":{}}}],["package",{"_index":2326,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":355,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["padre",{"_index":1608,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["page",{"_index":2423,"title":{},"body":{"index.html":{}}}],["pagina",{"_index":1572,"title":{},"body":{"components/PerfilComponent.html":{}}}],["paginaactual",{"_index":1556,"title":{},"body":{"components/PerfilComponent.html":{}}}],["paginas",{"_index":1567,"title":{},"body":{"components/PerfilComponent.html":{}}}],["panel",{"_index":373,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["pantalla",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["para",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["parte",{"_index":734,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["participa",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["participación",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["participar",{"_index":1107,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["parámetros",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["path",{"_index":304,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["perfil",{"_index":1355,"title":{},"body":{"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["perfil'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["perfil.component.html",{"_index":1554,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.scss",{"_index":1553,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":173,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["perfiles",{"_index":1938,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["performance",{"_index":2392,"title":{},"body":{"index.html":{}}}],["permisos",{"_index":864,"title":{},"body":{"injectables/CommentService.html":{},"components/ForbiddenComponent.html":{}}}],["permite",{"_index":259,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["permitida",{"_index":1761,"title":{},"body":{"injectables/PostService.html":{}}}],["permitir",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["persona",{"_index":1864,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["personal",{"_index":598,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["personales",{"_index":558,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["personalizado",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pertenece",{"_index":822,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["peticiones",{"_index":881,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["pie",{"_index":1140,"title":{},"body":{"components/FooterComponent.html":{}}}],["pipe(filter(event",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":2382,"title":{},"body":{"index.html":{}}}],["plataforma",{"_index":381,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["plaza",{"_index":1617,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["podrán",{"_index":1899,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["podrías",{"_index":1814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pointer",{"_index":2009,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["policies",{"_index":1809,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["políticas",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["ponderada",{"_index":1710,"title":{},"body":{"components/PerfilComponent.html":{}}}],["poppins",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{}}}],["popup",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{}}}],["por",{"_index":447,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["posibles",{"_index":1639,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["posición",{"_index":257,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["position",{"_index":496,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["positiva",{"_index":1975,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["post",{"_index":541,"title":{"interfaces/Post.html":{}},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["post.content",{"_index":1097,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post.createddate",{"_index":1098,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post.idpost",{"_index":1693,"title":{},"body":{"components/PerfilComponent.html":{}}}],["post.title",{"_index":1069,"title":{},"body":{"components/DetalleComponent.html":{}}}],["post?.title",{"_index":1096,"title":{},"body":{"components/DetalleComponent.html":{}}}],["postcategory",{"_index":409,"title":{"interfaces/PostCategory.html":{}},"body":{"components/CategoriasAdminComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["postcategoryservice",{"_index":457,"title":{"injectables/PostCategoryService.html":{}},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["postingcomment",{"_index":1014,"title":{},"body":{"components/DetalleComponent.html":{}}}],["posts",{"_index":660,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["posts.filter(p",{"_index":1667,"title":{},"body":{"components/PerfilComponent.html":{}}}],["posts.length",{"_index":1712,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postservice",{"_index":528,"title":{"injectables/PostService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["postsfiltrados",{"_index":1565,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postspaginados",{"_index":1568,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postsporpagina",{"_index":1557,"title":{},"body":{"components/PerfilComponent.html":{}}}],["postview",{"_index":838,"title":{"interfaces/PostView.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["powerful",{"_index":2374,"title":{},"body":{"index.html":{}}}],["preferente",{"_index":1918,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["preguntas",{"_index":730,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["prepara",{"_index":2253,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["presenciales",{"_index":1924,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prevenir",{"_index":1843,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["primary",{"_index":1433,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["primera",{"_index":1780,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["primero",{"_index":748,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["principal",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["principios",{"_index":1980,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["private",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["production",{"_index":2390,"title":{},"body":{"index.html":{}}}],["profesional",{"_index":2015,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["profunda",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["prohibición",{"_index":1933,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibida",{"_index":1872,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohibido",{"_index":1937,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["prohíbe",{"_index":1877,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["project",{"_index":2349,"title":{},"body":{"index.html":{}}}],["promedio",{"_index":550,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["promedioponderado",{"_index":1558,"title":{},"body":{"components/PerfilComponent.html":{}}}],["promedios",{"_index":608,"title":{},"body":{"components/CategoriasComponent.html":{},"injectables/ScoreService.html":{}}}],["promedioscores",{"_index":529,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["promedioscores[pub.idpost",{"_index":757,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["prompt('motivo",{"_index":705,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["promueva",{"_index":1909,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["properties",{"_index":40,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"properties.html":{}}}],["propia",{"_index":2129,"title":{},"body":{"injectables/ScoreService.html":{}}}],["proporciona",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protección",{"_index":1888,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["proteger",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protegida",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protegidas",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proveedores",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pub",{"_index":552,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["pub.content",{"_index":753,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.content.tolowercase().includes(texto",{"_index":682,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.createddate",{"_index":751,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.idpost",{"_index":720,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pub.title",{"_index":749,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["pub.title.tolowercase().includes(texto",{"_index":681,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicaciones",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"components/UsuariosComponent.html":{}}}],["publicaciones.length",{"_index":744,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicacionesfiltradas",{"_index":539,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publicacionesreportadascomponent",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["publicación",{"_index":548,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["publicado",{"_index":1713,"title":{},"body":{"components/PerfilComponent.html":{}}}],["publicar",{"_index":703,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["publiques",{"_index":1889,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["pudo",{"_index":687,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["pueden",{"_index":741,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/PostCategory.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["puedes",{"_index":726,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["puente",{"_index":1621,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["puerto",{"_index":1636,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["pulse",{"_index":1435,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["puntajes",{"_index":1578,"title":{},"body":{"components/PerfilComponent.html":{}}}],["puntuaciones",{"_index":557,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["puntuación",{"_index":515,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["puntuada",{"_index":833,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["puro",{"_index":2006,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["página",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"components/FooterComponent.html":{},"components/PerfilComponent.html":{}}}],["páginas",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/PerfilComponent.html":{}}}],["públicamente",{"_index":2207,"title":{},"body":{"injectables/UserService.html":{}}}],["que",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["quehacer",{"_index":1921,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["r.miscore",{"_index":677,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["r.promedio",{"_index":675,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["radius",{"_index":509,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["raro",{"_index":1958,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["raw",{"_index":2235,"title":{},"body":{"injectables/UserService.html":{}}}],["razón",{"_index":2023,"title":{},"body":{"interfaces/Report.html":{}}}],["raíz",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/RoleGuard.html":{}}}],["rbol",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["reactivas",{"_index":1337,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reactiveformsmodule",{"_index":384,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["reactivo",{"_index":1032,"title":{},"body":{"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{}}}],["reactivos",{"_index":445,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["readonly",{"_index":1820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["real",{"_index":2214,"title":{},"body":{"injectables/UserService.html":{}}}],["realiz",{"_index":819,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["realizada",{"_index":1726,"title":{},"body":{"interfaces/Post.html":{}}}],["realizadas",{"_index":1593,"title":{},"body":{"components/PerfilComponent.html":{}}}],["realizado",{"_index":815,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["realizados",{"_index":2256,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["realizar",{"_index":880,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{}}}],["reason",{"_index":704,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["reason).subscribe",{"_index":707,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["rechaza",{"_index":1832,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rechazado",{"_index":2025,"title":{},"body":{"interfaces/Report.html":{}}}],["rechazar",{"_index":1852,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rechazarreglas",{"_index":1839,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rechazo",{"_index":1846,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["recibidas",{"_index":1552,"title":{},"body":{"components/PerfilComponent.html":{}}}],["recibido",{"_index":830,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["recibidos",{"_index":1641,"title":{},"body":{"components/PerfilComponent.html":{}}}],["record",{"_index":333,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["recreativas",{"_index":338,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{}}}],["recuerda",{"_index":736,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["red",{"_index":1990,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["redirecciones",{"_index":312,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["redirección",{"_index":2084,"title":{},"body":{"guards/RoleGuard.html":{}}}],["redirige",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["redirigiendo",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirigir",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["redundancia",{"_index":282,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["reemplaza",{"_index":577,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["reference",{"_index":2422,"title":{},"body":{"index.html":{}}}],["references",{"_index":2419,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1399,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["register",{"_index":1783,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["register.component.html",{"_index":1785,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1784,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":178,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1786,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":2158,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(user",{"_index":2184,"title":{},"body":{"injectables/UserService.html":{}}}],["registra",{"_index":1771,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["registradas",{"_index":840,"title":{},"body":{"interfaces/Comment.html":{},"injectables/NotificacionService.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["registrado",{"_index":1789,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["registrados",{"_index":2036,"title":{},"body":{"injectables/ReportService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["registrar",{"_index":1462,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ScoreService.html":{}}}],["registro",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["regla",{"_index":2002,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["reglas",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["reglasaceptadasguard",{"_index":2305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reglasdelacomunidadcomponent",{"_index":180,"title":{"components/ReglasDeLaComunidadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["regresa",{"_index":1029,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reincidencias",{"_index":1901,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["reinicia",{"_index":401,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["relacionada",{"_index":2053,"title":{},"body":{"injectables/ReportService.html":{}}}],["relacionadas",{"_index":1577,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["relacionados",{"_index":732,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["relative",{"_index":497,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/UsuariosComponent.html":{}}}],["relevantes",{"_index":1144,"title":{},"body":{"components/FooterComponent.html":{}}}],["reload",{"_index":2367,"title":{},"body":{"index.html":{}}}],["replace",{"_index":716,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["replace(/[^a",{"_index":713,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["report",{"_index":2017,"title":{"interfaces/Report.html":{}},"body":{"interfaces/Report.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["reporta",{"_index":568,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["reportada",{"_index":709,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{}}}],["reportadas'},{'name",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["reportadas.component.ts",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["reportadas/publicaciones",{"_index":2316,"title":{},"body":{"coverage.html":{}}}],["reportado",{"_index":1093,"title":{},"body":{"components/DetalleComponent.html":{},"interfaces/Report.html":{}}}],["reportar",{"_index":571,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["reportarcomentario",{"_index":1016,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reportarcomentario(com",{"_index":1023,"title":{},"body":{"components/DetalleComponent.html":{}}}],["reportarpublicacion",{"_index":536,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["reportarpublicacion(pub",{"_index":566,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["reportcomment",{"_index":2032,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportcomment(idcomment",{"_index":2039,"title":{},"body":{"injectables/ReportService.html":{}}}],["reporte",{"_index":514,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["reportes",{"_index":614,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{}}}],["reportpost",{"_index":2033,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportpost(idpost",{"_index":2042,"title":{},"body":{"injectables/ReportService.html":{}}}],["reportservice",{"_index":530,"title":{"injectables/ReportService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["representa",{"_index":813,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/NotificacionGlobal.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"interfaces/PostView.html":{},"interfaces/Report.html":{},"interfaces/Score.html":{},"interfaces/User.html":{}}}],["requiere",{"_index":863,"title":{},"body":{"injectables/CommentService.html":{}}}],["requieren",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"components/FooterComponent.html":{}}}],["reservados",{"_index":1173,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["resolucion",{"_index":2020,"title":{},"body":{"interfaces/Report.html":{}}}],["resolución",{"_index":2026,"title":{},"body":{"interfaces/Report.html":{}}}],["resources",{"_index":2414,"title":{},"body":{"index.html":{}}}],["respetar",{"_index":1978,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respeto",{"_index":1854,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respetuosa",{"_index":1987,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["respetuoso",{"_index":737,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["responsabilidad",{"_index":1922,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["responsable",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["responsables",{"_index":1929,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["rest",{"_index":2202,"title":{},"body":{"injectables/UserService.html":{}}}],["restringe",{"_index":2072,"title":{},"body":{"guards/RoleGuard.html":{}}}],["resultados",{"_index":1649,"title":{},"body":{"components/PerfilComponent.html":{}}}],["results",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumen",{"_index":2127,"title":{},"body":{"injectables/ScoreService.html":{}}}],["resumenes.foreach(r",{"_index":673,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["retorna",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["return",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["reutilizable",{"_index":1279,"title":{},"body":{"components/ModalConfirmacionComponent.html":{}}}],["revisadas",{"_index":1916,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["revisado",{"_index":2047,"title":{},"body":{"injectables/ReportService.html":{}}}],["revisión",{"_index":2038,"title":{},"body":{"injectables/ReportService.html":{}}}],["rgba($azul",{"_index":1543,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["rgba(0",{"_index":769,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["rgba(255",{"_index":1357,"title":{},"body":{"components/NavbarComponent.html":{}}}],["right",{"_index":1425,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rol",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["role",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["roleguard",{"_index":2070,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":1183,"title":{},"body":{"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["roleservice",{"_index":2092,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["root",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["rotacionsub",{"_index":1372,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rotación",{"_index":1377,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rotador",{"_index":1400,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["rotativo",{"_index":1363,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["route",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"guards/RoleGuard.html":{}}}],["route.data['expectedroles",{"_index":2086,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.firstchild",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/reglas",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1145,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["routermodule",{"_index":264,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["routeroutlet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2358,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2399,"title":{},"body":{"index.html":{}}}],["running",{"_index":2362,"title":{},"body":{"index.html":{}}}],["rut",{"_index":1895,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ruta",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["rutas",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["ruteo",{"_index":1797,"title":{},"body":{"components/RegisterComponent.html":{}}}],["rxjs",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommentService.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rápidos",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["s",{"_index":733,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{}}}],["san",{"_index":1623,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["sans",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sass:color",{"_index":350,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["scaffolding",{"_index":2372,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1440,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["scale(1.03",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["scale(1.2",{"_index":1441,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["schematics",{"_index":2380,"title":{},"body":{"index.html":{}}}],["score",{"_index":547,"title":{"interfaces/Score.html":{}},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["score.score",{"_index":1075,"title":{},"body":{"components/DetalleComponent.html":{}}}],["scorerequests",{"_index":1681,"title":{},"body":{"components/PerfilComponent.html":{}}}],["scorerequests.length",{"_index":1683,"title":{},"body":{"components/PerfilComponent.html":{}}}],["scores",{"_index":623,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["scoreservice",{"_index":531,"title":{"injectables/ScoreService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["se",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"miscellaneous/variables.html":{}}}],["seccion",{"_index":1539,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["sección",{"_index":309,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["secondary",{"_index":1429,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["sede",{"_index":1550,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsuariosComponent.html":{}}}],["sedes",{"_index":1559,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["seg",{"_index":320,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segmento",{"_index":289,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments",{"_index":315,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments.foreach((seg",{"_index":319,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segments.length",{"_index":323,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["segundos",{"_index":1381,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["segura",{"_index":1972,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["seguridad",{"_index":1932,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["seguro",{"_index":1293,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["según",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"components/PerfilComponent.html":{},"guards/RoleGuard.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["selecciona",{"_index":2290,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["seleccionada",{"_index":412,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["seleccionado",{"_index":2254,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["seleccionar",{"_index":1782,"title":{},"body":{"components/RegisterComponent.html":{}}}],["seleccione",{"_index":1816,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select:invalid",{"_index":1822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selector",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["separación",{"_index":2014,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ser",{"_index":742,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["serif",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serveonce",{"_index":2361,"title":{},"body":{"index.html":{}}}],["server",{"_index":2356,"title":{},"body":{"index.html":{}}}],["services",{"_index":637,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{}}}],["services/user.service",{"_index":2083,"title":{},"body":{"guards/RoleGuard.html":{}}}],["servicio",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["servicios",{"_index":1152,"title":{},"body":{"components/FooterComponent.html":{},"components/NotificacionesComponent.html":{}}}],["serán",{"_index":857,"title":{},"body":{"injectables/CommentService.html":{},"components/NotificacionesComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["sesión",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["sessionstorage.clear",{"_index":1965,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["set(posts.map(p",{"_index":663,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["setiduser",{"_index":2159,"title":{},"body":{"injectables/UserService.html":{}}}],["setiduser(iduser",{"_index":2186,"title":{},"body":{"injectables/UserService.html":{}}}],["setname",{"_index":2160,"title":{},"body":{"injectables/UserService.html":{}}}],["setname(name",{"_index":2188,"title":{},"body":{"injectables/UserService.html":{}}}],["setrole",{"_index":2161,"title":{},"body":{"injectables/UserService.html":{}}}],["setrole(role",{"_index":2192,"title":{},"body":{"injectables/UserService.html":{}}}],["setscore",{"_index":2120,"title":{},"body":{"injectables/ScoreService.html":{}}}],["setscore(score",{"_index":2134,"title":{},"body":{"injectables/ScoreService.html":{}}}],["shadow",{"_index":767,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["shared/modal",{"_index":1339,"title":{},"body":{"components/NavbarComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["si",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["siendo",{"_index":2259,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["sigue",{"_index":738,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["siguiente",{"_index":1716,"title":{},"body":{"components/PerfilComponent.html":{}}}],["siguientes",{"_index":1979,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["sin",{"_index":855,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["sincroniza",{"_index":2164,"title":{},"body":{"injectables/UserService.html":{}}}],["sistema",{"_index":417,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"components/UsuariosComponent.html":{}}}],["size",{"_index":358,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["slidefadein",{"_index":1535,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["slideindown",{"_index":1431,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["slug",{"_index":292,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{}}}],["slug.charat(0).touppercase",{"_index":342,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["slug.slice(1",{"_index":343,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["slugify",{"_index":537,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["slugify(text",{"_index":572,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["slugs",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["snapshot",{"_index":2082,"title":{},"body":{"guards/RoleGuard.html":{}}}],["sobre",{"_index":1596,"title":{},"body":{"components/PerfilComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["solicitudes",{"_index":1458,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["solid",{"_index":786,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["solo",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/NotificacionService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["speed",{"_index":2393,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":2304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts",{"_index":248,"title":{},"body":{"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:19",{"_index":311,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:22",{"_index":310,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:28",{"_index":298,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:34",{"_index":271,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/breadcrumb/breadcrumb.component.ts:65",{"_index":286,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts",{"_index":511,"title":{},"body":{"components/CategoriasComponent.html":{},"coverage.html":{}}}],["src/app/components/categorias/categorias.component.ts:127",{"_index":554,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:157",{"_index":630,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:169",{"_index":583,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:178",{"_index":564,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:213",{"_index":567,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:228",{"_index":573,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:242",{"_index":544,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:34",{"_index":616,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:37",{"_index":617,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:40",{"_index":590,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:43",{"_index":604,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:46",{"_index":606,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:49",{"_index":627,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:52",{"_index":611,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:55",{"_index":619,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:58",{"_index":624,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:61",{"_index":587,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:64",{"_index":589,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:67",{"_index":601,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:70",{"_index":609,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:73",{"_index":602,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:76",{"_index":607,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:79",{"_index":596,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:82",{"_index":592,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:85",{"_index":594,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:88",{"_index":599,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:91",{"_index":595,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/categorias.component.ts:96",{"_index":559,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts",{"_index":1003,"title":{},"body":{"components/DetalleComponent.html":{},"coverage.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:140",{"_index":1019,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:165",{"_index":1027,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:178",{"_index":1024,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:189",{"_index":1028,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:198",{"_index":1018,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:34",{"_index":1056,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:37",{"_index":1057,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:40",{"_index":1053,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:43",{"_index":1035,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:46",{"_index":1059,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:49",{"_index":1055,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:52",{"_index":1058,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:55",{"_index":1040,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:58",{"_index":1046,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:61",{"_index":1033,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:64",{"_index":1031,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:67",{"_index":1041,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:70",{"_index":1048,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:73",{"_index":1054,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:76",{"_index":1043,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:79",{"_index":1038,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:82",{"_index":1045,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/categorias/detalle/detalle.component.ts:88",{"_index":1020,"title":{},"body":{"components/DetalleComponent.html":{}}}],["src/app/components/configuracion/categorias",{"_index":370,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/configuracion.component.ts",{"_index":888,"title":{},"body":{"components/ConfiguracionComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts",{"_index":1474,"title":{},"body":{"components/NotificacionesComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:21",{"_index":1507,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:24",{"_index":1504,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:27",{"_index":1485,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:49",{"_index":1502,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:58",{"_index":1493,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:68",{"_index":1497,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:75",{"_index":1489,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:84",{"_index":1490,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/notificaciones/notificaciones.component.ts:97",{"_index":1491,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts",{"_index":2240,"title":{},"body":{"components/UsuariosComponent.html":{},"coverage.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:100",{"_index":2252,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:108",{"_index":2249,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:116",{"_index":2255,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:22",{"_index":2261,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:25",{"_index":2267,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:28",{"_index":2265,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:31",{"_index":2264,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:34",{"_index":2258,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:37",{"_index":2262,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:40",{"_index":2263,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:69",{"_index":2257,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:83",{"_index":2269,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/configuracion/usuarios/usuarios.component.ts:92",{"_index":2250,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:23",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:26",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:29",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:32",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:37",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:40",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:55",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:92",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":1139,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:19",{"_index":1150,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/forbidden/forbidden.component.ts",{"_index":1178,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:76",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:95",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1316,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1331,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:25",{"_index":1332,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":1338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":1333,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":1330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1335,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:43",{"_index":1328,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:62",{"_index":1327,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:69",{"_index":1326,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:82",{"_index":1324,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/notificacion",{"_index":1361,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts",{"_index":1548,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/perfil/perfil.component.ts:100",{"_index":1599,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:103",{"_index":1589,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:106",{"_index":1598,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:109",{"_index":1590,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:115",{"_index":1586,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:138",{"_index":1575,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:170",{"_index":1581,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:177",{"_index":1584,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:189",{"_index":1580,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:196",{"_index":1646,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:208",{"_index":1648,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:215",{"_index":1652,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:222",{"_index":1655,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:231",{"_index":1570,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:38",{"_index":1644,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:41",{"_index":1594,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:44",{"_index":1600,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:47",{"_index":1588,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:50",{"_index":1591,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:53",{"_index":1601,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:56",{"_index":1643,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:59",{"_index":1592,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:62",{"_index":1587,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:65",{"_index":1602,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:68",{"_index":1638,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:94",{"_index":1642,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/perfil/perfil.component.ts:97",{"_index":1640,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/components/publicaciones",{"_index":2315,"title":{},"body":{"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1779,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:20",{"_index":1792,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:23",{"_index":1799,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:26",{"_index":1796,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:29",{"_index":1795,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:32",{"_index":1791,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:35",{"_index":1793,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:41",{"_index":1798,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:54",{"_index":1790,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:73",{"_index":1788,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/reglas",{"_index":1826,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:27",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/role.guard.ts",{"_index":2071,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/role.guard.ts:26",{"_index":2077,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/core/services/comment.service.ts",{"_index":843,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/app/core/services/comment.service.ts:15",{"_index":874,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:18",{"_index":877,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:25",{"_index":867,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:34",{"_index":852,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:43",{"_index":862,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/comment.service.ts:53",{"_index":871,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/core/services/notificacion.service.ts",{"_index":1452,"title":{},"body":{"injectables/NotificacionService.html":{},"coverage.html":{}}}],["src/app/core/services/notificacion.service.ts:15",{"_index":1456,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:29",{"_index":1465,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:38",{"_index":1460,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:46",{"_index":1464,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/notificacion.service.ts:54",{"_index":1468,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["src/app/core/services/post",{"_index":1731,"title":{},"body":{"injectables/PostCategoryService.html":{},"coverage.html":{}}}],["src/app/core/services/post.service.ts",{"_index":1751,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/app/core/services/post.service.ts:15",{"_index":1773,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:18",{"_index":1774,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:25",{"_index":1763,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:37",{"_index":1768,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:47",{"_index":1756,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:56",{"_index":1760,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/post.service.ts:65",{"_index":1770,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/core/services/report.service.ts",{"_index":2030,"title":{},"body":{"injectables/ReportService.html":{},"coverage.html":{}}}],["src/app/core/services/report.service.ts:16",{"_index":2050,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:19",{"_index":2051,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:22",{"_index":2052,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:30",{"_index":2043,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:58",{"_index":2040,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:75",{"_index":2035,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/report.service.ts:85",{"_index":2045,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/core/services/role.service.ts",{"_index":2093,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/app/core/services/role.service.ts:16",{"_index":2100,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:25",{"_index":2104,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:34",{"_index":2109,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/role.service.ts:42",{"_index":2111,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/score.service.ts",{"_index":2115,"title":{},"body":{"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/core/services/score.service.ts:16",{"_index":2137,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:19",{"_index":2138,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:26",{"_index":2122,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:36",{"_index":2131,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:44",{"_index":2135,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/score.service.ts:55",{"_index":2126,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":2147,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:102",{"_index":2171,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:110",{"_index":2189,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:116",{"_index":2177,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:124",{"_index":2187,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:129",{"_index":2176,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:138",{"_index":2182,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:147",{"_index":2174,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:156",{"_index":2196,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:164",{"_index":2173,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":2198,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:21",{"_index":2203,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:24",{"_index":2199,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:27",{"_index":2210,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:30",{"_index":2163,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:53",{"_index":2175,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:67",{"_index":2169,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:76",{"_index":2185,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:84",{"_index":2180,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:92",{"_index":2193,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:97",{"_index":2178,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/models/notificacionglobal.ts",{"_index":1446,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"coverage.html":{}}}],["src/app/models/post.ts",{"_index":812,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"coverage.html":{}}}],["src/app/models/postcategory.ts",{"_index":1727,"title":{},"body":{"interfaces/PostCategory.html":{},"coverage.html":{}}}],["src/app/models/report.ts",{"_index":2018,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":2145,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/modal",{"_index":1276,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":263,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["start",{"_index":2357,"title":{},"body":{"index.html":{}}}],["started",{"_index":2348,"title":{"index.html":{}},"body":{}}],["state",{"_index":1694,"title":{},"body":{"components/PerfilComponent.html":{}}}],["statements",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":465,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"interfaces/PostCategory.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{}}}],["sticky",{"_index":1445,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["storage",{"_index":1961,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["store",{"_index":2387,"title":{},"body":{"index.html":{}}}],["stretched",{"_index":799,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["string",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["string(now.getdate()).padstart(2",{"_index":2061,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.gethours()).padstart(2",{"_index":2063,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.getminutes()).padstart(2",{"_index":2064,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.getmonth",{"_index":2059,"title":{},"body":{"injectables/ReportService.html":{}}}],["string(now.getseconds()).padstart(2",{"_index":2065,"title":{},"body":{"injectables/ReportService.html":{}}}],["strong",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["student",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["style",{"_index":1823,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["styles",{"_index":247,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["styleurl",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{}}}],["styleurls",{"_index":265,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["su",{"_index":256,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/CommentService.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["subject",{"_index":2211,"title":{},"body":{"injectables/UserService.html":{}}}],["subscribe",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["subscription",{"_index":1397,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["such",{"_index":2381,"title":{},"body":{"index.html":{}}}],["suits",{"_index":2411,"title":{},"body":{"index.html":{}}}],["sumarvisualizacion",{"_index":1754,"title":{},"body":{"injectables/PostService.html":{}}}],["sumarvisualizacion(idpost",{"_index":1769,"title":{},"body":{"injectables/PostService.html":{}}}],["superior",{"_index":1318,"title":{},"body":{"components/NavbarComponent.html":{},"components/NotificacionesComponent.html":{}}}],["suplantación",{"_index":1934,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["sus",{"_index":563,"title":{},"body":{"components/CategoriasComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["suscribirse",{"_index":2208,"title":{},"body":{"injectables/UserService.html":{}}}],["suscripción",{"_index":1384,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["suspensión",{"_index":1903,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["t",{"_index":2062,"title":{},"body":{"injectables/ReportService.html":{}}}],["tabla",{"_index":790,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["table",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["también",{"_index":1842,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tarjeta",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["te",{"_index":1976,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tecnológicos",{"_index":1162,"title":{},"body":{"components/FooterComponent.html":{}}}],["teléfonos",{"_index":1164,"title":{},"body":{"components/FooterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tem",{"_index":301,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["temas",{"_index":731,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["templateurl",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["tems",{"_index":274,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["tenga",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["terceros",{"_index":1891,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["test",{"_index":2398,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2405,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":2402,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2395,"title":{},"body":{"index.html":{}}}],["text",{"_index":361,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["textarea",{"_index":783,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionesComponent.html":{}}}],["texto",{"_index":290,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["theater",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.actual",{"_index":1412,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.apiurl}/resumen?iduser=${iduser",{"_index":2142,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.cancelar",{"_index":482,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.cancelaredicion",{"_index":2286,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.cargar",{"_index":466,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.cargarnotificaciones",{"_index":1511,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.cargarpublicaciones",{"_index":656,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.cargarpublicaciones(user.iduser",{"_index":1664,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.cargarusuarios",{"_index":2272,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.categoriaform",{"_index":462,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.invalid",{"_index":478,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.patchvalue(this.editing",{"_index":476,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.reset",{"_index":477,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaform.value",{"_index":479,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoriaid",{"_index":651,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.categorianombre",{"_index":653,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.categorias",{"_index":468,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categorias.filter(c",{"_index":471,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categories",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{},"components/PerfilComponent.html":{}}}],["this.categoryservice.create(datos).subscribe",{"_index":483,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.delete(cat.idcategory).subscribe",{"_index":485,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.getall().subscribe(c",{"_index":473,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.categoryservice.update(this.editing.idcategory",{"_index":480,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.checkandredirect(account.username",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.comentarioform",{"_index":1063,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.invalid",{"_index":1081,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.reset",{"_index":1089,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comentarioform.value.content",{"_index":1086,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comments",{"_index":1080,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.comments.push(comentario",{"_index":1088,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentservice.create(nuevocomentario).subscribe",{"_index":1087,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.commentservice.getbypostid(p.idpost",{"_index":1673,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.commentservice.getbypostid(post.idpost).subscribe(comments",{"_index":1079,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.currentindex",{"_index":1418,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.editing",{"_index":475,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/UsuariosComponent.html":{}}}],["this.editing?.iduser",{"_index":2282,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.email",{"_index":1802,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":463,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["this.filtrobusqueda.trim",{"_index":678,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.filtrobusqueda.trim().tolowercase",{"_index":679,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.filtrocategoria.tolowercase",{"_index":470,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.filtrocategoria.trim",{"_index":467,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["this.filtronombre.tolowercase",{"_index":2275,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.filtronombre.trim",{"_index":2273,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.filtropost.tolowercase",{"_index":1696,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.filtropost.trim",{"_index":1695,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.form",{"_index":642,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.invalid",{"_index":685,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.reset",{"_index":684,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.value.content",{"_index":690,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.form.value.title",{"_index":689,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.formulario",{"_index":1509,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.formulario.invalid",{"_index":1516,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.formulario.reset",{"_index":1518,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.getchild(this.route",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gethoyiso",{"_index":1510,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.getrole",{"_index":2114,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":1472,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`${this.apiurl}/${idcomment",{"_index":886,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.delete(`${this.apiurl}/${idpost",{"_index":1777,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl",{"_index":2068,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.apiurl}/${email",{"_index":2229,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/${idpost",{"_index":1776,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}/average/${idpost",{"_index":2139,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.get(`${this.apiurl}/exists/${encodedemail",{"_index":2228,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/id/${iduser",{"_index":2238,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/user/${iduser}/post/${idpost",{"_index":2140,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.get(`${this.apiurl}/vigentes",{"_index":1473,"title":{},"body":{"injectables/NotificacionService.html":{}}}],["this.http.get(`${this.apiurl}?idcategory=${categoryid",{"_index":1775,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(`${this.apiurl}?idpost=${idpost",{"_index":884,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.get(this.apiurl",{"_index":1471,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["this.http.get(url",{"_index":2144,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.post(`${this.apiurl}/comentario",{"_index":2067,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.post(`${this.apiurl}/publicacion",{"_index":2066,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.post(`${this.apiurl}/save",{"_index":2141,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.http.post(this.apiurl",{"_index":885,"title":{},"body":{"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.apiurl}/${email",{"_index":2239,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":1750,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["this.http.put(`${this.apiurl}/${idcomment",{"_index":887,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.put(`${this.apiurl}/${idpost}/view",{"_index":1778,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.put(`${this.apiurl}/${idreport",{"_index":2069,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.iconmap[slug",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.iniciarrotacion",{"_index":1415,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.isloggedin",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.items",{"_index":318,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.items.push",{"_index":325,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.items.unshift",{"_index":331,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.loading",{"_index":657,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.logout",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.miscore",{"_index":1074,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.misscores[pub.idpost",{"_index":721,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.misscores[r.idpost",{"_index":676,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.mostrar",{"_index":1414,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.mostrarfooter",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mostrarformulario",{"_index":683,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.mostrarmodal",{"_index":1959,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["this.mostrarmodallogout",{"_index":1349,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.mostrarnavbar",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.msal.instance.getactiveaccount",{"_index":1343,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.msal.logoutpopup().subscribe",{"_index":1350,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.msalservice.instance.getactiveaccount",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["this.msalservice.instance.getallaccounts()[0",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.instance.setactiveaccount(account",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.loginpopup().subscribe",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msalservice.logoutpopup().subscribe",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":1804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.nombreautor",{"_index":1078,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.nombrecategoriamostrada",{"_index":655,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.nombresusuarios[id",{"_index":667,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.notificaciones",{"_index":1410,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["this.notificaciones.length",{"_index":1411,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.notificaciones[0",{"_index":1413,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.notificaciones[this.currentindex",{"_index":1419,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.notificacionservice.crear(this.formulario.value).subscribe",{"_index":1517,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.notificacionservice.eliminar(id).subscribe",{"_index":1519,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.notificacionservice.gettodas().subscribe(data",{"_index":1515,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["this.paginaactual",{"_index":1670,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.post",{"_index":1067,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.post.idpost",{"_index":1084,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postcategoryservice.getall().subscribe(categories",{"_index":647,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["this.postcategoryservice.getall().subscribe(cats",{"_index":1658,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postingcomment",{"_index":1082,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.posts",{"_index":1666,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.filter(p",{"_index":1697,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.length",{"_index":1669,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.posts.map(p",{"_index":1672,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postservice.createpost(nueva).subscribe",{"_index":694,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.postservice.getall().subscribe(posts",{"_index":1665,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postservice.getall(this.categoriaid).subscribe(posts",{"_index":658,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.postservice.getbyid(id).subscribe",{"_index":1066,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postservice.sumarvisualizacion(id).subscribe",{"_index":1065,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.postsfiltrados.slice(inicio",{"_index":1706,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.postsporpagina",{"_index":1701,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.promedio",{"_index":1071,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.promedioponderado",{"_index":1686,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.promedioscores[pub.idpost",{"_index":723,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.promedioscores[r.idpost",{"_index":674,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.publicaciones",{"_index":659,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.publicaciones.filter(pub",{"_index":680,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.registerform",{"_index":1806,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.center",{"_index":1808,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.reportservice.reportcomment(com.idcomment",{"_index":1091,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.reportservice.reportpost(pub.idpost",{"_index":706,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.reportservice.reportpost(this.post.idpost",{"_index":1090,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.role",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.rotacionsub",{"_index":1416,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.rotacionsub.unsubscribe",{"_index":1420,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.route.snapshot.parammap.get('slug",{"_index":644,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.router.events",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/categoria",{"_index":1094,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":650,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.router.navigate(['/dashboard/ayudantias",{"_index":1692,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1966,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["this.router.navigate(['/registro",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/reglas",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":314,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.scoreservice.getaveragescore(p.idpost",{"_index":1682,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.scoreservice.getaveragescore(post.idpost).subscribe(avg",{"_index":1070,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.getaveragescore(pub.idpost).subscribe(avg",{"_index":722,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.scoreservice.getaveragescore(this.post!.idpost).subscribe(avg",{"_index":1095,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.getresumenscores(iduser",{"_index":671,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.scoreservice.getuserscore(post.idpost",{"_index":1072,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.scoreservice.setscore",{"_index":718,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["this.sede",{"_index":1662,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.servicio.getvigentes().subscribe((lista",{"_index":1409,"title":{},"body":{"components/NotificacionBannerComponent.html":{}}}],["this.setname(fullname",{"_index":2224,"title":{},"body":{"injectables/UserService.html":{}}}],["this.slug",{"_index":643,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.slugify(cat.name",{"_index":649,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["this.toreadable(seg",{"_index":326,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.totalcomments",{"_index":1676,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.totalpaginas",{"_index":1704,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.totalposts",{"_index":1668,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user",{"_index":1661,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user.name.charat(0).touppercase",{"_index":1689,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.user?.name",{"_index":1688,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.userform",{"_index":2270,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.invalid",{"_index":2281,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.patchvalue(this.editing",{"_index":2279,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.reset",{"_index":2280,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userform.value",{"_index":2283,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.username",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.usernamesubject.asobservable",{"_index":2205,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usernamesubject.next(localname",{"_index":2225,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usernamesubject.next(name",{"_index":2231,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users",{"_index":2274,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.users.filter(u",{"_index":2276,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.checkuserexists(email).subscribe",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.clearrole",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.deleteuser(user.iduser).subscribe",{"_index":2289,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.getall().subscribe(users",{"_index":2278,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.getazureuser",{"_index":1801,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getazureuser()?.email",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.getazureuser()?.fullname",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.getiduser",{"_index":670,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"injectables/ReportService.html":{}}}],["this.userservice.getname",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{}}}],["this.userservice.getrole",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{},"guards/RoleGuard.html":{}}}],["this.userservice.getuser(email).subscribe",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuser(email).subscribe(user",{"_index":1660,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.getuserbyid(id).subscribe(user",{"_index":666,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["this.userservice.getuserbyid(post.iduser).subscribe",{"_index":1076,"title":{},"body":{"components/DetalleComponent.html":{}}}],["this.userservice.registeruser(updateduser).subscribe",{"_index":1691,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["this.userservice.registeruser(user).subscribe",{"_index":1812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.setiduser(user.iduser",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setname(datos.name",{"_index":2285,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.setname(user.name",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setrole(user.role",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.updateuser(this.editing.email",{"_index":2284,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["this.userservice.username",{"_index":1334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tiempo",{"_index":2213,"title":{},"body":{"injectables/UserService.html":{}}}],["tiene",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{}}}],["tildes",{"_index":574,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["tipo",{"_index":1461,"title":{},"body":{"injectables/NotificacionService.html":{},"injectables/UserService.html":{}}}],["title",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["titulo",{"_index":493,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["toda",{"_index":1863,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["todas",{"_index":405,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["todavía",{"_index":1106,"title":{},"body":{"components/DetalleComponent.html":{}}}],["todo",{"_index":1856,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["todos",{"_index":868,"title":{},"body":{"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["toggleformulario",{"_index":538,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["token",{"_index":1346,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toleran",{"_index":1858,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tolowercase",{"_index":710,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["tomada",{"_index":2027,"title":{},"body":{"interfaces/Report.html":{}}}],["tools",{"_index":2375,"title":{},"body":{"index.html":{}}}],["top",{"_index":789,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["toreadable",{"_index":270,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["toreadable(slug",{"_index":285,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["total",{"_index":839,"title":{},"body":{"interfaces/Comment.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["totalcomments",{"_index":1560,"title":{},"body":{"components/PerfilComponent.html":{}}}],["totalpaginas",{"_index":1566,"title":{},"body":{"components/PerfilComponent.html":{}}}],["totalposts",{"_index":1561,"title":{},"body":{"components/PerfilComponent.html":{}}}],["track",{"_index":345,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["traducido",{"_index":295,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["traer",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["transform",{"_index":793,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["transformado",{"_index":581,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["transformar",{"_index":580,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["transition",{"_index":792,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["translatey",{"_index":796,"title":{},"body":{"components/CategoriasComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["translatey(0",{"_index":999,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{}}}],["translatey(20px",{"_index":998,"title":{},"body":{"components/DashboardComponent.html":{}}}],["translatey(8px",{"_index":1536,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["transparent",{"_index":354,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tras",{"_index":418,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["tratada",{"_index":1865,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["true",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["trueques",{"_index":340,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"interfaces/PostCategory.html":{}}}],["tslib",{"_index":2343,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["tus",{"_index":728,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["tuyos",{"_index":1890,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["type",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["término",{"_index":1450,"title":{},"body":{"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{}}}],["título",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/NotificacionesComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Score.html":{}}}],["u",{"_index":585,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["u.center",{"_index":2294,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.email",{"_index":2291,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.name",{"_index":2292,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.name?.tolowercase().includes(filtro",{"_index":2277,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u.role",{"_index":2293,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["u036f]/g",{"_index":712,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["uc",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["un",{"_index":288,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["una",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostCategory.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["undefined",{"_index":327,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ScoreService.html":{}}}],["undefined).subscribe(resumenes",{"_index":672,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["underline",{"_index":365,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["unit",{"_index":2394,"title":{},"body":{"index.html":{}}}],["uno",{"_index":2078,"title":{},"body":{"guards/RoleGuard.html":{}}}],["update",{"_index":849,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostCategoryService.html":{}}}],["update(id",{"_index":1742,"title":{},"body":{"injectables/PostCategoryService.html":{}}}],["update(idcomment",{"_index":870,"title":{},"body":{"injectables/CommentService.html":{}}}],["updateduser",{"_index":1690,"title":{},"body":{"components/PerfilComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["updatestatus",{"_index":2034,"title":{},"body":{"injectables/ReportService.html":{}}}],["updatestatus(idreport",{"_index":2044,"title":{},"body":{"injectables/ReportService.html":{}}}],["updateuser",{"_index":2162,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(email",{"_index":2195,"title":{},"body":{"injectables/UserService.html":{}}}],["uppercase",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{}}}],["url",{"_index":253,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"injectables/NotificacionService.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{}}}],["usa",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usabilidad",{"_index":255,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["usada",{"_index":1505,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["usado",{"_index":2037,"title":{},"body":{"injectables/ReportService.html":{}}}],["usando",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["usarán",{"_index":380,"title":{},"body":{"components/CategoriasAdminComponent.html":{}}}],["use",{"_index":349,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"index.html":{}}}],["user",{"_index":1077,"title":{"interfaces/User.html":{}},"body":{"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["user.center",{"_index":1663,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user.iduser",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/UsuariosComponent.html":{}}}],["user.name",{"_index":668,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{}}}],["user.policies",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.service",{"_index":2055,"title":{},"body":{"injectables/ReportService.html":{}}}],["user?.email",{"_index":1708,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user?.name",{"_index":1707,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user?.role",{"_index":1709,"title":{},"body":{"components/PerfilComponent.html":{}}}],["userform",{"_index":2244,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["username",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["usernamesubject",{"_index":2149,"title":{},"body":{"injectables/UserService.html":{}}}],["userrole",{"_index":2087,"title":{},"body":{"guards/RoleGuard.html":{}}}],["users",{"_index":2245,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["userservice",{"_index":532,"title":{"injectables/UserService.html":{}},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["usevalue",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":2351,"title":{},"body":{"index.html":{}}}],["uso",{"_index":1943,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{}}}],["usuario",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"interfaces/Report.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["usuarios.component.html",{"_index":2242,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["usuarios.component.scss",{"_index":2241,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["usuarioscomponent",{"_index":183,"title":{"components/UsuariosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{},"coverage.html":{}}}],["usuariosfiltrados",{"_index":2248,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["utiliza",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/RoleService.html":{}}}],["utilizada",{"_index":1447,"title":{},"body":{"interfaces/NotificacionGlobal.html":{}}}],["utilizado",{"_index":879,"title":{},"body":{"injectables/CommentService.html":{},"components/ForbiddenComponent.html":{},"components/ModalConfirmacionComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["utilizando",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilizar",{"_index":1831,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["val",{"_index":1685,"title":{},"body":{"components/PerfilComponent.html":{}}}],["valida",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["validando",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{}}}],["validar",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["validators",{"_index":455,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["validators.email",{"_index":2271,"title":{},"body":{"components/UsuariosComponent.html":{}}}],["validators.maxlength(300",{"_index":1064,"title":{},"body":{"components/DetalleComponent.html":{}}}],["validators.required",{"_index":464,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["valor",{"_index":542,"title":{},"body":{"components/CategoriasComponent.html":{},"interfaces/Comment.html":{},"components/DetalleComponent.html":{},"interfaces/Post.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{},"injectables/ScoreService.html":{}}}],["valores",{"_index":1039,"title":{},"body":{"components/DetalleComponent.html":{},"injectables/PostCategoryService.html":{}}}],["valparaíso",{"_index":1628,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["varas",{"_index":1612,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["variable",{"_index":2301,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2428,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venta",{"_index":1874,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["ver",{"_index":1006,"title":{},"body":{"components/DetalleComponent.html":{},"components/FooterComponent.html":{}}}],["verifica",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["verificar",{"_index":2095,"title":{},"body":{"injectables/RoleService.html":{}}}],["version",{"_index":2353,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vespucio",{"_index":1620,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["vez",{"_index":1781,"title":{},"body":{"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["vibrante",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vida",{"_index":1160,"title":{},"body":{"components/FooterComponent.html":{}}}],["viene",{"_index":1810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["views",{"_index":831,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["vigentes",{"_index":1387,"title":{},"body":{"components/NotificacionBannerComponent.html":{},"injectables/NotificacionService.html":{}}}],["villarrica",{"_index":1635,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["violencia",{"_index":1881,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["violentos",{"_index":1862,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["virtual",{"_index":1606,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["visibilidad",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"interfaces/NotificacionGlobal.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["visible",{"_index":303,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["visibles",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NotificacionGlobal.html":{},"injectables/NotificacionService.html":{},"components/NotificacionesComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["visit",{"_index":2420,"title":{},"body":{"index.html":{}}}],["vista",{"_index":560,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["vistas",{"_index":1022,"title":{},"body":{"components/DetalleComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["visual",{"_index":283,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["visualizaciones",{"_index":828,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Post.html":{},"injectables/PostService.html":{},"interfaces/PostView.html":{},"interfaces/Score.html":{}}}],["visualización",{"_index":512,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostService.html":{}}}],["visualizada",{"_index":1772,"title":{},"body":{"injectables/PostService.html":{}}}],["visualizar",{"_index":1549,"title":{},"body":{"components/PerfilComponent.html":{}}}],["viña",{"_index":1629,"title":{},"body":{"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/UsuariosComponent.html":{}}}],["void",{"_index":284,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{}}}],["voluntariado",{"_index":339,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DashboardComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["volver",{"_index":260,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DetalleComponent.html":{},"components/RegisterComponent.html":{}}}],["votado",{"_index":2133,"title":{},"body":{"injectables/ScoreService.html":{}}}],["vulgar",{"_index":1880,"title":{},"body":{"components/ReglasDeLaComunidadComponent.html":{}}}],["válido",{"_index":565,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/NotificacionesComponent.html":{}}}],["vía",{"_index":2201,"title":{},"body":{"injectables/UserService.html":{}}}],["warning",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["weight",{"_index":368,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["whatsapp",{"_index":1153,"title":{},"body":{"components/FooterComponent.html":{}}}],["whenever",{"_index":2368,"title":{},"body":{"index.html":{}}}],["white",{"_index":764,"title":{},"body":{"components/CategoriasComponent.html":{},"components/PerfilComponent.html":{}}}],["width",{"_index":501,"title":{},"body":{"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"components/DetalleComponent.html":{},"components/LoginComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"components/UsuariosComponent.html":{}}}],["works",{"_index":1189,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["wrap",{"_index":1313,"title":{},"body":{"components/ModalConfirmacionComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["wrapper",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{}}}],["xito",{"_index":698,"title":{},"body":{"components/CategoriasComponent.html":{}}}],["y",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BreadcrumbComponent.html":{},"components/CategoriasAdminComponent.html":{},"components/CategoriasComponent.html":{},"injectables/CommentService.html":{},"components/ConfiguracionComponent.html":{},"components/DashboardComponent.html":{},"components/DetalleComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotificacionBannerComponent.html":{},"components/NotificacionesComponent.html":{},"components/PerfilComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/PostService.html":{},"components/RegisterComponent.html":{},"components/ReglasDeLaComunidadComponent.html":{},"injectables/ReportService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/ScoreService.html":{},"injectables/UserService.html":{},"components/UsuariosComponent.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificacionesComponent.html":{},"injectables/PostCategoryService.html":{},"injectables/UserService.html":{}}}],["yes",{"_index":1766,"title":{},"body":{"injectables/PostService.html":{},"injectables/ScoreService.html":{}}}],["yyyy",{"_index":1499,"title":{},"body":{"components/NotificacionesComponent.html":{}}}],["z",{"_index":802,"title":{},"body":{"components/CategoriasComponent.html":{},"components/ModalConfirmacionComponent.html":{},"components/NotificacionBannerComponent.html":{}}}],["z0",{"_index":714,"title":{},"body":{"components/CategoriasComponent.html":{},"components/DashboardComponent.html":{}}}],["zonas",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":2345,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente raíz de la aplicación ConectaDuoc.\nGestiona la visibilidad del navbar y footer según la configuración de cada ruta.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarFooter\n                            \n                            \n                                mostrarNavbar\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            Escucha los cambios de navegación para actualizar la visibilidad\ndel navbar y footer según los data de la ruta activa.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChild(route: ActivatedRoute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Obtiene la ruta hija más profunda desde el árbol de rutas activas.\nEsto es necesario para acceder correctamente a los data de la ruta actual.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta activa principal.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ActivatedRoute\n\n                        \n                            \n                                Ruta hija más profunda.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    Define si se debe mostrar el footer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarNavbar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Define si se debe mostrar el navbar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Servicio para acceder a parámetros y datos de la ruta activa\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n            \n                \n                    Servicio de enrutamiento para redirigir entre componentes o páginas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Conecta-DUOC'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Título principal de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { inject, Component } from '@angular/core';\nimport { ActivatedRoute, Data, NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { filter } from 'rxjs';\n\n/**\n * Componente raíz de la aplicación ConectaDuoc.\n * Gestiona la visibilidad del navbar y footer según la configuración de cada ruta.\n */\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  /** Servicio de enrutamiento para redirigir entre componentes o páginas */\n  private router = inject(Router);\n\n  /** Servicio para acceder a parámetros y datos de la ruta activa */\n  private route = inject(ActivatedRoute);\n\n  /** Título principal de la aplicación */\n  title = 'Conecta-DUOC';\n\n  /** Define si se debe mostrar el navbar */\n  mostrarNavbar = true;\n\n  /** Define si se debe mostrar el footer */\n  mostrarFooter = true;\n\n  /**\n   * Escucha los cambios de navegación para actualizar la visibilidad\n   * del navbar y footer según los `data` de la ruta activa.\n   */\n  constructor() {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(() => {\n        const currentRoute = this.getChild(this.route);\n        const data: Data = currentRoute.snapshot.data;\n\n        this.mostrarNavbar = data['showNavbar'] !== false;\n        this.mostrarFooter = data['showFooter'] !== false;\n      });\n  }\n\n  /**\n   * Obtiene la ruta hija más profunda desde el árbol de rutas activas.\n   * Esto es necesario para acceder correctamente a los `data` de la ruta actual.\n   * @param route Ruta activa principal.\n   * @returns Ruta hija más profunda.\n   */\n  private getChild(route: ActivatedRoute): ActivatedRoute {\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n\n}\n\n    \n\n    \n        @if (mostrarNavbar) {\n  \n}\n\n\n  \n\n\n@if (mostrarFooter) {\n  \n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mostrarNavbar) {  }  @if (mostrarFooter) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard para proteger rutas mediante la autenticación de MSAL (Microsoft Authentication Library).\nSe asegura de que el usuario tenga una sesión activa con Azure AD antes de permitir el acceso.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:27\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene una sesión activa para permitir el acceso a la ruta protegida.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario está autenticado, de lo contrario redirige al inicio (/) y retorna false.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { inject, Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { MsalService } from '@azure/msal-angular';\n\n/**\n * Guard para proteger rutas mediante la autenticación de MSAL (Microsoft Authentication Library).\n * Se asegura de que el usuario tenga una sesión activa con Azure AD antes de permitir el acceso.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * Servicio de autenticación MSAL para validar sesión activa.\n   */\n  private msalService = inject(MsalService);\n\n  /**\n   * Servicio de enrutamiento para redirigir si no está autenticado.\n   */\n  private router = inject(Router);\n\n  /**\n   * Verifica si el usuario tiene una sesión activa para permitir el acceso a la ruta protegida.\n   * @returns `true` si el usuario está autenticado, de lo contrario redirige al inicio (`/`) y retorna `false`.\n   */\n  canActivate(): boolean {\n    const account = this.msalService.instance.getActiveAccount();\n\n    if (account) {\n      // Usuario autenticado\n      return true;\n    } else {\n      // Usuario no autenticado, redirigir al login\n      console.warn('No se encontró una cuenta activa, redirigiendo al inicio de sesión.');\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n// Este guard se utiliza para proteger rutas que requieren autenticación.\n// Si el usuario no está autenticado, se le redirige a la página de inicio de sesión.\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/breadcrumb/breadcrumb.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de generar la ruta de navegación (breadcrumb)\ndinámicamente según la URL actual. Mejora la usabilidad al mostrar al usuario\nsu posición dentro de la app y permite volver a rutas anteriores.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                toReadable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/breadcrumb/breadcrumb.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Al inicializar el componente, construye los ítems del breadcrumb en base a la URL activa.\nSe ignoran rutas como dashboard o categoria para evitar redundancia visual.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toReadable\n                        \n                    \n                \n            \n            \n                \n                        \n                    toReadable(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/breadcrumb/breadcrumb.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Convierte un segmento de la URL en un texto legible para mostrar en el breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fragmento de la URL.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Texto más amigable y traducido si aplica.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:28\n                        \n                    \n\n            \n                \n                    Arreglo de ítems que componen el breadcrumb. Cada ítem tiene un label visible\ny un path (opcional) para navegar hacia esa sección.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:22\n                        \n                    \n\n            \n                \n                    Servicio para acceder a los parámetros de la ruta actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/breadcrumb/breadcrumb.component.ts:19\n                        \n                    \n\n            \n                \n                    Servicio de enrutamiento para redirecciones y navegación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\n\n\n/**\n * Componente encargado de generar la ruta de navegación (breadcrumb)\n * dinámicamente según la URL actual. Mejora la usabilidad al mostrar al usuario\n * su posición dentro de la app y permite volver a rutas anteriores.\n */\n@Component({\n  selector: 'app-breadcrumb',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n  /** Servicio de enrutamiento para redirecciones y navegación */\n  private router = inject(Router);\n\n  /** Servicio para acceder a los parámetros de la ruta actual */\n  private route = inject(ActivatedRoute);\n\n  /**\n   * Arreglo de ítems que componen el breadcrumb. Cada ítem tiene un `label` visible\n   * y un `path` (opcional) para navegar hacia esa sección.\n   */\n  items: { label: string; path?: string }[] = [];\n\n  /**\n   * Al inicializar el componente, construye los ítems del breadcrumb en base a la URL activa.\n   * Se ignoran rutas como `dashboard` o `categoria` para evitar redundancia visual.\n   */\n  ngOnInit(): void {\n    const fullPath = this.router.url.split('?')[0];\n    const segments = fullPath.split('/').filter(Boolean);\n\n    let cumulativePath = '';\n    this.items = [];\n\n    segments.forEach((seg, index) => {\n      cumulativePath += `/${seg}`;\n\n      // Evitar mostrar rutas irrelevantes\n      if (seg === 'dashboard' || seg === 'categoria') {\n        return;\n      }\n\n      const isLast = index === segments.length - 1;\n      this.items.push({\n        label: this.toReadable(seg),\n        path: isLast ? undefined : cumulativePath\n      });\n    });\n\n    // Agregar manualmente 'Inicio' al comienzo\n    this.items.unshift({ label: 'Inicio', path: '/dashboard' });\n  }\n\n  /**\n   * Convierte un segmento de la URL en un texto legible para mostrar en el breadcrumb.\n   * @param slug Fragmento de la URL.\n   * @returns Texto más amigable y traducido si aplica.\n   */\n  private toReadable(slug: string): string {\n    const mapa: Record = {\n      ayudantias: 'Ayudantías',\n      deportes: 'Deportes',\n      culturales: 'Culturales y Recreativas',\n      voluntariado: 'Voluntariado',\n      trueques: 'Trueques',\n      dashboard: 'Inicio'\n    };\n\n    return mapa[slug] || slug.charAt(0).toUpperCase() + slug.slice(1);\n  }\n\n}\n\n    \n\n    \n        \n  \n    @for (item of items; track item; let last = $last) {\n      \n        @if (!last && item.path) {\n          {{ item.label }}\n        }\n        @if (last || !item.path) {\n          {{ item.label }}\n        }\n      \n    }\n  \n\n    \n\n    \n                \n                    ./breadcrumb.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.breadcrumb-container {\n    background-color: transparent;\n    padding: 0;\n\n    .breadcrumb {\n        background-color: transparent;\n        font-size: 0.95rem;\n    }\n\n    .breadcrumb-item {\n        a {\n            color: $amarillo;\n            text-decoration: none;\n\n            &:hover {\n                text-decoration: underline;\n            }\n        }\n\n        &.active {\n            color: $gris;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (item of items; track item; let last = $last) {              @if (!last && item.path) {          {{ item.label }}        }        @if (last || !item.path) {          {{ item.label }}        }          }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriasAdminComponent.html":{"url":"components/CategoriasAdminComponent.html","title":"component - CategoriasAdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriasAdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/categorias-admin/categorias-admin.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente del panel de configuración para administrar categorías de publicaciones.\nPermite crear, editar, eliminar y filtrar categorías que se usarán en la plataforma.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-categorias\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                                BreadcrumbComponent\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./categorias-admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categorias-admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriaForm\n                            \n                            \n                                categorias\n                            \n                            \n                                    Private\n                                categoryService\n                            \n                            \n                                editing\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroCategoria\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelar\n                            \n                            \n                                cargar\n                            \n                            \n                                editar\n                            \n                            \n                                eliminar\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoriasFiltradas\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelar\n                        \n                    \n                \n            \n            \n                \ncancelar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Cancela la edición actual y reinicia el formulario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargar\n                        \n                    \n                \n            \n            \n                \ncargar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Carga todas las categorías desde el backend.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(cat: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Carga la categoría seleccionada en el formulario para editar.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Categoría a editar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(cat: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Elimina una categoría del sistema tras confirmación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Categoría a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Guarda los cambios en una categoría existente o crea una nueva.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario y carga las categorías existentes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:31\n                        \n                    \n\n            \n                \n                    Formulario para crear o editar una categoría\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:28\n                        \n                    \n\n            \n                \n                    Lista de categorías cargadas desde el backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:25\n                        \n                    \n\n            \n                \n                    Servicio que gestiona la creación, edición y eliminación de categorías de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:34\n                        \n                    \n\n            \n                \n                    Categoría que se está editando actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:22\n                        \n                    \n\n            \n                \n                    Servicio para crear y manejar formularios reactivos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroCategoria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:37\n                        \n                    \n\n            \n                \n                    Texto para filtrar categorías por nombre\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoriasFiltradas\n                    \n                \n\n                \n                    \n                        getcategoriasFiltradas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/configuracion/categorias-admin/categorias-admin.component.ts:55\n                                \n                            \n                    \n                        \n                                Devuelve las categorías filtradas por nombre.\n\n\n                                \n                                    Returns :     PostCategory[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PostCategoryService } from '../../../core/services/post-category.service';\nimport { PostCategory } from '../../../models/postCategory';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n/**\n * Componente del panel de configuración para administrar categorías de publicaciones.\n * Permite crear, editar, eliminar y filtrar categorías que se usarán en la plataforma.\n */\n@Component({\n  selector: 'app-config-categorias',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, BreadcrumbComponent, FormsModule],\n  templateUrl: './categorias-admin.component.html',\n  styleUrls: ['./categorias-admin.component.scss']\n})\nexport class CategoriasAdminComponent implements OnInit {\n  /** Servicio para crear y manejar formularios reactivos */\n  private fb = inject(FormBuilder);\n\n  /** Servicio que gestiona la creación, edición y eliminación de categorías de publicaciones */\n  private categoryService = inject(PostCategoryService);\n\n  /** Lista de categorías cargadas desde el backend */\n  categorias: PostCategory[] = [];\n\n  /** Formulario para crear o editar una categoría */\n  categoriaForm!: FormGroup;\n\n  /** Categoría que se está editando actualmente */\n  editing: PostCategory | null = null;\n\n  /** Texto para filtrar categorías por nombre */\n  filtroCategoria: string = '';\n\n  /**\n   * Inicializa el formulario y carga las categorías existentes.\n   */\n  ngOnInit(): void {\n    this.categoriaForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      status: [1, Validators.required]\n    });\n\n    this.cargar();\n  }\n\n  /**\n   * Devuelve las categorías filtradas por nombre.\n   */\n  get categoriasFiltradas(): PostCategory[] {\n    if (!this.filtroCategoria.trim()) return this.categorias;\n    const filtro = this.filtroCategoria.toLowerCase();\n    return this.categorias.filter(c => c.name.toLowerCase().includes(filtro));\n  }\n\n  /**\n   * Carga todas las categorías desde el backend.\n   */\n  cargar(): void {\n    this.categoryService.getAll().subscribe(c => (this.categorias = c));\n  }\n\n  /**\n   * Carga la categoría seleccionada en el formulario para editar.\n   * @param cat Categoría a editar.\n   */\n  editar(cat: PostCategory): void {\n    this.editing = { ...cat };\n    this.categoriaForm.patchValue(this.editing);\n  }\n\n  /**\n   * Cancela la edición actual y reinicia el formulario.\n   */\n  cancelar(): void {\n    this.editing = null;\n    this.categoriaForm.reset({ status: 1 });\n  }\n\n  /**\n   * Guarda los cambios en una categoría existente o crea una nueva.\n   */\n  guardar(): void {\n    if (this.categoriaForm.invalid) return;\n    const datos = this.categoriaForm.value as PostCategory;\n    if (this.editing) {\n      this.categoryService.update(this.editing.idCategory, datos).subscribe(() => {\n        this.cargar();\n        this.cancelar();\n      });\n    } else {\n      this.categoryService.create(datos).subscribe(() => {\n        this.cargar();\n        this.categoriaForm.reset({ status: 1 });\n      });\n    }\n  }\n\n  /**\n   * Elimina una categoría del sistema tras confirmación.\n   * @param cat Categoría a eliminar.\n   */\n  eliminar(cat: PostCategory): void {\n    if (!confirm('¿Eliminar categoría?')) return;\n    this.categoryService.delete(cat.idCategory).subscribe(() => this.cargar());\n  }\n\n}\n    \n\n    \n        \n    \n    Categorías\n    Administra las categorías de la plataforma\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Activa\n                    Inactiva\n                \n            \n            \n                {{ editing ? 'Actualizar' : 'Agregar' }}\n                Cancelar\n            \n        \n    \n\n    \n    \n        \n    \n\n    \n        \n            \n                \n                    Nombre\n                    Descripción\n                    Estado\n                    \n                \n            \n            \n                \n                    {{ c.name }}\n                    {{ c.description }}\n                    {{ c.status ? 'Activa' : 'Inactiva' }}\n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./categorias-admin.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Categorías    Administra las categorías de la plataforma                                                                                                                                            Activa                    Inactiva                                                        {{ editing ? \\'Actualizar\\' : \\'Agregar\\' }}                Cancelar                                                                                                        Nombre                    Descripción                    Estado                                                                                                {{ c.name }}                    {{ c.description }}                    {{ c.status ? \\'Activa\\' : \\'Inactiva\\' }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriasAdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriasComponent.html":{"url":"components/CategoriasComponent.html","title":"component - CategoriasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categorias/categorias.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que gestiona la visualización, creación, filtrado, reporte y puntuación\nde publicaciones dentro de una categoría específica en ConectaDuoc.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categorias\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                BreadcrumbComponent\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                            CommonModule\n                                NotificacionBannerComponent\n                \n            \n\n            \n                styleUrls\n                ./categorias.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categorias.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriaId\n                            \n                            \n                                categoriaNombre\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroBusqueda\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                misScores\n                            \n                            \n                                mostrarFormulario\n                            \n                            \n                                nombreCategoriaMostrada\n                            \n                            \n                                nombresUsuarios\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                promedioScores\n                            \n                            \n                                publicaciones\n                            \n                            \n                                    Private\n                                reportService\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                slug\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calificar\n                            \n                            \n                                cargarPublicaciones\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                nuevaPublicacion\n                            \n                            \n                                reportarPublicacion\n                            \n                            \n                                    Private\n                                slugify\n                            \n                            \n                                toggleFormulario\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publicacionesFiltradas\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calificar\n                        \n                    \n                \n            \n            \n                \ncalificar(pub: Post, valor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Envía una calificación (score) para una publicación y actualiza el promedio mostrado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pub\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Publicación a calificar\n\n                                            \n                                        \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de la calificación (de 1 a 5)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPublicaciones\n                        \n                    \n                \n            \n            \n                \ncargarPublicaciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Carga todas las publicaciones de la categoría actual, junto con los nombres de usuarios\ny las puntuaciones (promedio y personales).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Inicializa la vista de categoría, cargando la categoría correspondiente y sus publicaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevaPublicacion\n                        \n                    \n                \n            \n            \n                \nnuevaPublicacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Envía una nueva publicación al backend si el formulario es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarPublicacion\n                        \n                    \n                \n            \n            \n                \nreportarPublicacion(pub: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:213\n                        \n                    \n\n\n            \n                \n                        Reporta una publicación por contenido inapropiado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pub\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Publicación a reportar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        slugify\n                        \n                    \n                \n            \n            \n                \n                        \n                    slugify(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Convierte un texto en un slug amigable para URL.\nElimina tildes, caracteres especiales y reemplaza espacios por guiones.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Texto a transformar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Texto transformado en formato slug\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFormulario\n                        \n                    \n                \n            \n            \n                \ntoggleFormulario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/categorias.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Muestra u oculta el formulario para crear una nueva publicación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:61\n                        \n                    \n\n            \n                \n                    ID de la categoría actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:64\n                        \n                    \n\n            \n                \n                    Nombre legible de la categoría actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:40\n                        \n                    \n\n            \n                \n                    Servicio para construir formularios reactivos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroBusqueda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:82\n                        \n                    \n\n            \n                \n                    Texto de búsqueda para filtrar publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:85\n                        \n                    \n\n            \n                \n                    Formulario para nueva publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:91\n                        \n                    \n\n            \n                \n                    Estado de carga\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        misScores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:79\n                        \n                    \n\n            \n                \n                    Diccionario con puntuación personal del usuario en cada publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarFormulario\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:88\n                        \n                    \n\n            \n                \n                    Controla visibilidad del formulario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreCategoriaMostrada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombresUsuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:73\n                        \n                    \n\n            \n                \n                    Diccionario con nombres de usuarios indexados por ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:43\n                        \n                    \n\n            \n                \n                    Servicio que gestiona las categorías de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:46\n                        \n                    \n\n            \n                \n                    Servicio que gestiona las publicaciones del sistema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedioScores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:76\n                        \n                    \n\n            \n                \n                    Diccionario con promedios de puntuación por publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:70\n                        \n                    \n\n            \n                \n                    Publicaciones cargadas desde el backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:52\n                        \n                    \n\n            \n                \n                    Servicio para enviar y gestionar reportes de publicaciones o comentarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:34\n                        \n                    \n\n            \n                \n                    Servicio para acceder a los parámetros de la ruta actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:37\n                        \n                    \n\n            \n                \n                    Servicio para navegar entre rutas del sistema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:55\n                        \n                    \n\n            \n                \n                    Servicio para asignar y consultar calificaciones (scores) de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:58\n                        \n                    \n\n            \n                \n                    Slug obtenido desde la URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/categorias.component.ts:49\n                        \n                    \n\n            \n                \n                    Servicio que maneja los datos del usuario actual\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publicacionesFiltradas\n                    \n                \n\n                \n                    \n                        getpublicacionesFiltradas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/categorias/categorias.component.ts:157\n                                \n                            \n                    \n                        \n                                Devuelve las publicaciones filtradas por el texto ingresado.\n\n\n                                \n                                    Returns :         Post[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/* BREADCRUMB y BANNER*/\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\nimport { NotificacionBannerComponent } from '../notificacion-banner/notificacion-banner.component';\n\n/* MODELS */\nimport { Post } from '../../models/post';\n\n/* SERVICES */\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { PostService } from '../../core/services/post.service';\nimport { UserService } from '../../core/services/user.service';\nimport { ReportService } from '../../core/services/report.service';\nimport { ScoreService } from '../../core/services/score.service';\n\n/**\n * Componente que gestiona la visualización, creación, filtrado, reporte y puntuación\n * de publicaciones dentro de una categoría específica en ConectaDuoc.\n */\n@Component({\n  selector: 'app-categorias',\n  standalone: true,\n  imports: [BreadcrumbComponent, FormsModule, ReactiveFormsModule, RouterModule, CommonModule, NotificacionBannerComponent],\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.scss']\n})\nexport class CategoriasComponent implements OnInit {\n  /** Servicio para acceder a los parámetros de la ruta actual */\n  private route = inject(ActivatedRoute);\n\n  /** Servicio para navegar entre rutas del sistema */\n  private router = inject(Router);\n\n  /** Servicio para construir formularios reactivos */\n  private fb = inject(FormBuilder);\n\n  /** Servicio que gestiona las categorías de publicaciones */\n  private postCategoryService = inject(PostCategoryService);\n\n  /** Servicio que gestiona las publicaciones del sistema */\n  private postService = inject(PostService);\n\n  /** Servicio que maneja los datos del usuario actual */\n  private userService = inject(UserService);\n\n  /** Servicio para enviar y gestionar reportes de publicaciones o comentarios */\n  private reportService = inject(ReportService);\n\n  /** Servicio para asignar y consultar calificaciones (scores) de publicaciones */\n  private scoreService = inject(ScoreService);\n\n  /** Slug obtenido desde la URL */\n  slug = '';\n\n  /** ID de la categoría actual */\n  categoriaId: number | null = null;\n\n  /** Nombre legible de la categoría actual */\n  categoriaNombre = '';\n\n  /* Nombre de la categoría a mostrar */\n  nombreCategoriaMostrada = '';\n\n  /** Publicaciones cargadas desde el backend */\n  publicaciones: Post[] = [];\n\n  /** Diccionario con nombres de usuarios indexados por ID */\n  nombresUsuarios: Record = {};\n\n  /** Diccionario con promedios de puntuación por publicación */\n  promedioScores: Record = {};\n\n  /** Diccionario con puntuación personal del usuario en cada publicación */\n  misScores: Record = {};\n\n  /** Texto de búsqueda para filtrar publicaciones */\n  filtroBusqueda = '';\n\n  /** Formulario para nueva publicación */\n  form!: FormGroup;\n\n  /** Controla visibilidad del formulario */\n  mostrarFormulario = false;\n\n  /** Estado de carga */\n  loading = true;\n\n  /**\n   * Inicializa la vista de categoría, cargando la categoría correspondiente y sus publicaciones.\n   */\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      content: ['', Validators.required]\n    });\n\n    this.slug = this.route.snapshot.paramMap.get('slug') || '';\n    console.log('Slug cargado:', this.slug);\n\n    this.postCategoryService.getAll().subscribe(categories => {\n      const categoria = categories.find(cat =>\n        this.slugify(cat.name) === this.slug\n      );\n\n      if (!categoria) {\n        this.router.navigate(['/dashboard']);\n        return;\n      }\n\n      this.categoriaId = categoria.idCategory;\n      this.categoriaNombre = categoria.name;\n      this.nombreCategoriaMostrada = categoria.name;\n\n      this.cargarPublicaciones();\n    });\n  }\n\n  /**\n   * Carga todas las publicaciones de la categoría actual, junto con los nombres de usuarios\n   * y las puntuaciones (promedio y personales).\n   */\n  cargarPublicaciones(): void {\n    if (!this.categoriaId) return;\n\n    this.loading = true;\n    this.postService.getAll(this.categoriaId).subscribe(posts => {\n      this.publicaciones = posts;\n      this.loading = false;\n\n      const ids = [...new Set(posts.map(p => p.idUser))];\n      ids.forEach(id => {\n        this.userService.getUserById(id).subscribe(user => {\n          this.nombresUsuarios[id] = user.name;\n        });\n      });\n\n      const idUser = this.userService.getIdUser();\n      if (idUser) {\n        this.scoreService.getResumenScores(idUser, this.categoriaId ?? undefined).subscribe(resumenes => {\n          resumenes.forEach(r => {\n            this.promedioScores[r.idPost] = r.promedio;\n            this.misScores[r.idPost] = r.miScore;\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Devuelve las publicaciones filtradas por el texto ingresado.\n   */\n  get publicacionesFiltradas(): Post[] {\n    if (!this.filtroBusqueda.trim()) return this.publicaciones;\n    const texto = this.filtroBusqueda.trim().toLowerCase();\n    return this.publicaciones.filter(pub =>\n      pub.title.toLowerCase().includes(texto) ||\n      pub.content.toLowerCase().includes(texto)\n    );\n  }\n\n  /**\n   * Muestra u oculta el formulario para crear una nueva publicación.\n   */\n  toggleFormulario(): void {\n    this.mostrarFormulario = !this.mostrarFormulario;\n    if (!this.mostrarFormulario) this.form.reset();\n  }\n\n\n  /**\n   * Envía una nueva publicación al backend si el formulario es válido.\n   */\n  nuevaPublicacion(): void {\n    if (this.form.invalid || !this.categoriaId) return;\n\n    const idUser = this.userService.getIdUser();\n    if (!idUser) {\n      alert('No se pudo obtener el ID del usuario.');\n      return;\n    }\n\n    const nueva = {\n      title: this.form.value.title,\n      content: this.form.value.content,\n      idCategory: this.categoriaId,\n      idUser: idUser,\n      createdDate: new Date().toISOString()\n    };\n\n    this.postService.createPost(nueva).subscribe({\n      next: () => {\n        this.cargarPublicaciones();\n        this.form.reset();\n        this.mostrarFormulario = false;\n        alert('¡Publicación creada con éxito!');\n      },\n      error: err => {\n        console.error('Error al crear publicación:', err);\n        alert('Error al publicar');\n      }\n    });\n  }\n\n  /**\n   * Reporta una publicación por contenido inapropiado.\n   * @param pub Publicación a reportar.\n   */\n  reportarPublicacion(pub: Post): void {\n    const reason = prompt('Motivo del reporte', 'Contenido inapropiado');\n    if (!reason) return;\n    this.reportService.reportPost(pub.idPost, reason).subscribe(() => {\n      alert('Publicación reportada');\n    });\n  }\n\n  /**\n   * Convierte un texto en un slug amigable para URL.\n   * Elimina tildes, caracteres especiales y reemplaza espacios por guiones.\n   *\n   * @param text Texto a transformar\n   * @returns Texto transformado en formato slug\n   */\n  private slugify(text: string): string {\n    return text\n      .toLowerCase()\n      .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  }\n\n  /**\n   * Envía una calificación (score) para una publicación y actualiza el promedio mostrado.\n   *\n   * @param pub Publicación a calificar\n   * @param valor Valor de la calificación (de 1 a 5)\n   */\n  calificar(pub: Post, valor: number): void {\n    const idUser = this.userService.getIdUser();\n    if (!idUser) return;\n\n    this.scoreService.setScore({ idPost: pub.idPost, idUser, score: valor }).subscribe(() => {\n      this.misScores[pub.idPost] = valor;\n      this.scoreService.getAverageScore(pub.idPost).subscribe(avg => {\n        this.promedioScores[pub.idPost] = avg;\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        {{ nombreCategoriaMostrada }}\n        \n            \n            {{ mostrarFormulario ? 'Cancelar' : 'Publicar' }}\n        \n    \n    \n        Aquí puedes compartir tus dudas, preguntas o temas relacionados con {{ nombreCategoriaMostrada\n        }}. ¡Sé parte de la comunidad!\n    \n    \n        Recuerda: Sé respetuoso y sigue las normas de la comunidad. Las publicaciones inapropiadas\n        pueden ser eliminadas.\n    \n\n    @if (!publicaciones.length) {\n    \n        Aún no hay publicaciones en esta categoría. Sé el primero en compartir una 💡\n    \n    }\n\n    @if (mostrarFormulario) {\n    \n        \n            Título\n            \n        \n        \n            Descripción\n            \n        \n        \n            Publicar\n        \n    \n    }\n\n    @if (publicaciones.length) {\n    \n        \n    \n\n    \n        \n\n            \n                \n\n                \n                    {{ pub.title }}\n                    \n                        por {{ nombresUsuarios[pub.idUser] || 'Cargando...' }} • {{ pub.createdDate | date:'dd/MM/yyyy'\n                        }}\n                    \n                    \n                        {{ pub.content }}\n                    \n                    \n                    \n\n                        \n                        \n                            = s,\n                            'far text-muted': (misScores[pub.idPost] ?? 0) \n                        \n\n                        \n                        \n                            {{ promedioScores[pub.idPost] | number:'1.1-1' }} / 5\n                        \n\n                        \n                        \n                            \n                        \n                    \n\n\n                \n            \n\n        \n    \n\n    }\n\n    \n\n    \n                \n                    ./categorias.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n/* CONTENEDOR GENERAL */\n.foro-categoria-container {\n    //background-color: $gris;\n    border-radius: 1rem;\n    padding: 2rem;\n\n    .cabecera-categoria {\n        background-color: white;\n        padding: 1.5rem;\n        border-radius: 1rem;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n        margin-bottom: 2rem;\n    }\n\n    .titulo-categoria {\n        font-size: 2.25rem;\n        font-weight: 700;\n        color: $negro;\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            bottom: -10px;\n            left: 0;\n            width: 80px;\n            height: 3px;\n            background-color: $amarillo;\n            border-radius: 4px;\n        }\n    }\n}\n\n/* Formulario de publicación */\nform {\n    background-color: $blanco;\n    padding: 2rem;\n    border-radius: 1rem;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.06);\n\n    label {\n        font-weight: 600;\n    }\n\n    input,\n    textarea {\n        border-radius: 0.75rem;\n        padding: 0.75rem 1rem;\n        border: 1px solid #ced4da;\n    }\n\n    button {\n        margin-top: 1rem;\n        border-radius: 0.75rem;\n        font-size: 1rem;\n    }\n}\n\n/* Tabla de publicaciones */\n.card {\n    transition: transform 0.2s ease;\n    position: relative;\n\n    &:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n    }\n\n    .stretched-link {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n\n    .btn,\n    .badge,\n    .card-body * {\n        position: relative;\n        z-index: 3;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ nombreCategoriaMostrada }}                                {{ mostrarFormulario ? \\'Cancelar\\' : \\'Publicar\\' }}                        Aquí puedes compartir tus dudas, preguntas o temas relacionados con {{ nombreCategoriaMostrada        }}. ¡Sé parte de la comunidad!                Recuerda: Sé respetuoso y sigue las normas de la comunidad. Las publicaciones inapropiadas        pueden ser eliminadas.        @if (!publicaciones.length) {            Aún no hay publicaciones en esta categoría. Sé el primero en compartir una 💡        }    @if (mostrarFormulario) {                        Título                                        Descripción                                        Publicar                }    @if (publicaciones.length) {                                                                                            {{ pub.title }}                                            por {{ nombresUsuarios[pub.idUser] || \\'Cargando...\\' }} • {{ pub.createdDate | date:\\'dd/MM/yyyy\\'                        }}                                                                {{ pub.content }}                                                                                                                                        = s,                            \\'far text-muted\\': (misScores[pub.idPost] ?? 0)                                                                                                     {{ promedioScores[pub.idPost] | number:\\'1.1-1\\' }} / 5                                                                                                                                                                                            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un comentario realizado por un usuario en una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            idComment\n                                        \n                                \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido del comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha en que se realizó el comentario (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idComment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación a la que pertenece el comentario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que escribió el comentario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/comment.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar los comentarios en las publicaciones de ConectaDuoc.\nPermite obtener, crear, editar y eliminar comentarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getByPostId\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(comment: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo comentario en una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                comment\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Comment sin idComment ni date, que serán generados por el backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Comentario creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(idComment: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Elimina un comentario por su ID.\n(Requiere permisos adecuados).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByPostId\n                        \n                    \n                \n            \n            \n                \ngetByPostId(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los comentarios asociados a una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de comentarios.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(idComment: number, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/comment.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Actualiza el contenido de un comentario existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario.\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo contenido del comentario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Comentario actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/comment'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/comment.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para comentarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/comment.service.ts:18\n                        \n                    \n\n            \n                \n                    Cliente HTTP utilizado para realizar peticiones al backend\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Comment } from '../../models/post';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar los comentarios en las publicaciones de ConectaDuoc.\n * Permite obtener, crear, editar y eliminar comentarios.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n  /** URL base del API para comentarios */\n  private apiUrl = 'http://localhost:9090/api/comment';\n\n  /** Cliente HTTP utilizado para realizar peticiones al backend */\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todos los comentarios asociados a una publicación.\n   * @param idPost ID de la publicación.\n   * @returns Lista de comentarios.\n   */\n  getByPostId(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}?idPost=${idPost}`);\n  }\n\n  /**\n   * Crea un nuevo comentario en una publicación.\n   * @param comment Objeto `Comment` sin `idComment` ni `date`, que serán generados por el backend.\n   * @returns Comentario creado.\n   */\n  create(comment: Omit): Observable {\n    return this.http.post(this.apiUrl, comment);\n  }\n\n  /**\n   * Elimina un comentario por su ID.\n   * (Requiere permisos adecuados).\n   * @param idComment ID del comentario a eliminar.\n   */\n  delete(idComment: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${idComment}`);\n  }\n\n  /**\n   * Actualiza el contenido de un comentario existente.\n   * @param idComment ID del comentario.\n   * @param content Nuevo contenido del comentario.\n   * @returns Comentario actualizado.\n   */\n  update(idComment: number, content: string): Observable {\n    return this.http.put(`${this.apiUrl}/${idComment}`, { content });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfiguracionComponent.html":{"url":"components/ConfiguracionComponent.html","title":"component - ConfiguracionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfiguracionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/configuracion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente base del panel de configuración administrativa.\nActúa como contenedor de navegación hacia módulos como usuarios, categorías y notificaciones.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuracion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                                BreadcrumbComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./configuracion.component.html\n            \n\n\n\n            \n                styleUrl\n                ./configuracion.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n/**\n * Componente base del panel de configuración administrativa.\n * Actúa como contenedor de navegación hacia módulos como usuarios, categorías y notificaciones.\n */\n@Component({\n  selector: 'app-configuracion',\n  standalone: true,\n  imports: [CommonModule, RouterModule, BreadcrumbComponent],\n  templateUrl: './configuracion.component.html',\n  styleUrl: './configuracion.component.scss'\n})\nexport class ConfiguracionComponent {\n\n}\n\n    \n\n    \n        \n    \n    Panel de Configuración\n    Administra los aspectos generales de la plataforma\n\n    \n        \n            \n                \n                    \n                        \n                    \n                    Usuarios\n                    Administrar usuarios de la plataforma\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    Categorías\n                    Gestionar categorías de publicaciones\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    Notificaciones\n                    Enviar mensajes a todos los usuarios\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Panel de Configuración    Administra los aspectos generales de la plataforma                                                                                                                            Usuarios                    Administrar usuarios de la plataforma                                                                                                                                                            Categorías                    Gestionar categorías de publicaciones                                                                                                                                                            Notificaciones                    Enviar mensajes a todos los usuarios                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfiguracionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal del dashboard del usuario.\nMuestra las categorías activas como accesos rápidos según el rol,\ny carga el banner de notificaciones globales.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                                NotificacionBannerComponent\n                \n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                iconMap\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                slugify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Al iniciar el componente:\n\nObtiene nombre y rol del usuario.\nCarga las categorías visibles (filtrando las no activas y las solo-admin).\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        slugify\n                        \n                    \n                \n            \n            \n                \n                        \n                    slugify(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Convierte un texto a formato slug, eliminando tildes y espacios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Texto a transformar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Slug limpio en minúsculas.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Categorías visibles en el dashboard, con icono, ruta y visibilidad según rol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iconMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    'ayudantias-academicas': 'fas fa-book-open',\n    'actividades-deportivas': 'fas fa-futbol',\n    'culturales-y-recreativas': 'fas fa-theater-masks',\n    'voluntariado-ecoduoc': 'fas fa-leaf',\n    'trueques-estudiantiles': 'fas fa-exchange-alt',\n    'panel-de-configuracion': 'fas fa-cog',\n    'reportes': 'fas fa-chart-bar'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:40\n                        \n                    \n\n            \n                \n                    Mapa de slugs a íconos FontAwesome\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:26\n                        \n                    \n\n            \n                \n                    Servicio que maneja las categorías de publicaciones disponibles en el sistema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:32\n                        \n                    \n\n            \n                \n                    Rol del usuario (admin, student, etc.)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:29\n                        \n                    \n\n            \n                \n                    Nombre del usuario autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:23\n                        \n                    \n\n            \n                \n                    Servicio para acceder y gestionar los datos del usuario actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../core/services/user.service';\nimport { RouterModule } from '@angular/router';\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { PostCategory } from '../../models/postCategory';\nimport { NotificacionBannerComponent } from '../notificacion-banner/notificacion-banner.component';\n\n/**\n * Componente principal del dashboard del usuario.\n * Muestra las categorías activas como accesos rápidos según el rol,\n * y carga el banner de notificaciones globales.\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterModule, NotificacionBannerComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  /** Servicio para acceder y gestionar los datos del usuario actual */\n  private userService = inject(UserService);\n\n  /** Servicio que maneja las categorías de publicaciones disponibles en el sistema */\n  private postCategoryService = inject(PostCategoryService);\n\n  /** Nombre del usuario autenticado */\n  username: string | null = null;\n\n  /** Rol del usuario (`admin`, `student`, etc.) */\n  role: string | null = null;\n\n  /**\n   * Categorías visibles en el dashboard, con icono, ruta y visibilidad según rol.\n   */\n  categories: (PostCategory & { icono: string; ruta: string, adminOnly?: boolean; })[] = [];\n\n  /** Mapa de slugs a íconos FontAwesome */\n  private iconMap: Record = {\n    'ayudantias-academicas': 'fas fa-book-open',\n    'actividades-deportivas': 'fas fa-futbol',\n    'culturales-y-recreativas': 'fas fa-theater-masks',\n    'voluntariado-ecoduoc': 'fas fa-leaf',\n    'trueques-estudiantiles': 'fas fa-exchange-alt',\n    'panel-de-configuracion': 'fas fa-cog',\n    'reportes': 'fas fa-chart-bar'\n  };\n\n  /**\n   * Al iniciar el componente:\n   * - Obtiene nombre y rol del usuario.\n   * - Carga las categorías visibles (filtrando las no activas y las solo-admin).\n   */\n  ngOnInit(): void {\n    this.username = this.userService.getName() || this.userService.getAzureUser()?.fullName || this.userService.getAzureUser()?.email || 'Desconocido';\n    this.role = this.userService.getRole();\n\n    this.postCategoryService.getAll().subscribe(categories => {\n      this.categories = categories\n        .filter(cat => {\n          if (!cat.status) return false;\n\n          const slug = this.slugify(cat.name);\n          if (slug === 'reportes' || slug === 'panel-de-configuracion') {\n            return this.role === 'admin';\n          }\n\n          return true;\n        })\n        .map(cat => {\n          const slug = this.slugify(cat.name);\n          const ruta = slug === 'reportes' || slug === 'panel-de-configuracion'\n            ? `/dashboard/${slug}`\n            : `/categoria/${slug}`;\n\n          return {\n            ...cat,\n            ruta,\n            icono: this.iconMap[slug] || 'fas fa-asterisk',\n            adminOnly: slug === 'reportes' || slug === 'panel-de-configuracion'\n          };\n        });\n    });\n  }\n\n  /**\n   * Convierte un texto a formato `slug`, eliminando tildes y espacios.\n   * @param text Texto a transformar.\n   * @returns Slug limpio en minúsculas.\n   */\n  private slugify(text: string): string {\n    return text\n      .toLowerCase()\n      .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Participa en la comunidad DUOC\n  \n  \n    Explora las categorías disponibles y únete a la conversación.\n    ¡Tu participación es clave para construir una\n    comunidad vibrante!\n  \n    @for (cat of categories; track cat) {\n    \n      @if (!cat.adminOnly || role === 'admin') {\n      \n        \n          \n            \n          \n          {{ cat.name }}\n          {{ cat.description }}\n        \n      \n      }\n    \n    }\n  \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.categoria-card {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    border: 1px solid color.adjust($gris, $lightness: 25%);\n    background-color: $blanco;\n    color: $negro;\n\n    &:hover {\n        transform: scale(1.03);\n        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n        border-color: $amarillo;\n    }\n\n    .card-body {\n        padding: 2rem 1rem;\n    }\n\n    i {\n        color: $amarillo;\n    }\n\n    .card-title {\n        color: $negro;\n    }\n\n    .card-text {\n        color: $gris;\n    }\n}\n\n.titulo-modern {\n    font-family: 'Poppins', sans-serif;\n    font-size: 2.5rem;\n    font-weight: 700;\n    color: $negro;\n    text-transform: uppercase;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    margin-bottom: 2rem;\n    animation: fadeInUp 0.6s ease-out;\n\n    @keyframes fadeInUp {\n        from {\n            opacity: 0;\n            transform: translateY(20px);\n        }\n\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    .highlight {\n        color: $amarillo;\n    }\n\n    strong {\n        color: $azul;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Participa en la comunidad DUOC        Explora las categorías disponibles y únete a la conversación.    ¡Tu participación es clave para construir una    comunidad vibrante!      @for (cat of categories; track cat) {          @if (!cat.adminOnly || role === \\'admin\\') {                                                        {{ cat.name }}          {{ cat.description }}                    }        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetalleComponent.html":{"url":"components/DetalleComponent.html","title":"component - DetalleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetalleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/categorias/detalle/detalle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra el detalle de una publicación individual.\nPermite ver comentarios, agregar nuevos, calificar la publicación y reportar contenido inapropiado.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detalle\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            ReactiveFormsModule\n                                BreadcrumbComponent\n                                NotificacionBannerComponent\n                \n            \n\n            \n                styleUrls\n                ./detalle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detalle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comentarioForm\n                            \n                            \n                                comments\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                estrellas\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                miScore\n                            \n                            \n                                nombreAutor\n                            \n                            \n                                post\n                            \n                            \n                                postingComment\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                promedio\n                            \n                            \n                                    Private\n                                reportService\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calificar\n                            \n                            \n                                comentar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reportarComentario\n                            \n                            \n                                reportarPublicacion\n                            \n                            \n                                volver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calificar\n                        \n                    \n                \n            \n            \n                \ncalificar(valor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Permite al usuario calificar el post con una puntuación del 1 al 5.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                valor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Puntuación seleccionada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comentar\n                        \n                    \n                \n            \n            \n                \ncomentar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Envía un nuevo comentario si el formulario es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, obtiene la publicación, su autor,\ncomentarios y calificaciones, y actualiza vistas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarComentario\n                        \n                    \n                \n            \n            \n                \nreportarComentario(com: Comment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Reporta un comentario con un motivo opcional.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                com\n                                            \n                                                            Comment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comentario a reportar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportarPublicacion\n                        \n                    \n                \n            \n            \n                \nreportarPublicacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Reporta una publicación con un motivo opcional.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volver\n                        \n                    \n                \n            \n            \n                \nvolver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/categorias/detalle/detalle.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Regresa a la categoría desde la que se abrió esta vista.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comentarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:64\n                        \n                    \n\n            \n                \n                    Formulario reactivo para agregar un comentario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Comment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:61\n                        \n                    \n\n            \n                \n                    Lista de comentarios asociados a la publicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:43\n                        \n                    \n\n            \n                \n                    Servicio para manejar comentarios asociados a publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estrellas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [1, 2, 3, 4, 5]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:79\n                        \n                    \n\n            \n                \n                    Valores de estrellas disponibles para calificar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:55\n                        \n                    \n\n            \n                \n                    Servicio para construir formularios reactivos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:67\n                        \n                    \n\n            \n                \n                    Estado de carga inicial\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        miScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:76\n                        \n                    \n\n            \n                \n                    Calificación dada por el usuario actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreAutor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Autor desconocido'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:82\n                        \n                    \n\n            \n                \n                    Nombre del autor del post\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:58\n                        \n                    \n\n            \n                \n                    Publicación actualmente mostrada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:70\n                        \n                    \n\n            \n                \n                    Flag para evitar múltiples envíos del mismo comentario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:40\n                        \n                    \n\n            \n                \n                    Servicio para gestionar publicaciones (crear, obtener, eliminar, etc.)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:73\n                        \n                    \n\n            \n                \n                    Promedio de calificación del post\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reportService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReportService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:49\n                        \n                    \n\n            \n                \n                    Servicio para reportar publicaciones o comentarios por parte del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:34\n                        \n                    \n\n            \n                \n                    Servicio que permite acceder a los parámetros de la ruta actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:37\n                        \n                    \n\n            \n                \n                    Servicio que permite la navegación entre rutas del sistema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:52\n                        \n                    \n\n            \n                \n                    Servicio que gestiona calificaciones de publicaciones (scores)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/categorias/detalle/detalle.component.ts:46\n                        \n                    \n\n            \n                \n                    Servicio de usuario para acceder a datos del usuario actual y almacenados\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit, inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n/* MODELS */\nimport { Post, Comment } from '../../../models/post';\n\n/* SERVICES */\nimport { PostService } from '../../../core/services/post.service';\nimport { UserService } from '../../../core/services/user.service';\nimport { ScoreService } from '../../../core/services/score.service';\nimport { ReportService } from '../../../core/services/report.service';\nimport { CommentService } from '../../../core/services/comment.service';\n\n/* BreadCrumb y BANNER */\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\nimport { NotificacionBannerComponent } from '../../notificacion-banner/notificacion-banner.component';\n\n/**\n * Componente que muestra el detalle de una publicación individual.\n * Permite ver comentarios, agregar nuevos, calificar la publicación y reportar contenido inapropiado.\n */\n@Component({\n  selector: 'app-detalle',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, BreadcrumbComponent, NotificacionBannerComponent],\n  templateUrl: './detalle.component.html',\n  styleUrls: ['./detalle.component.scss']\n})\nexport class DetalleComponent implements OnInit {\n  /** Servicio que permite acceder a los parámetros de la ruta actual */\n  private route = inject(ActivatedRoute);\n\n  /** Servicio que permite la navegación entre rutas del sistema */\n  private router = inject(Router);\n\n  /** Servicio para gestionar publicaciones (crear, obtener, eliminar, etc.) */\n  private postService = inject(PostService);\n\n  /** Servicio para manejar comentarios asociados a publicaciones */\n  private commentService = inject(CommentService);\n\n  /** Servicio de usuario para acceder a datos del usuario actual y almacenados */\n  private userService = inject(UserService);\n\n  /** Servicio para reportar publicaciones o comentarios por parte del usuario */\n  private reportService = inject(ReportService);\n\n  /** Servicio que gestiona calificaciones de publicaciones (scores) */\n  private scoreService = inject(ScoreService);\n\n  /** Servicio para construir formularios reactivos */\n  private fb = inject(FormBuilder);\n\n  /** Publicación actualmente mostrada */\n  post: Post | undefined;\n\n  /** Lista de comentarios asociados a la publicación */\n  comments: Comment[] = [];\n\n  /** Formulario reactivo para agregar un comentario */\n  comentarioForm!: FormGroup;\n\n  /** Estado de carga inicial */\n  loading = true;\n\n  /** Flag para evitar múltiples envíos del mismo comentario */\n  postingComment = false;\n\n  /** Promedio de calificación del post */\n  promedio = 0;\n\n  /** Calificación dada por el usuario actual */\n  miScore: number | null = null;\n\n  /** Valores de estrellas disponibles para calificar */\n  estrellas = [1, 2, 3, 4, 5];\n\n  /** Nombre del autor del post */\n  nombreAutor: string = 'Autor desconocido';\n\n  /**\n   * Inicializa el componente, obtiene la publicación, su autor,\n   * comentarios y calificaciones, y actualiza vistas.\n   */\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (!id) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n\n    this.comentarioForm = this.fb.group({\n      content: ['', [Validators.required, Validators.maxLength(300)]]\n    });\n\n    this.postService.sumarVisualizacion(id).subscribe();\n\n    this.postService.getById(id).subscribe({\n      next: (post) => {\n        this.post = post;\n        document.title = `ConectaDuoc | ${post.title}`;\n\n        this.scoreService.getAverageScore(post.idPost).subscribe(avg => {\n          this.promedio = avg;\n        });\n        const idUser = this.userService.getIdUser();\n        if (idUser) {\n          this.scoreService.getUserScore(post.idPost, idUser).subscribe(score => {\n            this.miScore = score ? score.score : null;\n          });\n        }\n\n        this.userService.getUserById(post.idUser).subscribe({\n          next: (user) => {\n            this.nombreAutor = user.name;\n          },\n          error: () => {\n            this.nombreAutor = 'Autor desconocido';\n          }\n        });\n\n        this.commentService.getByPostId(post.idPost).subscribe(comments => {\n          this.comments = comments;\n          this.loading = false;\n        });\n      },\n      error: () => {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n\n  }\n\n  /**\n   * Envía un nuevo comentario si el formulario es válido.\n   */\n  comentar(): void {\n    if (!this.post || this.comentarioForm.invalid || this.postingComment) return;\n\n    const nuevoComentario: Omit = {\n      idPost: this.post.idPost,\n      idUser: this.userService.getAzureUser()?.email || 'anónimo',\n      content: this.comentarioForm.value.content\n    };\n\n    this.postingComment = true;\n    this.commentService.create(nuevoComentario).subscribe({\n      next: (comentario) => {\n        this.comments.push(comentario);\n        this.comentarioForm.reset();\n        this.postingComment = false;\n      },\n      error: () => {\n        this.postingComment = false;\n      }\n    });\n  }\n\n  /**\n   * Reporta una publicación con un motivo opcional.\n   */\n  reportarPublicacion(): void {\n    if (!this.post) return;\n    const reason = prompt('Motivo del reporte', 'Contenido inapropiado');\n    if (!reason) return;\n    this.reportService.reportPost(this.post.idPost, reason).subscribe(() => {\n      alert('Publicación reportada');\n    });\n  }\n\n  /**\n   * Reporta un comentario con un motivo opcional.\n   * @param com Comentario a reportar.\n   */\n  reportarComentario(com: Comment): void {\n    const reason = prompt('Motivo del reporte', 'Comentario inapropiado');\n    if (!reason) return;\n    this.reportService.reportComment(com.idComment, reason).subscribe(() => {\n      alert('Comentario reportado');\n    });\n  }\n\n  /**\n   * Regresa a la categoría desde la que se abrió esta vista.\n   */\n  volver(): void {\n    const slug = this.route.snapshot.paramMap.get('slug') || 'dashboard';\n    this.router.navigate(['/categoria', slug]);\n  }\n\n  /**\n   * Permite al usuario calificar el post con una puntuación del 1 al 5.\n   * @param valor Puntuación seleccionada.\n   */\n  calificar(valor: number): void {\n    if (!this.post) return;\n    const idUser = this.userService.getIdUser();\n    if (!idUser) return;\n\n    this.scoreService.setScore({ idPost: this.post.idPost, idUser, score: valor }).subscribe(() => {\n      this.miScore = valor;\n      this.scoreService.getAverageScore(this.post!.idPost).subscribe(avg => {\n        this.promedio = avg;\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n    \n        \n            {{ post?.title }}\n        \n        \n            \n                \n            \n            \n                ← Volver\n            \n        \n    \n\n    \n    @if (post) {\n    \n        \n            {{ post.content }}\n        \n        \n            {{ nombreAutor }}\n            \n                \n                    = s, 'far text-muted': (miScore ?? 0) \n                \n                {{ promedio | number:'1.1-1' }} promedio\n            \n            {{ post.createdDate | date: 'fullDate' }}\n        \n    \n    }\n\n    \n    \n        \n            Comentarios\n        \n\n        \n            @if (comments && comments.length > 0) {\n            \n                @for (com of comments; track com) {\n                \n                    \n                    \n                        {{ com.idUser.charAt(0).toUpperCase() }}\n                    \n\n                    \n                    \n                        \n                            {{ com.idUser }}\n                            {{ com.date | date:'dd/MM/yyyy HH:mm' }}\n                        \n                        {{ com.content }}\n                        \n                            \n                        \n                    \n                \n                }\n            \n            } @else {\n            \n                No hay comentarios todavía. ¡Sé el primero en participar!\n            \n            }\n        \n\n        \n            \n                \n                    \n                    \n                        Enviar\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./detalle.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-principal {\n    font-size: 2.25rem;\n    font-weight: 700;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        position: absolute;\n        bottom: -8px;\n        left: 0;\n        width: 60px;\n        height: 4px;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n\n.card-post {\n    background-color: #fff;\n    border-radius: 1.25rem;\n    padding: 2rem;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 2rem;\n    border: none;\n\n    .card-body {\n        font-size: 1.125rem;\n        line-height: 1.75rem;\n        color: #444;\n    }\n\n    .card-footer {\n        font-size: 0.875rem;\n        color: #888;\n        border-top: 1px solid #eee;\n        padding-top: 0.75rem;\n        margin-top: 1rem;\n    }\n}\n\n.card-comentarios {\n    border-radius: 1.25rem;\n    border: none;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.04);\n    background-color: #fff;\n\n    .avatar {\n        width: 36px;\n        height: 36px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: bold;\n    }\n\n    .comentario:hover {\n        background-color: #f9f9f9;\n    }\n\n    .card-header {\n        border-bottom: 1px solid #eee;\n        background-color: transparent;\n        font-weight: 600;\n        font-size: 1.25rem;\n    }\n\n    .comentario {\n        border-bottom: 1px solid #f0f0f0;\n        padding: 0.75rem 0;\n\n        .autor {\n            font-weight: 600;\n            color: #333;\n        }\n\n        .fecha {\n            font-size: 0.8rem;\n            color: #999;\n        }\n\n        .contenido {\n            font-size: 0.95rem;\n            margin: 0.25rem 0;\n        }\n    }\n\n    .alert-info {\n        background-color: #f0f8ff;\n        color: #555;\n        border: none;\n        border-radius: 0.75rem;\n        padding: 1rem;\n    }\n}\n\n.card-footer form {\n    background-color: #fafafa;\n    border-radius: 0.75rem;\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n\n    .form-control {\n        border: none;\n        box-shadow: none;\n        border-radius: 0.75rem 0 0 0.75rem;\n    }\n\n    .btn {\n        border-radius: 0 0.75rem 0.75rem 0;\n        font-weight: 600;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ post?.title }}                                                                                    ← Volver                                @if (post) {                        {{ post.content }}                            {{ nombreAutor }}                                                = s, \\'far text-muted\\': (miScore ?? 0)                                 {{ promedio | number:\\'1.1-1\\' }} promedio                        {{ post.createdDate | date: \\'fullDate\\' }}                }                            Comentarios                            @if (comments && comments.length > 0) {                            @for (com of comments; track com) {                                                                                {{ com.idUser.charAt(0).toUpperCase() }}                                                                                                                {{ com.idUser }}                            {{ com.date | date:\\'dd/MM/yyyy HH:mm\\' }}                                                {{ com.content }}                                                                                                                                }                        } @else {                            No hay comentarios todavía. ¡Sé el primero en participar!                        }                                                                                                            Enviar                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetalleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pie de página global para la plataforma ConectaDuoc.\nMuestra el año actual y enlaces relevantes si se requieren.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:19\n                        \n                    \n\n            \n                \n                    Año actual mostrado dinámicamente en el footer.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Componente de pie de página global para la plataforma ConectaDuoc.\n * Muestra el año actual y enlaces relevantes si se requieren.\n */\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n  /**\n   * Año actual mostrado dinámicamente en el footer.\n   */\n  currentYear: number = new Date().getFullYear();\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                MESA DE SERVICIOS\n                WhatsApp:\n                    \n                        +56 9 3663 9565\n                    \n                \n                \n                    Servicios Académicos\n                    Servicios de Financiamiento\n                    Servicios de Vida Estudiantil\n                    Servicios Tecnológicos\n                    Otros Servicios\n                \n                Teléfonos:\n                (+56) 442 201 098 —\n                (+56) 227 120 245\n            \n\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                \n\n                \n                \n                    \n                \n\n                \n                \n                    © 2025 Conecta-DUOC.\n                    Todos los derechos reservados.\n                    Desarrollado con cariño por JP DEV\n                    \n                        \n                            Ver Reglas de la Comunidad\n                        \n                    \n                \n            \n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    MESA DE SERVICIOS                WhatsApp:                                            +56 9 3663 9565                                                                        Servicios Académicos                    Servicios de Financiamiento                    Servicios de Vida Estudiantil                    Servicios Tecnológicos                    Otros Servicios                                Teléfonos:                (+56) 442 201 098 —© 2025 Conecta-DUOC.                    Todos los derechos reservados.                    Desarrollado con cariño por JP DEV                                                                        Ver Reglas de la Comunidad                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forbidden/forbidden.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que se muestra cuando un usuario intenta acceder a una ruta no autorizada.\nGeneralmente es utilizado junto a guards de roles o permisos.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forbidden.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente que se muestra cuando un usuario intenta acceder a una ruta no autorizada.\n * Generalmente es utilizado junto a guards de roles o permisos.\n */\n@Component({\n  selector: 'app-forbidden',\n  imports: [],\n  templateUrl: './forbidden.component.html',\n  styleUrl: './forbidden.component.scss'\n})\nexport class ForbiddenComponent {\n\n  /* Por desarrollar a futuro... */\n\n}\n\n    \n\n    \n        forbidden works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'forbidden works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente responsable del inicio de sesión con Azure AD.\nValida si el usuario existe, redirige a registro o dashboard,\ny maneja la lógica de aceptación de políticas.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkAndRedirect\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAndRedirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndRedirect(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario ya existe en la base de datos.\n\nSi no existe, lo redirige a la vista de registro.\nSi existe, guarda sus datos y lo redirige según si aceptó políticas.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo del usuario autenticado por MSAL.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Inicia sesión usando MSAL (popup).\nSi es exitoso, valida al usuario en el backend y redirige.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Cierra sesión mediante MSAL y limpia los datos locales.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Al iniciar, verifica si ya hay una sesión activa.\nSi existe, intenta redirigir al flujo correspondiente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:33\n                        \n                    \n\n            \n                \n                    Indica si el usuario está autenticado actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Servicio de autenticación MSAL para gestionar login y sesión con Azure AD\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:24\n                        \n                    \n\n            \n                \n                    Servicio de enrutamiento para redirigir al usuario según su estado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Conecta-DUOC'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:30\n                        \n                    \n\n            \n                \n                    Título de la pantalla de inicio de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:27\n                        \n                    \n\n            \n                \n                    Servicio encargado de manejar los datos del usuario en la app\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { User } from '../../models/user';\n\n/**\n * Componente responsable del inicio de sesión con Azure AD.\n * Valida si el usuario existe, redirige a registro o dashboard,\n * y maneja la lógica de aceptación de políticas.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /** Servicio de autenticación MSAL para gestionar login y sesión con Azure AD */\n  private msalService = inject(MsalService);\n\n  /** Servicio de enrutamiento para redirigir al usuario según su estado */\n  private router = inject(Router);\n\n  /** Servicio encargado de manejar los datos del usuario en la app */\n  private userService = inject(UserService);\n\n  /** Título de la pantalla de inicio de sesión */\n  title = 'Conecta-DUOC';\n\n  /** Indica si el usuario está autenticado actualmente */\n  isLoggedIn = false;\n\n  /**\n   * Al iniciar, verifica si ya hay una sesión activa.\n   * Si existe, intenta redirigir al flujo correspondiente.\n   */\n  ngOnInit(): void {\n    const account = this.msalService.instance.getActiveAccount();\n    this.isLoggedIn = !!account;\n\n    if (account) {\n      this.checkAndRedirect(account.username);\n    }\n  }\n\n  /**\n   * Inicia sesión usando MSAL (popup).\n   * Si es exitoso, valida al usuario en el backend y redirige.\n   */\n  login() {\n    this.msalService.loginPopup().subscribe({\n      next: () => {\n        const account = this.msalService.instance.getAllAccounts()[0];\n        this.msalService.instance.setActiveAccount(account);\n\n        this.isLoggedIn = true;\n\n        if (account) {\n          this.checkAndRedirect(account.username);\n        } else {\n          this.isLoggedIn = false;\n        }\n      },\n      error: (error) => {\n        console.error('Login error:', error);\n        this.isLoggedIn = false;\n      },\n    });\n  }\n\n  /**\n   * Cierra sesión mediante MSAL y limpia los datos locales.\n   */\n  logout() {\n    this.msalService.logoutPopup().subscribe({\n      next: () => {\n        this.isLoggedIn = false;\n        this.userService.clearRole();\n        this.router.navigate(['/']);\n      },\n      error: (error) => {\n        console.error('Logout error:', error);\n      },\n    });\n  }\n\n  /**\n   * Verifica si el usuario ya existe en la base de datos.\n   * - Si no existe, lo redirige a la vista de registro.\n   * - Si existe, guarda sus datos y lo redirige según si aceptó políticas.\n   * @param email Correo del usuario autenticado por MSAL.\n   */\n  private checkAndRedirect(email: string) {\n    this.userService.checkUserExists(email).subscribe({\n      next: (exists) => {\n        //console.log('Existe usuario?', exists);\n\n        if (exists) {\n          this.userService.getUser(email).subscribe({\n            next: (user: User) => {\n              this.userService.setRole(user.role || 'student');\n              this.userService.setName(user.name);\n\n              if (user.idUser !== undefined && user.idUser !== null) {\n                this.userService.setIdUser(user.idUser);\n              }\n\n              if (user.policies === 1) {\n                this.router.navigate(['/dashboard']);\n              } else {\n                this.router.navigate(['/reglas-de-la-comunidad']);\n              }\n            },\n            error: err => {\n              console.error('Error al traer usuario:', err);\n            }\n          });\n        }\n\n        else {\n          console.log('Redirijo a registro');\n          this.router.navigate(['/registro']);\n        }\n      },\n      error: (err) => {\n        console.error('Error validando usuario:', err);\n        this.logout();\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n        \n      \n      ConectaDuoc\n    \n\n    \n    \n      Plataforma de colaboración estudiantil DUOC UC\n      @if (!isLoggedIn) {\n        \n          Iniciar Sesión\n        \n      }\n      @if (isLoggedIn) {\n        \n          Cerrar Sesión\n        \n      }\n    \n\n\n    \n      © 2025 Conecta-DUOC. Todos los derechos reservados.\n      Desarrollado por JP DEV\n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n// CONTENEDOR PRINCIPAL LOGIN\n.login-container {\n    background-color: $negro;\n    padding: 2rem;\n}\n\n// TARJETA LOGIN\n.login-card {\n    width: 100%;\n    max-width: 400px;\n    border: none;\n    background-color: $blanco;\n    border-radius: 1rem;\n    overflow: hidden;\n\n    .card-header {\n        background-color: $amarillo;\n        padding: 2rem 1rem;\n\n        .logo-wrapper {\n            background-color: $blanco;\n            padding: 0.5rem;\n            border-radius: 50%;\n            display: inline-block;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        .logo {\n            width: 90px;\n            height: auto;\n        }\n\n        .titulo {\n            color: $negro;\n            font-weight: bold;\n            margin: 0;\n            font-size: 1.5rem;\n        }\n    }\n\n    .card-body {\n        padding: 2rem 1.5rem;\n\n        button {\n            font-weight: bold;\n            padding: 0.75rem;\n            font-size: 1rem;\n\n            &.btn-warning {\n                background-color: $amarillo;\n                color: $negro;\n\n                &:hover {\n                    background-color: color.adjust($amarillo, $lightness: 10%);\n                }\n            }\n\n            &.btn-outline-light {\n                border-color: $gris;\n                color: $gris;\n\n                &:hover {\n                    background-color: $gris;\n                    color: $blanco;\n                }\n            }\n        }\n    }\n\n    .card-footer {\n        background-color: transparent;\n        padding: 1rem 1.5rem;\n    }\n}\n\n// CLASES GLOBALES (NO ANIDADAS)\n.bg-amarillo {\n    background-color: #f4b942;\n}\n\n.titulo {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #000;\n}\n\n.logo {\n    height: 48px;\n    width: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      ConectaDuoc                  Plataforma de colaboración estudiantil DUOC UC      @if (!isLoggedIn) {                  Iniciar Sesión              }      @if (isLoggedIn) {                  Cerrar Sesión              }              © 2025 Conecta-DUOC. Todos los derechos reservados.      Desarrollado por JP DEV      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalConfirmacionComponent.html":{"url":"components/ModalConfirmacionComponent.html","title":"component - ModalConfirmacionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalConfirmacionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/modal-confirmacion/modal-confirmacion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente reutilizable para mostrar un modal de confirmación.\nUtilizado para confirmar acciones críticas como eliminar, cerrar sesión, etc.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-confirmacion\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./modal-confirmacion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-confirmacion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mensaje\n                            \n                            \n                                titulo\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelar\n                            \n                            \n                                confirmar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mensaje\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:23\n                            \n                        \n                \n                    \n                        Mensaje que describe la acción a confirmar.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        titulo\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '¿Estás seguro?'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:18\n                            \n                        \n                \n                    \n                        Título del modal (por defecto: \"¿Estás seguro?\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:29\n                            \n                        \n                \n                    \n                        Controla la visibilidad del modal.\nSi es true, el modal se muestra.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelar\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:39\n                            \n                        \n                \n                    \n                        Evento emitido cuando el usuario cancela la acción.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmar\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal-confirmacion/modal-confirmacion.component.ts:34\n                            \n                        \n                \n                    \n                        Evento emitido cuando el usuario confirma la acción.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Componente reutilizable para mostrar un modal de confirmación.\n * Utilizado para confirmar acciones críticas como eliminar, cerrar sesión, etc.\n */\n@Component({\n  selector: 'app-modal-confirmacion',\n  standalone: true,\n  imports: [],\n  templateUrl: './modal-confirmacion.component.html',\n  styleUrls: ['./modal-confirmacion.component.scss']\n})\nexport class ModalConfirmacionComponent {\n  /**\n   * Título del modal (por defecto: \"¿Estás seguro?\")\n   */\n  @Input() titulo = '¿Estás seguro?';\n\n  /**\n   * Mensaje que describe la acción a confirmar.\n   */\n  @Input() mensaje = '';\n\n  /**\n   * Controla la visibilidad del modal.\n   * Si es `true`, el modal se muestra.\n   */\n  @Input() visible = false;\n\n  /**\n   * Evento emitido cuando el usuario confirma la acción.\n   */\n  @Output() confirmar = new EventEmitter();\n\n  /**\n   * Evento emitido cuando el usuario cancela la acción.\n   */\n  @Output() cancelar = new EventEmitter();\n\n}\n    \n\n    \n        @if (visible) {\n  \n    \n      {{ titulo }}\n      {{ mensaje }}\n      \n        Cancelar\n        Sí, cerrar sesión\n      \n    \n  \n}\n    \n\n    \n                \n                    ./modal-confirmacion.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n\n    .modal-box {\n        background-color: $blanco;\n        border-radius: 16px;\n        padding: 2rem;\n        max-width: 400px;\n        width: 90%;\n        text-align: center;\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n\n        h2 {\n            font-size: 1.5rem;\n            color: $negro;\n            margin-bottom: 1rem;\n        }\n\n        p {\n            color: $gris;\n            font-size: 1rem;\n            margin-bottom: 2rem;\n        }\n\n        .acciones {\n            display: flex;\n            justify-content: center;\n            gap: 1rem;\n            flex-wrap: wrap;\n\n            .btn {\n                min-width: 140px;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (visible) {            {{ titulo }}      {{ mensaje }}              Cancelar        Sí, cerrar sesión            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalConfirmacionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de barra de navegación superior.\nMuestra el nombre del usuario, permite navegar y cerrar sesión.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                                ModalConfirmacionComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarModalLogout\n                            \n                            \n                                    Private\n                                msal\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                username\n                            \n                            \n                                userName$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelarLogout\n                            \n                            \n                                confirmarLogout\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarLogout\n                        \n                    \n                \n            \n            \n                \ncancelarLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Cancela el cierre de sesión y cierra el modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarLogout\n                        \n                    \n                \n            \n            \n                \nconfirmarLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario usando MSAL y limpia los datos locales.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Muestra el modal de confirmación para cerrar sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navbar/navbar.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Al iniciar, obtiene el nombre del usuario desde el servicio MSAL o localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarModalLogout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:35\n                        \n                    \n\n            \n                \n                    Controla la visibilidad del modal de confirmación de cierre de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                        \n                    \n\n            \n                \n                    Servicio de autenticación MSAL para gestionar login y sesión con Azure AD\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:25\n                        \n                    \n\n            \n                \n                    Servicio de enrutamiento para redirigir al usuario según su estado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:32\n                        \n                    \n\n            \n                \n                    Nombre del usuario visible en el navbar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.userName$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:38\n                        \n                    \n\n            \n                \n                    Observable del nombre de usuario para actualizaciones reactivas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:28\n                        \n                    \n\n            \n                \n                    Servicio encargado de manejar los datos del usuario en la app\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { RouterLink } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { MsalService } from '@azure/msal-angular';\nimport { ModalConfirmacionComponent } from '../../shared/modal-confirmacion/modal-confirmacion.component';\n\n/**\n * Componente de barra de navegación superior.\n * Muestra el nombre del usuario, permite navegar y cerrar sesión.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterLink, ModalConfirmacionComponent, CommonModule],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  /** Servicio de autenticación MSAL para gestionar login y sesión con Azure AD */\n  private msal = inject(MsalService);\n\n  /** Servicio de enrutamiento para redirigir al usuario según su estado */\n  private router = inject(Router);\n\n  /** Servicio encargado de manejar los datos del usuario en la app */\n  private userService = inject(UserService);\n\n\n  /** Nombre del usuario visible en el navbar */\n  username: string | null = null;\n\n  /** Controla la visibilidad del modal de confirmación de cierre de sesión */\n  mostrarModalLogout = false;\n\n  /** Observable del nombre de usuario para actualizaciones reactivas */\n  userName$ = this.userService.userName$;\n\n  /**\n   * Al iniciar, obtiene el nombre del usuario desde el servicio MSAL o `localStorage`.\n   */\n  ngOnInit(): void {\n    // Mostrar en consola todos los datos del usuario activo de Azure AD\n    const account = this.msal.instance.getActiveAccount();\n    //if (account) {\n    //console.log('ACCOUNT:', account);\n    //console.log('ID TOKEN CLAIMS:', account.idTokenClaims);\n    //}\n\n    // Obtener el nombre de usuario desde el servicio UserService\n    this.username =\n      this.userService.getName() ||\n      this.userService.getAzureUser()?.fullName ||\n      this.userService.getAzureUser()?.email ||\n      null;\n  }\n\n  /**\n   * Muestra el modal de confirmación para cerrar sesión.\n   */\n  logout() {\n    this.mostrarModalLogout = true;\n  }\n\n  /**\n   * Cierra la sesión del usuario usando MSAL y limpia los datos locales.\n   */\n  confirmarLogout() {\n    this.msal.logoutPopup().subscribe({\n      next: () => {\n        this.userService.clearRole();\n        // Si limpias más datos en logout, hazlo aquí\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  /**\n   * Cancela el cierre de sesión y cierra el modal.\n   */\n  cancelarLogout() {\n    this.mostrarModalLogout = false;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n            \n                \n            \n            ConectaDuoc\n        \n\n        \n            \n                \n                {{ userName$ | async }}\n            \n            \n                 Mi Perfil\n            \n            \n                 Cerrar sesión\n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.navbar {\n    background-color: $negro;\n    color: $blanco;\n    padding: 1rem 2rem;\n\n    .logo-wrapper {\n        background-color: $blanco;\n        padding: 0.35rem;\n        border-radius: 50%;\n        display: inline-block;\n        box-shadow: 0 2px 4px rgba(255, 255, 255, 0.15);\n    }\n\n    .logo {\n        height: 45px;\n        width: auto;\n    }\n\n    .titulo {\n        font-weight: bold;\n        color: $amarillo;\n        font-size: 1.25rem;\n    }\n\n    .usuario {\n        font-size: 0.95rem;\n        color: $blanco;\n    }\n\n    button {\n        background-color: $amarillo;\n        border: none;\n        color: $negro;\n        font-weight: bold;\n\n        &:hover {\n            background-color: color.adjust($amarillo, $lightness: 10%);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                ConectaDuoc                                                            {{ userName$ | async }}                                         Mi Perfil                                         Cerrar sesión                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionBannerComponent.html":{"url":"components/NotificacionBannerComponent.html","title":"component - NotificacionBannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionBannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notificacion-banner/notificacion-banner.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente visual que muestra un banner rotativo con notificaciones globales activas.\nPermite a los administradores comunicar información importante a todos los usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificacion-banner\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./notificacion-banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notificacion-banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actual\n                            \n                            \n                                currentIndex\n                            \n                            \n                                mostrar\n                            \n                            \n                                notificaciones\n                            \n                            \n                                    Private\n                                rotacionSub\n                            \n                            \n                                    Private\n                                servicio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cerrar\n                            \n                            \n                                iniciarRotacion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Cierra el banner y detiene la rotación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iniciarRotacion\n                        \n                    \n                \n            \n            \n                \niniciarRotacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Inicia la rotación automática del banner cada 7 segundos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Al destruir el componente, cancela la suscripción al intervalo.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Al iniciar, obtiene las notificaciones vigentes y configura la rotación si hay más de una.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificacionGlobal | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:26\n                        \n                    \n\n            \n                \n                    Notificación actualmente visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:29\n                        \n                    \n\n            \n                \n                    Índice actual dentro del arreglo de notificaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:23\n                        \n                    \n\n            \n                \n                    Controla si el banner está visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificacionGlobal[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:20\n                        \n                    \n\n            \n                \n                    Lista de notificaciones globales activas obtenidas desde el backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rotacionSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:35\n                        \n                    \n\n            \n                \n                    Referencia a la suscripción del rotador automático\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        servicio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificacionService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notificacion-banner/notificacion-banner.component.ts:32\n                        \n                    \n\n            \n                \n                    Instancia del servicio de notificaciones\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificacionGlobal } from '../../models/notificacionGlobal';\nimport { NotificacionService } from '../../core/services/notificacion.service';\nimport { interval, Subscription } from 'rxjs';\n\n/**\n * Componente visual que muestra un banner rotativo con notificaciones globales activas.\n * Permite a los administradores comunicar información importante a todos los usuarios.\n */\n@Component({\n  selector: 'app-notificacion-banner',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './notificacion-banner.component.html',\n  styleUrls: ['./notificacion-banner.component.scss']\n})\nexport class NotificacionBannerComponent implements OnInit, OnDestroy {\n  /** Lista de notificaciones globales activas obtenidas desde el backend */\n  notificaciones: NotificacionGlobal[] = [];\n\n  /** Controla si el banner está visible */\n  mostrar = false;\n\n  /** Notificación actualmente visible */\n  actual: NotificacionGlobal | null = null;\n\n  /** Índice actual dentro del arreglo de notificaciones */\n  currentIndex = 0;\n\n  /** Instancia del servicio de notificaciones */\n  private servicio = inject(NotificacionService);\n\n  /** Referencia a la suscripción del rotador automático */\n  private rotacionSub: Subscription = new Subscription();\n\n  /**\n   * Al iniciar, obtiene las notificaciones vigentes y configura la rotación si hay más de una.\n   */\n  ngOnInit(): void {\n    this.servicio.getVigentes().subscribe((lista: NotificacionGlobal[]) => {\n      this.notificaciones = lista;\n\n      if (this.notificaciones.length > 0) {\n        this.actual = this.notificaciones[0];\n        this.mostrar = true;\n\n        if (this.notificaciones.length > 1) {\n          this.iniciarRotacion();\n        }\n      }\n    });\n  }\n\n  /**\n   * Inicia la rotación automática del banner cada 7 segundos.\n   */\n  iniciarRotacion() {\n    this.rotacionSub = interval(7000).subscribe(() => {\n      this.currentIndex = (this.currentIndex + 1) % this.notificaciones.length;\n      this.actual = this.notificaciones[this.currentIndex];\n    });\n  }\n\n  /**\n   * Cierra el banner y detiene la rotación.\n   */\n  cerrar(): void {\n    this.mostrar = false;\n    this.rotacionSub.unsubscribe();\n  }\n\n  /**\n   * Al destruir el componente, cancela la suscripción al intervalo.\n   */\n  ngOnDestroy(): void {\n    this.rotacionSub.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        @if (mostrar && actual) {\n\n    \n        \n    \n    \n        {{ actual.titulo }} — {{ actual.mensaje }}\n    \n    ×\n\n}\n    \n\n    \n                \n                    ./notificacion-banner.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.notificacion-banner {\n    background: linear-gradient(to right, #e8f0fb, #f6f9ff);\n    color: $negro;\n    padding: 1rem 1.5rem;\n    border-left: 6px solid $azul;\n    border-radius: 1rem;\n    margin: 1.5rem auto;\n    max-width: 1200px;\n    font-family: $font-secondary;\n    font-size: 1rem;\n    font-weight: 500;\n    position: relative;\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);\n    animation: slideInDown 0.4s ease-out;\n\n    .contenido-banner {\n        strong {\n            font-family: $font-primary;\n            color: $azul;\n            font-weight: 700;\n        }\n    }\n}\n\n.icono-alerta {\n    font-size: 2rem;\n    color: $azul;\n    animation: pulse 1.8s infinite;\n}\n\n.close-btn {\n    background: none;\n    border: none;\n    font-size: 1.25rem;\n    font-weight: bold;\n    color: $gris;\n    transition: color 0.2s ease;\n    position: absolute;\n    top: 0.75rem;\n    right: 1rem;\n\n    &:hover {\n        color: $negro;\n    }\n}\n\n@keyframes slideInDown {\n    from {\n        opacity: 0;\n        transform: translateY(-15px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes pulse {\n\n    0%,\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n\n    50% {\n        transform: scale(1.2);\n        opacity: 0.7;\n    }\n}\n\n@media (max-width: 768px) {\n    .notificacion-banner {\n        position: sticky;\n        top: 0;\n        z-index: 1000;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mostrar && actual) {                            {{ actual.titulo }} — {{ actual.mensaje }}        ×}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionBannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificacionGlobal.html":{"url":"interfaces/NotificacionGlobal.html","title":"interface - NotificacionGlobal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificacionGlobal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/notificacionGlobal.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una notificación global dentro de la plataforma.\nUtilizada para mostrar mensajes visibles a todos los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fechaFin\n                                        \n                                \n                                \n                                        \n                                            fechaInicio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mensaje\n                                        \n                                \n                                \n                                        \n                                            titulo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fechaFin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaFin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de término de la visibilidad de la notificación (formato ISO).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaInicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaInicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de inicio de la visibilidad de la notificación (formato ISO).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la notificación.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mensaje\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mensaje:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido o cuerpo del mensaje a mostrar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titulo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titulo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la notificación.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NotificacionGlobal {\n    /**\n     * ID único de la notificación.\n     */\n    id: number;\n\n    /**\n     * Título de la notificación.\n     */\n    titulo: string;\n\n    /**\n     * Contenido o cuerpo del mensaje a mostrar.\n     */\n    mensaje: string;\n\n    /**\n     * Fecha de inicio de la visibilidad de la notificación (formato ISO).\n     */\n    fechaInicio: string;\n\n    /**\n     * Fecha de término de la visibilidad de la notificación (formato ISO).\n     */\n    fechaFin: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificacionService.html":{"url":"injectables/NotificacionService.html","title":"injectable - NotificacionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificacionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notificacion.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las notificaciones globales\nvisibles para todos los usuarios de la plataforma.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crear\n                            \n                            \n                                eliminar\n                            \n                            \n                                getTodas\n                            \n                            \n                                getVigentes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notificacion.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor del servicio.\nInyecta el cliente HTTP para realizar solicitudes al backend.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cliente HTTP de Angular\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crear\n                        \n                    \n                \n            \n            \n                \ncrear(nueva: NotificacionGlobal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Crea una nueva notificación global.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nueva\n                                            \n                                                            NotificacionGlobal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de tipo NotificacionGlobal a registrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Notificación creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Elimina una notificación global por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la notificación a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodas\n                        \n                    \n                \n            \n            \n                \ngetTodas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las notificaciones registradas (vigentes e históricas).\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Arreglo de NotificacionGlobal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVigentes\n                        \n                    \n                \n            \n            \n                \ngetVigentes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notificacion.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Obtiene solo las notificaciones vigentes (activas según fecha actual).\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Arreglo de notificaciones activas.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/notificaciones'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notificacion.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para notificaciones globales\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificacionGlobal } from '../../models/notificacionGlobal';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar las notificaciones globales\n * visibles para todos los usuarios de la plataforma.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionService {\n  /** URL base del API para notificaciones globales */\n  private apiUrl = 'http://localhost:9090/api/notificaciones';\n\n  /**\n   * Constructor del servicio.\n   * Inyecta el cliente HTTP para realizar solicitudes al backend.\n   * \n   * @param http Cliente HTTP de Angular\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Obtiene todas las notificaciones registradas (vigentes e históricas).\n   * @returns Arreglo de `NotificacionGlobal`.\n   */\n  getTodas(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Crea una nueva notificación global.\n   * @param nueva Objeto de tipo `NotificacionGlobal` a registrar.\n   * @returns Notificación creada.\n   */\n  crear(nueva: NotificacionGlobal): Observable {\n    return this.http.post(this.apiUrl, nueva);\n  }\n\n  /**\n   * Elimina una notificación global por su ID.\n   * @param id ID de la notificación a eliminar.\n   */\n  eliminar(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Obtiene solo las notificaciones vigentes (activas según fecha actual).\n   * @returns Arreglo de notificaciones activas.\n   */\n  getVigentes(): Observable {\n    return this.http.get(`${this.apiUrl}/vigentes`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificacionesComponent.html":{"url":"components/NotificacionesComponent.html","title":"component - NotificacionesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificacionesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/notificaciones/notificaciones.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente administrativo para crear, listar y eliminar notificaciones globales.\nEstas notificaciones serán visibles para todos los usuarios en el banner superior.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notificaciones\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                BreadcrumbComponent\n                \n            \n\n            \n                styleUrls\n                ./notificaciones.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notificaciones.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formulario\n                            \n                            \n                                hoy\n                            \n                            \n                                notificaciones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cargarNotificaciones\n                            \n                            \n                                crear\n                            \n                            \n                                eliminar\n                            \n                            \n                                esActiva\n                            \n                            \n                                    Private\n                                getHoyISO\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificacionService: NotificacionService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con inyección de servicios necesarios para el formulario y backend.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        notificacionService\n                                                  \n                                                        \n                                                                        NotificacionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja el CRUD de notificaciones.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para construir el formulario reactivo.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cargarNotificaciones\n                        \n                    \n                \n            \n            \n                \ncargarNotificaciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las notificaciones desde el backend.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crear\n                        \n                    \n                \n            \n            \n                \ncrear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Crea una nueva notificación si el formulario es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Elimina una notificación existente por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la notificación a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esActiva\n                        \n                    \n                \n            \n            \n                \nesActiva(fechaFin: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Verifica si una notificación está activa comparando su fecha de fin con la fecha actual.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fechaFin\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fecha de término de la notificación (ISO string).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si aún está activa, false si ya expiró.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHoyISO\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHoyISO()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Obtiene la fecha actual en formato ISO corto (YYYY-MM-DD).\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Fecha en string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Al iniciar, se cargan todas las notificaciones desde el backend.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formulario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:24\n                        \n                    \n\n            \n                \n                    Formulario reactivo para crear una nueva notificación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:27\n                        \n                    \n\n            \n                \n                    Fecha actual en formato Date, usada para comparaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificacionGlobal[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/notificaciones/notificaciones.component.ts:21\n                        \n                    \n\n            \n                \n                    Lista de notificaciones actuales en el sistema\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { NotificacionGlobal } from '../../../models/notificacionGlobal';\nimport { NotificacionService } from '../../../core/services/notificacion.service';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n/**\n * Componente administrativo para crear, listar y eliminar notificaciones globales.\n * Estas notificaciones serán visibles para todos los usuarios en el banner superior.\n */\n@Component({\n  selector: 'app-notificaciones',\n  imports: [CommonModule, ReactiveFormsModule, BreadcrumbComponent],\n  standalone: true,\n  templateUrl: './notificaciones.component.html',\n  styleUrls: ['./notificaciones.component.scss']\n})\nexport class NotificacionesComponent implements OnInit {\n  /** Lista de notificaciones actuales en el sistema */\n  notificaciones: NotificacionGlobal[] = [];\n\n  /** Formulario reactivo para crear una nueva notificación */\n  formulario: FormGroup;\n\n  /** Fecha actual en formato `Date`, usada para comparaciones */\n  hoy = new Date();\n\n  /**\n   * Constructor con inyección de servicios necesarios para el formulario y backend.\n   * @param notificacionService Servicio que maneja el CRUD de notificaciones.\n   * @param fb FormBuilder para construir el formulario reactivo.\n   */\n  constructor(\n    private notificacionService: NotificacionService,\n    private fb: FormBuilder\n  ) {\n    this.formulario = this.fb.group({\n      titulo: ['', Validators.required],\n      mensaje: ['', Validators.required],\n      fechaInicio: [this.getHoyISO(), Validators.required],\n      fechaFin: [this.getHoyISO(), Validators.required]\n    });\n  }\n\n  /**\n   * Al iniciar, se cargan todas las notificaciones desde el backend.\n   */\n  ngOnInit(): void {\n    this.cargarNotificaciones();\n  }\n\n  /**\n   * Verifica si una notificación está activa comparando su fecha de fin con la fecha actual.\n   * @param fechaFin Fecha de término de la notificación (ISO string).\n   * @returns `true` si aún está activa, `false` si ya expiró.\n   */\n  esActiva(fechaFin: string): boolean {\n    const hoy = new Date();\n    const hoyStr = hoy.toISOString().split('T')[0];\n    return fechaFin >= hoyStr;\n  }\n\n  /**\n   * Obtiene la fecha actual en formato ISO corto (`YYYY-MM-DD`).\n   * @returns Fecha en string.\n   */\n  private getHoyISO(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /**\n   * Obtiene todas las notificaciones desde el backend.\n   */\n  cargarNotificaciones() {\n    this.notificacionService.getTodas().subscribe(data => {\n      this.notificaciones = data;\n    });\n  }\n\n  /**\n   * Crea una nueva notificación si el formulario es válido.\n   */\n  crear() {\n    if (this.formulario.invalid) return;\n\n    this.notificacionService.crear(this.formulario.value).subscribe(() => {\n      this.formulario.reset();\n      this.cargarNotificaciones();\n    });\n  }\n\n  /**\n   * Elimina una notificación existente por su ID.\n   * @param id ID de la notificación a eliminar.\n   */\n  eliminar(id: number) {\n    this.notificacionService.eliminar(id).subscribe(() => {\n      this.cargarNotificaciones();\n    });\n  }\n\n}\n    \n\n    \n        \n    \n    Gestión de Notificaciones Globales\n    Administra las notificaciones para usuarios de la plataforma\n\n    \n        \n            \n                \n            \n            \n                Crear nueva notificación\n            \n        \n\n        \n            \n                Título\n                \n            \n\n            \n                Mensaje\n                \n            \n\n            \n                \n                    Fecha Inicio\n                    \n                \n                \n                    Fecha Fin\n                    \n                \n            \n\n            \n                🚀 Crear Notificación\n            \n        \n    \n\n    \n        📋 Notificaciones Actuales\n        \n            \n                \n\n                    \n                        {{ n.titulo }}\n                        \n                            {{ esActiva(n.fechaFin) ? 'Activa' : 'Expirada' }}\n                        \n                    \n                    \n                        {{ n.fechaInicio | date:'dd/MM/yyyy' }} a {{ n.fechaFin | date:'dd/MM/yyyy' }}\n                    \n                    {{ n.mensaje }}\n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./notificaciones.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n\n.card {\n    border: none;\n    background-color: #ffffff;\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.06);\n}\n\n.form-label {\n    font-weight: 600;\n    font-size: 0.95rem;\n}\n\ninput[type=\"date\"],\ninput[type=\"text\"],\ntextarea {\n    border-radius: 0.5rem;\n    font-size: 0.95rem;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #eee;\n    padding: 1rem 0;\n\n    h6 {\n        font-size: 1.05rem;\n    }\n\n    .btn {\n        border-radius: 0.5rem;\n    }\n\n    &:last-child {\n        border-bottom: none;\n    }\n}\n\n.nueva-notificacion {\n    animation: slideFadeIn 0.4s ease-out;\n}\n\n@keyframes slideFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(8px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.badge {\n    font-size: 0.75rem;\n    padding: 0.3rem 0.6rem;\n    border-radius: 0.5rem;\n    font-weight: 600;\n}\n\n.seccion-form {\n    background-color: #fff;\n    border: none;\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.06);\n    transition: all 0.3s ease;\n\n    .icono-seccion i {\n        font-size: 1.5rem;\n    }\n\n    .form-label {\n        font-size: 0.95rem;\n        color: $gris;\n    }\n\n    .campo-form {\n        border-radius: 0.75rem;\n        font-size: 0.95rem;\n        padding: 0.75rem;\n        transition: border-color 0.2s;\n\n        &:focus {\n            border-color: $azul;\n            box-shadow: 0 0 0 0.1rem rgba($azul, 0.25);\n        }\n    }\n\n    .btn-primary {\n        font-size: 1.05rem;\n        padding: 0.75rem;\n        border-radius: 0.75rem;\n        background-color: $azul;\n        border: none;\n        transition: background-color 0.2s;\n\n        &:hover {\n            background-color: color.adjust($azul, $lightness: -5%);\n        }\n\n        &:disabled {\n            background-color: color.adjust($azul, $lightness: 20%);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Gestión de Notificaciones Globales    Administra las notificaciones para usuarios de la plataforma                                                                                Crear nueva notificación                                                        Título                                                        Mensaje                                                                            Fecha Inicio                                                                        Fecha Fin                                                                            🚀 Crear Notificación                                    📋 Notificaciones Actuales                                                                                {{ n.titulo }}                                                    {{ esActiva(n.fechaFin) ? \\'Activa\\' : \\'Expirada\\' }}                                                                                        {{ n.fechaInicio | date:\\'dd/MM/yyyy\\' }} a {{ n.fechaFin | date:\\'dd/MM/yyyy\\' }}                                        {{ n.mensaje }}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificacionesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/perfil/perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra el perfil del usuario autenticado.\nPermite visualizar y filtrar sus publicaciones, editar su sede,\ny muestra estadísticas personales como total de comentarios, publicaciones\ny promedio de calificaciones recibidas.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                BreadcrumbComponent\n                            RouterModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./perfil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                commentService\n                            \n                            \n                                filtroPost\n                            \n                            \n                                paginaActual\n                            \n                            \n                                    Private\n                                postCategoryService\n                            \n                            \n                                posts\n                            \n                            \n                                    Private\n                                postService\n                            \n                            \n                                postsPorPagina\n                            \n                            \n                                promedioPonderado\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scoreService\n                            \n                            \n                                sede\n                            \n                            \n                                sedes\n                            \n                            \n                                totalComments\n                            \n                            \n                                totalPosts\n                            \n                            \n                                user\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cambiarPagina\n                            \n                            \n                                cargarPublicaciones\n                            \n                            \n                                editar\n                            \n                            \n                                getUserInitial\n                            \n                            \n                                guardarSede\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    postsFiltrados\n                                \n                                \n                                    totalPaginas\n                                \n                                \n                                    paginas\n                                \n                                \n                                    postsPaginados\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarPagina\n                        \n                    \n                \n            \n            \n                \ncambiarPagina(pagina: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:231\n                        \n                    \n\n\n            \n                \n                        Cambia de página en la vista de publicaciones.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pagina\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página deseada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPublicaciones\n                        \n                    \n                \n            \n            \n                \ncargarPublicaciones(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Carga todas las publicaciones del usuario y calcula\nestadísticas relacionadas a comentarios y puntajes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(post: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Redirige al usuario al formulario de edición de una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Publicación a editar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitial\n                        \n                    \n                \n            \n            \n                \ngetUserInitial()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Devuelve la inicial del nombre del usuario.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Letra inicial o \"?\" si no disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardarSede\n                        \n                    \n                \n            \n            \n                \nguardarSede()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Guarda el cambio de sede realizado por el usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/perfil/perfil.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Inicializa el perfil: obtiene los datos del usuario,\nsus publicaciones, comentarios y puntajes asociados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:62\n                        \n                    \n\n            \n                \n                    Categorías disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commentService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:47\n                        \n                    \n\n            \n                \n                    Servicio para gestionar comentarios de las publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroPost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:103\n                        \n                    \n\n            \n                \n                    Texto para filtrar publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginaActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:109\n                        \n                    \n\n            \n                \n                    Página actual de visualización\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postCategoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostCategoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:50\n                        \n                    \n\n            \n                \n                    Servicio para obtener y administrar categorías de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:59\n                        \n                    \n\n            \n                \n                    Publicaciones realizadas por el usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:41\n                        \n                    \n\n            \n                \n                    Servicio encargado de operaciones sobre publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postsPorPagina\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:106\n                        \n                    \n\n            \n                \n                    Cantidad de publicaciones por página\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        promedioPonderado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:100\n                        \n                    \n\n            \n                \n                    Promedio de puntuaciones recibidas en sus publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:44\n                        \n                    \n\n            \n                \n                    Servicio de navegación entre rutas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scoreService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScoreService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:53\n                        \n                    \n\n            \n                \n                    Servicio que permite obtener y enviar calificaciones (scores) de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sede\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:65\n                        \n                    \n\n            \n                \n                    Sede seleccionada actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:68\n                        \n                    \n\n            \n                \n                    Lista de sedes posibles (Duoc UC)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalComments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:97\n                        \n                    \n\n            \n                \n                    Total de comentarios recibidos en sus publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:94\n                        \n                    \n\n            \n                \n                    Total de publicaciones del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:56\n                        \n                    \n\n            \n                \n                    Información del usuario autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/perfil/perfil.component.ts:38\n                        \n                    \n\n            \n                \n                    Servicio que gestiona la información y estado del usuario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        postsFiltrados\n                    \n                \n\n                \n                    \n                        getpostsFiltrados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:196\n                                \n                            \n                    \n                        \n                                Devuelve las publicaciones filtradas según el texto ingresado.\n\n\n                                \n                                    Returns :         Post[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        totalPaginas\n                    \n                \n\n                \n                    \n                        gettotalPaginas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:208\n                                \n                            \n                    \n                        \n                                Calcula el total de páginas según los resultados filtrados.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        paginas\n                    \n                \n\n                \n                    \n                        getpaginas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:215\n                                \n                            \n                    \n                        \n                                Devuelve un arreglo con los números de página disponibles.\n\n\n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        postsPaginados\n                    \n                \n\n                \n                    \n                        getpostsPaginados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/perfil/perfil.component.ts:222\n                                \n                            \n                    \n                        \n                                Devuelve las publicaciones correspondientes a la página actual.\n\n\n                                \n                                    Returns :         Post[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n\n/* BreadCrumb */\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\n\n/* Services */\nimport { UserService } from '../../core/services/user.service';\nimport { PostService } from '../../core/services/post.service';\nimport { CommentService } from '../../core/services/comment.service';\nimport { PostCategoryService } from '../../core/services/post-category.service';\nimport { ScoreService } from '../../core/services/score.service';\n\n/* Models */\nimport { User } from '../../models/user';\nimport { Post } from '../../models/post';\nimport { PostCategory } from '../../models/postCategory';\n\n/**\n * Componente que muestra el perfil del usuario autenticado.\n * Permite visualizar y filtrar sus publicaciones, editar su sede,\n * y muestra estadísticas personales como total de comentarios, publicaciones\n * y promedio de calificaciones recibidas.\n */\n@Component({\n  selector: 'app-perfil',\n  standalone: true,\n  imports: [CommonModule, BreadcrumbComponent, RouterModule, FormsModule],\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n  /** Servicio que gestiona la información y estado del usuario */\n  private userService = inject(UserService);\n\n  /** Servicio encargado de operaciones sobre publicaciones */\n  private postService = inject(PostService);\n\n  /** Servicio de navegación entre rutas */\n  private router = inject(Router);\n\n  /** Servicio para gestionar comentarios de las publicaciones */\n  private commentService = inject(CommentService);\n\n  /** Servicio para obtener y administrar categorías de publicaciones */\n  private postCategoryService = inject(PostCategoryService);\n\n  /** Servicio que permite obtener y enviar calificaciones (scores) de publicaciones */\n  private scoreService = inject(ScoreService);\n\n  /** Información del usuario autenticado */\n  user: User | null = null;\n\n  /** Publicaciones realizadas por el usuario */\n  posts: Post[] = [];\n\n  /** Categorías disponibles */\n  categories: PostCategory[] = [];\n\n  /** Sede seleccionada actualmente */\n  sede = '';\n\n  /** Lista de sedes posibles (Duoc UC) */\n  sedes: string[] = [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ];\n\n  /** Total de publicaciones del usuario */\n  totalPosts = 0;\n\n  /** Total de comentarios recibidos en sus publicaciones */\n  totalComments = 0;\n\n  /** Promedio de puntuaciones recibidas en sus publicaciones */\n  promedioPonderado = 0;\n\n  /** Texto para filtrar publicaciones */\n  filtroPost = '';\n\n  /** Cantidad de publicaciones por página */\n  postsPorPagina = 8;\n\n  /** Página actual de visualización */\n  paginaActual = 1;\n\n  /**\n   * Inicializa el perfil: obtiene los datos del usuario,\n   * sus publicaciones, comentarios y puntajes asociados.\n   */\n  ngOnInit(): void {\n    const email = this.userService.getAzureUser()?.email || this.userService.getName();\n    if (!email) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.postCategoryService.getAll().subscribe(cats => (this.categories = cats));\n\n    this.userService.getUser(email).subscribe(user => {\n      this.user = user;\n      this.sede = user.center;\n      if (user.idUser !== undefined) {\n        this.cargarPublicaciones(user.idUser);\n      }\n    });\n  }\n\n  /**\n   * Carga todas las publicaciones del usuario y calcula\n   * estadísticas relacionadas a comentarios y puntajes.\n   * @param idUser ID del usuario.\n   */\n  cargarPublicaciones(idUser: number): void {\n    this.postService.getAll().subscribe(posts => {\n      this.posts = posts.filter(p => p.idUser === idUser);\n      this.totalPosts = this.posts.length;\n      this.paginaActual = 1;\n\n      const commentRequests = this.posts.map(p => this.commentService.getByPostId(p.idPost));\n      if (commentRequests.length) {\n        forkJoin(commentRequests).subscribe(all => {\n          this.totalComments = all.reduce((acc, arr) => acc + arr.length, 0);\n        });\n      } else {\n        this.totalComments = 0;\n      }\n\n\n      const scoreRequests = this.posts.map(p => this.scoreService.getAverageScore(p.idPost));\n      if (scoreRequests.length) {\n        forkJoin(scoreRequests).subscribe(all => {\n          const total = all.reduce((acc, val) => acc + val, 0);\n          this.promedioPonderado = total / all.length;\n        });\n      } else {\n        this.promedioPonderado = 0;\n      }\n    });\n  }\n\n  /**\n   * Devuelve la inicial del nombre del usuario.\n   * @returns Letra inicial o \"?\" si no disponible.\n   */\n  getUserInitial(): string {\n    return this.user?.name ? this.user.name.charAt(0).toUpperCase() : '?';\n  }\n\n  /**\n  * Guarda el cambio de sede realizado por el usuario.\n  */\n  guardarSede(): void {\n    if (this.user) {\n      const updatedUser = { ...this.user, center: this.sede };\n      this.userService.registerUser(updatedUser).subscribe(() => {\n      });\n    }\n  }\n\n  /**\n   * Redirige al usuario al formulario de edición de una publicación.\n   * @param post Publicación a editar.\n   */\n  editar(post: Post): void {\n    this.router.navigate(['/dashboard/ayudantias', post.idPost], { state: { editar: post } });\n  }\n\n  /**\n   * Devuelve las publicaciones filtradas según el texto ingresado.\n   */\n  get postsFiltrados(): Post[] {\n    if (!this.filtroPost.trim()) return this.posts;\n    const texto = this.filtroPost.toLowerCase();\n    return this.posts.filter(p =>\n      p.title.toLowerCase().includes(texto) ||\n      p.content.toLowerCase().includes(texto)\n    );\n  }\n\n  /**\n   * Calcula el total de páginas según los resultados filtrados.\n   */\n  get totalPaginas(): number {\n    return Math.ceil(this.postsFiltrados.length / this.postsPorPagina) || 1;\n  }\n\n  /**\n   * Devuelve un arreglo con los números de página disponibles.\n   */\n  get paginas(): number[] {\n    return Array.from({ length: this.totalPaginas }, (_, i) => i + 1);\n  }\n\n  /**\n   * Devuelve las publicaciones correspondientes a la página actual.\n   */\n  get postsPaginados(): Post[] {\n    const inicio = (this.paginaActual - 1) * this.postsPorPagina;\n    return this.postsFiltrados.slice(inicio, inicio + this.postsPorPagina);\n  }\n\n  /**\n   * Cambia de página en la vista de publicaciones.\n   * @param pagina Número de página deseada.\n   */\n  cambiarPagina(pagina: number): void {\n    if (pagina  this.totalPaginas) return;\n    this.paginaActual = pagina;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n  \n    \n      {{ getUserInitial() }}\n    \n    \n      {{ user?.name || 'Mi Perfil' }}\n      Correo: {{ user?.email }}\n      Rol: {{ user?.role }}\n      \n        Sede:\n        \n          @for (s of sedes; track s) {\n          {{ s }}\n          }\n        \n      \n    \n\n    \n      \n         Editar Perfil\n      \n    \n     -->\n\n  \n\n  \n  \n    Estadísticas personales\n    \n      \n        Publicaciones: {{ totalPosts }}\n        Comentarios recibidos: {{ totalComments }}\n        Calificación Ponderada: {{ promedioPonderado |\n          number:'1.1-1' }} / 5\n      \n    \n  \n\n  \n  \n    Mis publicaciones\n\n    @if (posts.length) {\n    \n      \n    \n    }\n\n    @if (!posts.length) {\n    \n      Aún no has publicado nada.\n    \n    }\n\n    @if (posts.length) {\n    \n      @for (pub of postsPaginados; track pub) {\n      \n        {{ pub.title }}\n\n           Editar\n         -->\n      \n      }\n    \n     1\">\n      \n        \n          Anterior\n        \n        \n          {{ p }}\n        \n        \n          Siguiente\n        \n      \n    \n    }\n  \n\n\n\n    \n\n    \n                \n                    ./perfil.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.perfil-box {\n    background-color: #fff7e6;\n    border-left: 5px solid $amarillo;\n    border-radius: 0.5rem;\n}\n\nh4,\nh5 {\n    color: $negro;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #eee;\n\n    &:last-child {\n        border-bottom: none;\n    }\n\n    button {\n        font-size: 0.85rem;\n    }\n}\n\n.perfil-header {\n    border: 1px solid #eee;\n    border-radius: 1rem;\n    background: #fff;\n\n    .avatar {\n        width: 80px;\n        height: 80px;\n        background-color: #0d6efd;\n        color: white;\n        border-radius: 50%;\n        font-size: 2rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-shadow: 0 0 0 3px white;\n        font-weight: 600;\n    }\n}\n\nh4,\nh5 {\n    color: #212529;\n}\n\n.bg-white {\n    border: 1px solid #e0e0e0;\n}\n\n.list-group-item {\n    border: none;\n    border-bottom: 1px solid #f0f0f0;\n    transition: background 0.2s ease;\n\n    &:hover {\n        background-color: #f8f9fa;\n    }\n\n    .btn {\n        font-size: 0.85rem;\n    }\n\n    &:last-child {\n        border-bottom: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ getUserInitial() }}              {{ user?.name || \\'Mi Perfil\\' }}      Correo: {{ user?.email }}      Rol: {{ user?.role }}              Sede:                  @for (s of sedes; track s) {          {{ s }}          }                                     Editar Perfil               -->          Estadísticas personales                  Publicaciones: {{ totalPosts }}        Comentarios recibidos: {{ totalComments }}        Calificación Ponderada: {{ promedioPonderado |          number:\\'1.1-1\\' }} / 5                    Mis publicaciones    @if (posts.length) {                  }    @if (!posts.length) {          Aún no has publicado nada.        }    @if (posts.length) {          @for (pub of postsPaginados; track pub) {              {{ pub.title }}           Editar         -->            }         1\">                        Anterior                          {{ p }}                          Siguiente                      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una publicación realizada por un usuario dentro de ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contenido detallado de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de creación de la publicación (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la categoría asociada a la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que creó la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Número de visualizaciones que ha recibido la publicación\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostCategory.html":{"url":"interfaces/PostCategory.html","title":"interface - PostCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/postCategory.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una categoría en la que pueden clasificarse las publicaciones dentro de ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción breve de la categoría\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único de la categoría\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la categoría (ej: Ayudantías, Deportes, Trueques, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la categoría: 0 = Inactiva, 1 = Activa\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PostCategory {\n    /** ID único de la categoría */\n    idCategory: number;\n\n    /** Nombre de la categoría (ej: Ayudantías, Deportes, Trueques, etc.) */\n    name: string;\n\n    /** Descripción breve de la categoría */\n    description: string;\n\n    /** Estado de la categoría: 0 = Inactiva, 1 = Activa */\n    status: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostCategoryService.html":{"url":"injectables/PostCategoryService.html","title":"injectable - PostCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/post-category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para gestionar las categorías de publicaciones en ConectaDuoc.\nPermite obtener, crear, actualizar y eliminar categorías.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(category: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Crea una nueva categoría.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto sin idCategory, ya que es generado por el backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Categoría creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Elimina una categoría por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las categorías disponibles.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Lista de objetos PostCategory.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, category: PostCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post-category.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Actualiza una categoría existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría a actualizar.\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            PostCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto PostCategory con los nuevos valores.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Categoría actualizada.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/post-category'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post-category.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para categorías de publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post-category.service.ts:18\n                        \n                    \n\n            \n                \n                    Cliente HTTP utilizado para realizar peticiones al backend\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostCategory } from '../../models/postCategory';\n\n/**\n * Servicio para gestionar las categorías de publicaciones en ConectaDuoc.\n * Permite obtener, crear, actualizar y eliminar categorías.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostCategoryService {\n  /** URL base del API para categorías de publicaciones */\n  private apiUrl = 'http://localhost:9090/api/post-category';\n\n  /** Cliente HTTP utilizado para realizar peticiones al backend */\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todas las categorías disponibles.\n   * @returns Lista de objetos `PostCategory`.\n   */\n  getAll(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // ----------------------\n  // Módulo de Configuraciones\n  // ----------------------\n\n  /**\n   * Crea una nueva categoría.\n   * @param category Objeto sin `idCategory`, ya que es generado por el backend.\n   * @returns Categoría creada.\n   */\n  create(category: Omit): Observable {\n    return this.http.post(this.apiUrl, category);\n  }\n\n  /**\n   * Actualiza una categoría existente.\n   * @param id ID de la categoría a actualizar.\n   * @param category Objeto `PostCategory` con los nuevos valores.\n   * @returns Categoría actualizada.\n   */\n  update(id: number, category: PostCategory): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, category);\n  }\n\n  /**\n   * Elimina una categoría por su ID.\n   * @param id ID de la categoría a eliminar.\n   */\n  delete(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/post.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las publicaciones en ConectaDuoc.\nPermite crear, obtener, eliminar publicaciones y registrar visualizaciones.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPost\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                sumarVisualizacion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPost\n                        \n                    \n                \n            \n            \n                \ncreatePost(post: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Crea una nueva publicación en la base de datos.\nEl ID, fecha y visualizaciones serán generadas automáticamente por el backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto con los datos de la publicación (sin idPost, createdDate ni views).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Publicación creada.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Elimina una publicación por su ID.\n(Solo si esta acción está permitida por reglas del sistema).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(categoryId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Obtiene todas las publicaciones o filtra por categoría si se indica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (Opcional) ID de la categoría para filtrar publicaciones.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de publicaciones.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Obtiene una publicación específica por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Objeto Post.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sumarVisualizacion\n                        \n                    \n                \n            \n            \n                \nsumarVisualizacion(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/post.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Registra una nueva visualización para una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación visualizada.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/post'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post.service.ts:15\n                        \n                    \n\n            \n                \n                    URL base del API para publicaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/post.service.ts:18\n                        \n                    \n\n            \n                \n                    Cliente HTTP utilizado para realizar peticiones al backend\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Post } from '../../models/post';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar las publicaciones en ConectaDuoc.\n * Permite crear, obtener, eliminar publicaciones y registrar visualizaciones.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  /** URL base del API para publicaciones */\n  private apiUrl = 'http://localhost:9090/api/post';\n\n  /** Cliente HTTP utilizado para realizar peticiones al backend */\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene todas las publicaciones o filtra por categoría si se indica.\n   * @param categoryId (Opcional) ID de la categoría para filtrar publicaciones.\n   * @returns Lista de publicaciones.\n   */\n  getAll(categoryId?: number): Observable {\n    if (categoryId) {\n      return this.http.get(`${this.apiUrl}?idCategory=${categoryId}`);\n    }\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Obtiene una publicación específica por su ID.\n   * @param idPost ID de la publicación.\n   * @returns Objeto `Post`.\n   */\n  getById(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}/${idPost}`);\n  }\n\n  /**\n   * Crea una nueva publicación en la base de datos.\n   * El ID, fecha y visualizaciones serán generadas automáticamente por el backend.\n   * @param post Objeto con los datos de la publicación (sin `idPost`, `createdDate` ni `views`).\n   * @returns Publicación creada.\n   */\n  createPost(post: Omit): Observable {\n    return this.http.post(this.apiUrl, post);\n  }\n\n  /**\n   * Elimina una publicación por su ID.\n   * (Solo si esta acción está permitida por reglas del sistema).\n   * @param idPost ID de la publicación a eliminar.\n   */\n  delete(idPost: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${idPost}`);\n  }\n\n\n  /**\n   * Registra una nueva visualización para una publicación.\n   * @param idPost ID de la publicación visualizada.\n   */\n  sumarVisualizacion(idPost: number): Observable {\n    return this.http.put(`${this.apiUrl}/${idPost}/view`, {});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostView.html":{"url":"interfaces/PostView.html","title":"interface - PostView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa la cantidad de visualizaciones que ha recibido una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            views\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        views:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Número total de visualizaciones registradas\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de registrar un nuevo usuario en ConectaDuoc\nal iniciar sesión por primera vez con Azure AD. El usuario debe seleccionar su sede.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                name\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                sedes\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                guardarRegistro\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        guardarRegistro\n                        \n                    \n                \n            \n            \n                \nguardarRegistro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Envía el formulario de registro al backend.\nUna vez registrado, redirige al usuario a las reglas de la comunidad.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario y carga los datos del usuario desde Azure AD.\nSi no hay sesión activa, redirige a la pantalla de inicio.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:32\n                        \n                    \n\n            \n                \n                    Correo del usuario autenticado (obtenido desde Azure AD)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:20\n                        \n                    \n\n            \n                \n                    Servicio para construir y manejar formularios reactivos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:35\n                        \n                    \n\n            \n                \n                    Nombre completo del usuario autenticado (Azure AD)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:29\n                        \n                    \n\n            \n                \n                    Formulario reactivo para el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:26\n                        \n                    \n\n            \n                \n                    Servicio de ruteo para navegación entre componentes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online', 'Campus Virtual', 'Sede Alameda', 'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas', 'Sede Educación Continua', 'Sede Maipú', 'Sede Melipilla',\n    'Sede Plaza Norte', 'Sede Plaza Oeste', 'Sede Plaza Vespucio', 'Sede Puente Alto',\n    'Sede San Bernardo', 'Sede San Carlos de Apoquindo', 'Sede San Joaquín',\n    'Sede Valparaíso', 'Sede Viña del Mar', 'Campus Arauco', 'Campus Nacimiento',\n    'Sede San Andrés de Concepción', 'Campus Villarrica', 'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:41\n                        \n                    \n\n            \n                \n                    Lista de sedes disponibles en Duoc UC.\nEl usuario debe seleccionar una como parte del registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:23\n                        \n                    \n\n            \n                \n                    Servicio que gestiona los datos y acciones relacionadas al usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../core/services/user.service';\nimport { User } from '../../models/user';\n\n/**\n * Componente encargado de registrar un nuevo usuario en ConectaDuoc\n * al iniciar sesión por primera vez con Azure AD. El usuario debe seleccionar su sede.\n */\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  /** Servicio para construir y manejar formularios reactivos */\n  private fb = inject(FormBuilder);\n\n  /** Servicio que gestiona los datos y acciones relacionadas al usuario */\n  private userService = inject(UserService);\n\n  /** Servicio de ruteo para navegación entre componentes */\n  private router = inject(Router);\n\n  /** Formulario reactivo para el registro */\n  registerForm!: FormGroup;\n\n  /** Correo del usuario autenticado (obtenido desde Azure AD) */\n  email = '';\n\n  /** Nombre completo del usuario autenticado (Azure AD) */\n  name = '';\n\n  /**\n   * Lista de sedes disponibles en Duoc UC.\n   * El usuario debe seleccionar una como parte del registro.\n   */\n  sedes: string[] = [\n    'Modalidad online', 'Campus Virtual', 'Sede Alameda', 'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas', 'Sede Educación Continua', 'Sede Maipú', 'Sede Melipilla',\n    'Sede Plaza Norte', 'Sede Plaza Oeste', 'Sede Plaza Vespucio', 'Sede Puente Alto',\n    'Sede San Bernardo', 'Sede San Carlos de Apoquindo', 'Sede San Joaquín',\n    'Sede Valparaíso', 'Sede Viña del Mar', 'Campus Arauco', 'Campus Nacimiento',\n    'Sede San Andrés de Concepción', 'Campus Villarrica', 'Sede Puerto Montt'\n  ];\n\n  /**\n   * Inicializa el formulario y carga los datos del usuario desde Azure AD.\n   * Si no hay sesión activa, redirige a la pantalla de inicio.\n   */\n  ngOnInit(): void {\n    const azureUser = this.userService.getAzureUser();\n    if (!azureUser) {\n      this.router.navigate(['/']);\n      return;\n    }\n\n    this.email = azureUser.email;\n    this.name = azureUser.fullName;\n\n    this.registerForm = this.fb.group({\n      center: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Envía el formulario de registro al backend.\n   * Una vez registrado, redirige al usuario a las reglas de la comunidad.\n   */\n  guardarRegistro(): void {\n    if (this.registerForm.invalid) return;\n\n    const user: User = {\n      email: this.email,\n      name: this.name,\n      center: this.registerForm.value.center,\n      role: 'student',\n      policies: 0 // Aceptación viene después en el flujo\n    };\n\n    this.userService.registerUser(user).subscribe({\n      next: () => {\n        // Al registrar, redirige a la pantalla de reglas de la comunidad\n        this.router.navigate(['/reglas-de-la-comunidad']);\n      },\n      error: () => {\n        // Manejo de error, podrías mostrar un mensaje al usuario\n        console.error('Error al registrar el usuario');\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      ¡Bienvenido/a a la comunidad ConectaDuoc!\n      Registro de usuario\n    \n\n    \n      \n        Email\n        \n      \n\n      \n        Nombre completo\n        \n      \n\n      \n        Sede\n        \n          Seleccione su sede\n          @for (s of sedes; track s) {\n          {{ s }}\n          }\n        \n      \n\n      \n        Guardar y continuar\n      \n    \n  \n\n\n\n  ← Volver al inicio de sesión\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                @use 'styles' as *;\n@use 'sass:color';\n\n.registro-wrapper {\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: $blanco;\n}\n\n.container {\n    padding-bottom: 0 !important;\n}\n\n.registro-card {\n    max-width: 400px;\n    border-radius: 1.25rem;\n    border: none;\n    background: $blanco;\n    border-top: 5px solid $amarillo;\n}\n\n.logo-registro {\n    height: 60px;\n}\n\n.titulo-registro {\n    color: $amarillo;\n}\n\nlabel {\n    color: $negro;\n}\n\n.campo-readonly {\n    background: #f9fafb !important;\n    color: $gris !important;\n    font-weight: 600;\n}\n\n.form-select:invalid {\n    color: $gris;\n    font-style: italic;\n}\n\n.boton-registro {\n    background-color: $amarillo !important;\n    border: none !important;\n    color: $negro !important;\n    transition: background 0.2s;\n\n    &:hover {\n        background-color: color.adjust($amarillo, $lightness: -10%) !important;\n        color: $negro !important;\n    }\n}\n\n\n.text-center a {\n    font-size: 0.95rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      ¡Bienvenido/a a la comunidad ConectaDuoc!      Registro de usuario                      Email                            Nombre completo                            Sede                  Seleccione su sede          @for (s of sedes; track s) {          {{ s }}          }                            Guardar y continuar              ← Volver al inicio de sesión'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReglasDeLaComunidadComponent.html":{"url":"components/ReglasDeLaComunidadComponent.html","title":"component - ReglasDeLaComunidadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReglasDeLaComunidadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra las reglas de la comunidad de ConectaDuoc.\nObliga al usuario a aceptarlas antes de utilizar la plataforma por primera vez.\nSi las rechaza, se le cierra la sesión.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reglas-de-la-comunidad\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                                ModalConfirmacionComponent\n                \n            \n\n            \n                styleUrls\n                ./reglas-de-la-comunidad.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reglas-de-la-comunidad.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarModal\n                            \n                            \n                                reglas\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aceptarReglas\n                            \n                            \n                                cancelarRechazo\n                            \n                            \n                                confirmarRechazo\n                            \n                            \n                                rechazarReglas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aceptarReglas\n                        \n                    \n                \n            \n            \n                \naceptarReglas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Acepta las reglas de la comunidad y actualiza el campo policies del usuario a 1.\nTambién se guarda la aceptación en localStorage para prevenir múltiples redirecciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarRechazo\n                        \n                    \n                \n            \n            \n                \ncancelarRechazo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Cancela el intento de rechazo de las reglas, cerrando el modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarRechazo\n                        \n                    \n                \n            \n            \n                \nconfirmarRechazo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Confirma el rechazo de las reglas.\nSe marca policies como 0, se limpia el localStorage y se redirige al login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rechazarReglas\n                        \n                    \n                \n            \n            \n                \nrechazarReglas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Abre el modal de confirmación para rechazar las reglas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:27\n                        \n                    \n\n            \n                \n                    Controla la visibilidad del modal de confirmación de rechazo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reglas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      titulo: '1. Respeto ante todo',\n      descripcion: 'No se toleran comentarios ofensivos, discriminatorios, acosadores o violentos. Toda persona debe ser tratada con dignidad y cortesía.'\n    },\n    {\n      titulo: '2. Actividades sin fines de lucro',\n      descripcion: 'ConectaDuoc es un espacio colaborativo. Está prohibida toda oferta o venta comercial dentro de la plataforma.'\n    },\n    {\n      titulo: '3. Contenido adecuado',\n      descripcion: 'Se prohíbe la publicación de material con lenguaje vulgar, violencia gráfica, apología de drogas, apuestas o cualquier contenido ilícito.'\n    },\n    {\n      titulo: '4. Protección de datos personales',\n      descripcion: 'No publiques datos personales tuyos o de terceros sin consentimiento explícito. Esto incluye RUT, correos, teléfonos o direcciones.'\n    },\n    {\n      titulo: '5. Moderación activa',\n      descripcion: 'Los administradores podrán eliminar o editar publicaciones que infrinjan las reglas. Las reincidencias pueden derivar en la suspensión del perfil.'\n    },\n    {\n      titulo: '6. Lenguaje inclusivo y empático',\n      descripcion: 'Fomentamos un lenguaje claro, inclusivo y que promueva el respeto por la diversidad de género, origen y creencias.'\n    },\n    {\n      titulo: '7. Sistema de reportes',\n      descripcion: 'Los usuarios pueden reportar contenido inapropiado mediante el botón correspondiente. Todas las denuncias serán revisadas.'\n    },\n    {\n      titulo: '8. Contenido académico y estudiantil preferente',\n      descripcion: 'Se espera que las publicaciones estén relacionadas con el quehacer estudiantil: ayudantías, actividades culturales, voluntariado, etc.'\n    },\n    {\n      titulo: '9. Responsabilidad en encuentros presenciales',\n      descripcion: 'En caso de concretarse actividades fuera de la plataforma, los usuarios deben ser responsables, actuar con respeto y cuidar su seguridad.'\n    },\n    {\n      titulo: '10. Prohibición de suplantación de identidad',\n      descripcion: 'Está estrictamente prohibido crear perfiles falsos, impersonar a terceros o utilizar datos que no correspondan.'\n    },\n    {\n      titulo: '11. Uso exclusivo de cuentas institucionales',\n      descripcion: 'Para participar en la plataforma, debes iniciar sesión con tu cuenta institucional Duoc UC. Esto asegura un entorno seguro y controlado.'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:32\n                        \n                    \n\n            \n                \n                    Lista de reglas visibles para el usuario, con título y descripción.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:24\n                        \n                    \n\n            \n                \n                    Servicio de enrutamiento para navegación entre vistas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts:21\n                        \n                    \n\n            \n                \n                    Servicio que gestiona los datos y estado del usuario en la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ModalConfirmacionComponent } from '../../shared/modal-confirmacion/modal-confirmacion.component';\nimport { UserService } from '../../core/services/user.service';\n\n/**\n * Componente que muestra las reglas de la comunidad de ConectaDuoc.\n * Obliga al usuario a aceptarlas antes de utilizar la plataforma por primera vez.\n * Si las rechaza, se le cierra la sesión.\n */\n@Component({\n  selector: 'app-reglas-de-la-comunidad',\n  standalone: true,\n  imports: [FormsModule, ModalConfirmacionComponent],\n  templateUrl: './reglas-de-la-comunidad.component.html',\n  styleUrls: ['./reglas-de-la-comunidad.component.scss']\n})\nexport class ReglasDeLaComunidadComponent {\n  /** Servicio que gestiona los datos y estado del usuario en la aplicación */\n  private userService = inject(UserService);\n\n  /** Servicio de enrutamiento para navegación entre vistas */\n  private router = inject(Router);\n\n  /** Controla la visibilidad del modal de confirmación de rechazo */\n  mostrarModal = false;\n\n  /**\n   * Lista de reglas visibles para el usuario, con título y descripción.\n   */\n  reglas = [\n    {\n      titulo: '1. Respeto ante todo',\n      descripcion: 'No se toleran comentarios ofensivos, discriminatorios, acosadores o violentos. Toda persona debe ser tratada con dignidad y cortesía.'\n    },\n    {\n      titulo: '2. Actividades sin fines de lucro',\n      descripcion: 'ConectaDuoc es un espacio colaborativo. Está prohibida toda oferta o venta comercial dentro de la plataforma.'\n    },\n    {\n      titulo: '3. Contenido adecuado',\n      descripcion: 'Se prohíbe la publicación de material con lenguaje vulgar, violencia gráfica, apología de drogas, apuestas o cualquier contenido ilícito.'\n    },\n    {\n      titulo: '4. Protección de datos personales',\n      descripcion: 'No publiques datos personales tuyos o de terceros sin consentimiento explícito. Esto incluye RUT, correos, teléfonos o direcciones.'\n    },\n    {\n      titulo: '5. Moderación activa',\n      descripcion: 'Los administradores podrán eliminar o editar publicaciones que infrinjan las reglas. Las reincidencias pueden derivar en la suspensión del perfil.'\n    },\n    {\n      titulo: '6. Lenguaje inclusivo y empático',\n      descripcion: 'Fomentamos un lenguaje claro, inclusivo y que promueva el respeto por la diversidad de género, origen y creencias.'\n    },\n    {\n      titulo: '7. Sistema de reportes',\n      descripcion: 'Los usuarios pueden reportar contenido inapropiado mediante el botón correspondiente. Todas las denuncias serán revisadas.'\n    },\n    {\n      titulo: '8. Contenido académico y estudiantil preferente',\n      descripcion: 'Se espera que las publicaciones estén relacionadas con el quehacer estudiantil: ayudantías, actividades culturales, voluntariado, etc.'\n    },\n    {\n      titulo: '9. Responsabilidad en encuentros presenciales',\n      descripcion: 'En caso de concretarse actividades fuera de la plataforma, los usuarios deben ser responsables, actuar con respeto y cuidar su seguridad.'\n    },\n    {\n      titulo: '10. Prohibición de suplantación de identidad',\n      descripcion: 'Está estrictamente prohibido crear perfiles falsos, impersonar a terceros o utilizar datos que no correspondan.'\n    },\n    {\n      titulo: '11. Uso exclusivo de cuentas institucionales',\n      descripcion: 'Para participar en la plataforma, debes iniciar sesión con tu cuenta institucional Duoc UC. Esto asegura un entorno seguro y controlado.'\n    }\n  ];\n\n  /**\n   * Acepta las reglas de la comunidad y actualiza el campo `policies` del usuario a 1.\n   * También se guarda la aceptación en `localStorage` para prevenir múltiples redirecciones.\n   */\n  aceptarReglas() {\n    // Llamamos al backend para marcar \"policies\" como true\n    const email = this.userService.getAzureUser()?.email;\n    if (email) {\n      this.userService.getUser(email).subscribe(user => {\n        const updatedUser = { ...user, policies: 1 };\n        this.userService.registerUser(updatedUser).subscribe(() => {\n          localStorage.setItem('conectaReglasAceptadas', 'true');\n          this.router.navigate(['/dashboard']);\n        });\n      });\n    } else {\n      // Fallback: solo localStorage (en caso de error raro)\n      localStorage.setItem('conectaReglasAceptadas', 'true');\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  /**\n   * Abre el modal de confirmación para rechazar las reglas.\n   */\n  rechazarReglas() {\n    this.mostrarModal = true;\n  }\n\n  /**\n   * Confirma el rechazo de las reglas.\n   * Se marca `policies` como 0, se limpia el localStorage y se redirige al login.\n   */\n  confirmarRechazo() {\n    const email = this.userService.getAzureUser()?.email;\n    if (email) {\n      this.userService.getUser(email).subscribe(user => {\n        const updatedUser = { ...user, policies: 0 };\n        this.userService.registerUser(updatedUser).subscribe(() => {\n          // Ahora sí, limpia el storage y cierra sesión\n          localStorage.removeItem('conectaReglasAceptadas');\n          localStorage.removeItem('userRole');\n          localStorage.removeItem('name');\n          sessionStorage.clear();\n          this.router.navigate(['/login']);\n        });\n      });\n    } else {\n      // Si por algún motivo no hay email, igual cierra sesión\n      localStorage.removeItem('conectaReglasAceptadas');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('name');\n      sessionStorage.clear();\n      this.router.navigate(['/login']);\n    }\n  }\n\n  /**\n   * Cancela el intento de rechazo de las reglas, cerrando el modal.\n   */\n  cancelarRechazo() {\n    this.mostrarModal = false;\n  }\n\n}\n    \n\n    \n        \n  \n    Reglas de la Comunidad\n\n    \n      En ConectaDuoc creemos en una comunidad estudiantil colaborativa, inclusiva y segura. Para\n      garantizar una experiencia positiva para todos los usuarios, te invitamos a respetar los siguientes\n      principios de convivencia. El uso de esta plataforma implica la aceptación de estas reglas.\n    \n\n    @for (item of reglas; track item) {\n      \n        {{ item.titulo }}\n        {{ item.descripcion }}\n      \n    }\n\n    \n      \n        ConectaDuoc es un espacio construido por y para estudiantes. Tu participación responsable y respetuosa\n        nos permite fortalecer una red de apoyo mutuo. ¡Gracias por ser parte de esta comunidad!\n      \n    \n\n    \n      Estoy de acuerdo\n      No estoy de acuerdo\n    \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./reglas-de-la-comunidad.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.reglas-wrapper {\n    background-color: $blanco;\n    color: $negro;\n    flex: 1;\n\n    .reglas-container {\n        max-width: 920px;\n        margin: auto;\n        background-color: $blanco;\n        border-radius: 16px;\n        padding: 3rem 2rem;\n        box-shadow: 0 0 14px rgba(0, 0, 0, 0.06);\n    }\n\n    .titulo {\n        font-size: 2.5rem;\n        font-weight: 700;\n        color: $negro;\n        border-left: 8px solid $amarillo;\n        padding-left: 1rem;\n        margin-bottom: 1.75rem;\n    }\n\n    .intro {\n        font-size: 1.15rem;\n        color: $gris;\n        line-height: 1.7;\n    }\n\n    .regla {\n        margin-bottom: 2rem;\n\n        .regla-titulo {\n            font-weight: 600;\n            color: $negro;\n            font-size: 1.2rem;\n            margin-bottom: 0.5rem;\n        }\n\n        .regla-texto {\n            font-size: 1.05rem;\n            color: $gris;\n            line-height: 1.6;\n        }\n    }\n\n    .final {\n        font-size: 1rem;\n        font-style: italic;\n        color: $gris;\n        text-align: center;\n        margin-top: 3rem;\n    }\n\n    .btn-amarillo {\n        background-color: $amarillo;\n        color: $negro-puro;\n        font-weight: 600;\n        padding: 0.75rem 1.5rem;\n        border: none;\n        border-radius: 12px;\n        transition: background-color 0.3s ease;\n\n        &:hover {\n            background-color: color.adjust($amarillo, $lightness: 7%);\n            cursor: pointer;\n        }\n    }\n\n    .btn-outline-dark {\n        border: 2px solid $negro;\n        color: $negro;\n        font-weight: 500;\n        padding: 0.7rem 1.4rem;\n        border-radius: 12px;\n        background-color: transparent;\n        transition: background-color 0.3s;\n\n        &:hover {\n            background-color: $negro;\n            color: $blanco;\n        }\n    }\n\n    .acciones-botones {\n        display: flex;\n        justify-content: center;\n        gap: 1.5rem; // separación profesional entre botones\n        flex-wrap: wrap;\n        margin-top: 2rem;\n\n        button {\n            min-width: 180px;\n            padding: 0.75rem 1.5rem;\n            font-weight: 600;\n            font-size: 1rem;\n            border-radius: 12px;\n            transition: all 0.3s ease;\n        }\n\n        .btn-amarillo {\n            background-color: $amarillo;\n            color: $negro-puro;\n            border: none;\n\n            &:hover {\n                background-color: color.adjust($amarillo, $lightness: -10%);\n            }\n        }\n\n        .btn-outline-dark {\n            background-color: transparent;\n            border: 2px solid $negro;\n            color: $negro;\n\n            &:hover {\n                background-color: $negro;\n                color: $blanco;\n            }\n        }\n    }\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reglas de la Comunidad          En ConectaDuoc creemos en una comunidad estudiantil colaborativa, inclusiva y segura. Para      garantizar una experiencia positiva para todos los usuarios, te invitamos a respetar los siguientes      principios de convivencia. El uso de esta plataforma implica la aceptación de estas reglas.        @for (item of reglas; track item) {              {{ item.titulo }}        {{ item.descripcion }}          }                  ConectaDuoc es un espacio construido por y para estudiantes. Tu participación responsable y respetuosa        nos permite fortalecer una red de apoyo mutuo. ¡Gracias por ser parte de esta comunidad!                    Estoy de acuerdo      No estoy de acuerdo      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReglasDeLaComunidadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un reporte generado por un usuario sobre una publicación o comentario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idPost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idReport\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            post\n                                        \n                                \n                                \n                                        \n                                            reason\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resolucion\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         Comment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Comentario asociado al reporte (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha en que se generó el reporte (ISO string)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idComment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID del comentario reportado (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID de la publicación reportada (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idReport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idReport:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que generó el reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        post\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        post:         Post\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Post\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Publicación asociada al reporte (si aplica)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Razón o motivo del reporte\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolucion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolucion:     \"concedido\" | \"rechazado\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"concedido\" | \"rechazado\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Resolución tomada por el administrador: 'concedido' o 'rechazado'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del reporte: 0 = Inactivo, 1 = Activo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Post } from \"./post\";\n\n/**\n * Representa un reporte generado por un usuario sobre una publicación o comentario.\n */\n\nexport interface Report {\n    /** ID único del reporte */\n    idReport?: number;\n\n    /** ID de la publicación reportada (si aplica) */\n    idPost?: number;\n\n    /** ID del comentario reportado (si aplica) */\n    idComment?: number;\n\n    /** Razón o motivo del reporte */\n    reason: string;\n\n    /** Estado del reporte: 0 = Inactivo, 1 = Activo */\n    status: number;\n\n    /** Fecha en que se generó el reporte (ISO string) */\n    createdDate: string;\n\n    /** ID del usuario que generó el reporte */\n    idUser: number;\n\n    /** Publicación asociada al reporte (si aplica) */\n    post?: Post;\n\n    /** Comentario asociado al reporte (si aplica) */\n    comment?: Comment;\n\n    /** Resolución tomada por el administrador: 'concedido' o 'rechazado' */\n    resolucion?: 'concedido' | 'rechazado';\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/report.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar reportes (denuncias) sobre publicaciones\ny comentarios en la plataforma ConectaDuoc.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllReports\n                            \n                            \n                                reportComment\n                            \n                            \n                                reportPost\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllReports\n                        \n                    \n                \n            \n            \n                \ngetAllReports()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los reportes registrados en el sistema.\nGeneralmente usado por el administrador para revisión y gestión.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Lista de objetos Report.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportComment\n                        \n                    \n                \n            \n            \n                \nreportComment(idComment: number, reason: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Envía un reporte sobre un comentario específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idComment\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del comentario a reportar.\n\n                                            \n                                        \n                                        \n                                                reason\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Motivo del reporte.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el reporte creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportPost\n                        \n                    \n                \n            \n            \n                \nreportPost(idPost: number, reason: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Envía un reporte sobre una publicación específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación a reportar.\n\n                                            \n                                        \n                                        \n                                                reason\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Motivo del reporte.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el reporte creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(idReport: number, status: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/report.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado de un reporte (por ejemplo, para marcarlo como revisado).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idReport\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del reporte a modificar.\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo estado (0 = inactivo, 1 = activo).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Reporte actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/report'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:16\n                        \n                    \n\n            \n                \n                    URL base del API para reportes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:19\n                        \n                    \n\n            \n                \n                    Cliente HTTP para realizar peticiones al backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/report.service.ts:22\n                        \n                    \n\n            \n                \n                    Servicio que maneja la lógica relacionada con el usuario actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Report } from '../../models/report';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n/**\n * Servicio encargado de gestionar reportes (denuncias) sobre publicaciones\n * y comentarios en la plataforma ConectaDuoc.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n  /** URL base del API para reportes */\n  private apiUrl = 'http://localhost:9090/api/report';\n\n  /** Cliente HTTP para realizar peticiones al backend */\n  private http = inject(HttpClient);\n\n  /** Servicio que maneja la lógica relacionada con el usuario actual */\n  private userService = inject(UserService);\n\n  /**\n   * Envía un reporte sobre una publicación específica.\n   * @param idPost ID de la publicación a reportar.\n   * @param reason Motivo del reporte.\n   * @returns Observable con el reporte creado.\n   */\n  reportPost(idPost: number, reason: string): Observable {\n    const idUser = this.userService.getIdUser();\n\n    const now = new Date();\n    const localDateTime = now.getFullYear() + '-' +\n      String(now.getMonth() + 1).padStart(2, '0') + '-' +\n      String(now.getDate()).padStart(2, '0') + 'T' +\n      String(now.getHours()).padStart(2, '0') + ':' +\n      String(now.getMinutes()).padStart(2, '0') + ':' +\n      String(now.getSeconds()).padStart(2, '0');\n\n    const report: Report = {\n      idPost,\n      reason,\n      status: 1,\n      createdDate: localDateTime,\n      idUser: idUser!\n    };\n\n    return this.http.post(`${this.apiUrl}/publicacion`, report);\n  }\n\n  /**\n   * Envía un reporte sobre un comentario específico.\n   * @param idComment ID del comentario a reportar.\n   * @param reason Motivo del reporte.\n   * @returns Observable con el reporte creado.\n   */\n  reportComment(idComment: number, reason: string): Observable {\n    const idUser = this.userService.getIdUser();\n    const report: Report = {\n      idComment,\n      reason,\n      status: 1,\n      createdDate: new Date().toISOString(),\n      idUser: idUser!\n    };\n    return this.http.post(`${this.apiUrl}/comentario`, report);\n  }\n\n  /**\n   * Obtiene todos los reportes registrados en el sistema.\n   * Generalmente usado por el administrador para revisión y gestión.\n   * @returns Lista de objetos `Report`.\n   */\n  getAllReports(): Observable {\n    return this.http.get(`${this.apiUrl}`);\n  }\n\n  /**\n   * Actualiza el estado de un reporte (por ejemplo, para marcarlo como revisado).\n   * @param idReport ID del reporte a modificar.\n   * @param status Nuevo estado (0 = inactivo, 1 = activo).\n   * @returns Reporte actualizado.\n   */\n  updateStatus(idReport: number, status: number): Observable {\n    return this.http.put(`${this.apiUrl}/${idReport}`, { status });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard de rutas que restringe el acceso según el rol del usuario.\nSe basa en la información almacenada en localStorage por el UserService.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/role.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene uno de los roles esperados para acceder a una ruta.\nSi no cumple, redirige a la raíz y niega el acceso.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Snapshot de la ruta actual.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario tiene el rol adecuado, false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { inject, Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n/**\n * Guard de rutas que restringe el acceso según el rol del usuario.\n * Se basa en la información almacenada en `localStorage` por el `UserService`.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  /** Inyección del servicio de usuario */\n  private userService = inject(UserService);\n\n  /** Inyección del router para redirección */\n  private router = inject(Router);\n\n  /**\n   * Verifica si el usuario tiene uno de los roles esperados para acceder a una ruta.\n   * Si no cumple, redirige a la raíz y niega el acceso.\n   *\n   * @param route Snapshot de la ruta actual.\n   * @returns `true` si el usuario tiene el rol adecuado, `false` en caso contrario.\n   */\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const expectedRoles: string[] = route.data['expectedRoles'];\n    const userRole = this.userService.getRole();\n\n    if (!userRole || !expectedRoles.includes(userRole)) {\n      console.warn(`Acceso Denegado. Rol \"${userRole}\" no está autorizado para esta ruta.`);\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/role.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para la gestión de roles de usuario en la aplicación.\nUtiliza localStorage para almacenar y verificar el rol actual.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRole\n                            \n                            \n                                hasRole\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol actual almacenado en localStorage.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                Rol como string (ej: 'admin', 'student') o null si no está definido.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasRole\n                        \n                    \n                \n            \n            \n                \nhasRole(expectedRole: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene el rol esperado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expectedRole\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Rol que se desea verificar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el rol coincide, false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol actual corresponde a un administrador.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si es 'admin', false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStudent\n                        \n                    \n                \n            \n            \n                \nisStudent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/role.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Verifica si el rol actual corresponde a un estudiante.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si es 'student', false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Servicio para la gestión de roles de usuario en la aplicación.\n * Utiliza `localStorage` para almacenar y verificar el rol actual.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  /**\n   * Obtiene el rol actual almacenado en `localStorage`.\n   * @returns Rol como string (ej: 'admin', 'student') o `null` si no está definido.\n   */\n  getRole(): string | null {\n    return localStorage.getItem('userRole');\n  }\n\n  /**\n   * Verifica si el usuario tiene el rol esperado.\n   * @param expectedRole Rol que se desea verificar.\n   * @returns `true` si el rol coincide, `false` en caso contrario.\n   */\n  hasRole(expectedRole: string): boolean {\n    const role = this.getRole();\n    return role === expectedRole;\n  }\n\n  /**\n   * Verifica si el rol actual corresponde a un administrador.\n   * @returns `true` si es 'admin', `false` en caso contrario.\n   */\n  isAdmin(): boolean {\n    return this.getRole() === 'admin';\n  }\n\n  /**\n   * Verifica si el rol actual corresponde a un estudiante.\n   * @returns `true` si es 'student', `false` en caso contrario.\n   */\n  isStudent(): boolean {\n    return this.getRole() === 'student';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Score.html":{"url":"interfaces/Score.html","title":"interface - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa una puntuación (score) que un usuario otorga a una publicación.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idPost\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idPost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID de la publicación puntuada\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del usuario que otorgó la puntuación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor de la puntuación (por ejemplo: 1 a 5 estrellas)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    /** ID único de la publicación */\n    idPost: number;\n\n    /** Título de la publicación */\n    title: string;\n\n    /** Contenido detallado de la publicación */\n    content: string;\n\n    /** ID de la categoría asociada a la publicación */\n    idCategory: number;\n\n    /** ID del usuario que creó la publicación */\n    idUser: number;\n\n    /** Fecha de creación de la publicación (ISO string) */\n    createdDate: string;\n\n    /** Número de visualizaciones que ha recibido la publicación */\n    views: number;\n}\n\n/**\n * Representa un comentario realizado por un usuario en una publicación.\n */\nexport interface Comment {\n    /** ID único del comentario */\n    idComment: number;\n\n    /** ID de la publicación a la que pertenece el comentario */\n    idPost: number;\n\n    /** ID del usuario que escribió el comentario */\n    idUser: string;\n\n    /** Contenido del comentario */\n    content: string;\n\n    /** Fecha en que se realizó el comentario (ISO string) */\n    date: string;\n}\n\n/**\n * Representa una puntuación (score) que un usuario otorga a una publicación.\n */\nexport interface Score {\n    /** ID de la publicación puntuada */\n    idPost: number;\n\n    /** ID del usuario que otorgó la puntuación */\n    idUser: number;\n\n    /** Valor de la puntuación (por ejemplo: 1 a 5 estrellas) */\n    score: number;\n}\n\n/**\n * Representa la cantidad de visualizaciones que ha recibido una publicación.\n */\nexport interface PostView {\n    /** ID de la publicación */\n    idPost: number;\n\n    /** Número total de visualizaciones registradas */\n    views: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/score.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las puntuaciones (scores) de las publicaciones\nen la plataforma ConectaDuoc. Permite registrar, consultar y calcular promedios\nsegún publicaciones y usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAverageScore\n                            \n                            \n                                getResumenScores\n                            \n                            \n                                getUserScore\n                            \n                            \n                                setScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAverageScore\n                        \n                    \n                \n            \n            \n                \ngetAverageScore(idPost: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Obtiene el promedio de puntuación de una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Valor promedio (ej: 4.2).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResumenScores\n                        \n                    \n                \n            \n            \n                \ngetResumenScores(idUser: number, idCategoria?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Obtiene un resumen de puntuaciones del usuario, incluyendo promedio general\ny su propia puntuación en cada publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                        \n                                                idCategoria\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (opcional) ID de la categoría a filtrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Arreglo de objetos con ID del post, promedio y puntuación personal.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserScore\n                        \n                    \n                \n            \n            \n                \ngetUserScore(idPost: number, idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Obtiene la puntuación que un usuario le dio a una publicación específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idPost\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la publicación.\n\n                                            \n                                        \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Objeto Score o null si el usuario no ha votado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(score: Score)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/score.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Registra o actualiza la puntuación de un usuario sobre una publicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            Score\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Score con los datos a guardar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/score'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/score.service.ts:16\n                        \n                    \n\n            \n                \n                    URL base del API de puntuaciones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/score.service.ts:19\n                        \n                    \n\n            \n                \n                    Cliente HTTP utilizado para realizar peticiones al backend\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Score } from '../../models/post';\n\n/**\n * Servicio encargado de gestionar las puntuaciones (scores) de las publicaciones\n * en la plataforma ConectaDuoc. Permite registrar, consultar y calcular promedios\n * según publicaciones y usuarios.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreService {\n  /** URL base del API de puntuaciones */\n  private apiUrl = 'http://localhost:9090/api/score';\n\n  /** Cliente HTTP utilizado para realizar peticiones al backend */\n  private http = inject(HttpClient);\n\n  /**\n   * Obtiene el promedio de puntuación de una publicación.\n   * @param idPost ID de la publicación.\n   * @returns Valor promedio (ej: 4.2).\n   */\n  getAverageScore(idPost: number): Observable {\n    return this.http.get(`${this.apiUrl}/average/${idPost}`);\n  }\n\n  /**\n   * Obtiene la puntuación que un usuario le dio a una publicación específica.\n   * @param idPost ID de la publicación.\n   * @param idUser ID del usuario.\n   * @returns Objeto `Score` o `null` si el usuario no ha votado.\n   */\n  getUserScore(idPost: number, idUser: number): Observable {\n    return this.http.get(`${this.apiUrl}/user/${idUser}/post/${idPost}`);\n  }\n\n  /**\n   * Registra o actualiza la puntuación de un usuario sobre una publicación.\n   * @param score Objeto `Score` con los datos a guardar.\n   */\n  setScore(score: Score): Observable {\n    return this.http.post(`${this.apiUrl}/save`, score);\n  }\n\n  /**\n   * Obtiene un resumen de puntuaciones del usuario, incluyendo promedio general\n   * y su propia puntuación en cada publicación.\n   * @param idUser ID del usuario.\n   * @param idCategoria (opcional) ID de la categoría a filtrar.\n   * @returns Arreglo de objetos con ID del post, promedio y puntuación personal.\n   */\n  getResumenScores(idUser: number, idCategoria?: number): Observable {\n    let url = `${this.apiUrl}/resumen?idUser=${idUser}`;\n    if (idCategoria !== undefined) url += `&idCategoria=${idCategoria}`;\n    return this.http.get(url);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un usuario registrado en la plataforma ConectaDuoc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            policies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sede del usuario (ej: Maipú, San Joaquín, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo institucional del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre completo del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        policies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        policies:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de las reglas comunitarias\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rol del usuario (ej: student, admin)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /** ID único del usuario */\n    idUser?: number;\n    /** Correo institucional del usuario */\n    email: string;\n    /** Nombre completo del usuario */\n    name: string;\n    /** Rol del usuario (ej: student, admin) */\n    role?: string;\n    /** Sede del usuario (ej: Maipú, San Joaquín, etc.) */\n    center: string;\n    /** Estado de las reglas comunitarias */\n    policies: number; // 0 No, 1 Sí\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio responsable de gestionar la información de los usuarios\nen la plataforma ConectaDuoc, incluyendo integración con Azure AD\ny operaciones CRUD sobre la base de datos.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                msalService\n                            \n                            \n                                userName$\n                            \n                            \n                                    Private\n                                userNameSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserExists\n                            \n                            \n                                clearRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getAll\n                            \n                            \n                                getAzureUser\n                            \n                            \n                                getIdUser\n                            \n                            \n                                getName\n                            \n                            \n                                getRole\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                registerUser\n                            \n                            \n                                setIdUser\n                            \n                            \n                                setName\n                            \n                            \n                                setRole\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor del servicio.\nSincroniza el nombre del usuario desde Azure AD o localStorage,\ny lo actualiza en el BehaviorSubject y almacenamiento local.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserExists\n                        \n                    \n                \n            \n            \n                \ncheckUserExists(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Verifica si un usuario con el correo indicado ya está registrado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo institucional del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si existe, false si no.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearRole\n                        \n                    \n                \n            \n            \n                \nclearRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Elimina el rol del usuario desde localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los usuarios registrados.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAzureUser\n                        \n                    \n                \n            \n            \n                \ngetAzureUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Obtiene los datos del usuario actualmente autenticado mediante Azure AD.\n\n\n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                Objeto con email y nombre completo, o null si no hay sesión activa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdUser\n                        \n                    \n                \n            \n            \n                \ngetIdUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Obtiene el ID del usuario almacenado.\n\n\n                        \n                            Returns :     number | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre del usuario almacenado.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol almacenado en localStorage.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario completo desde la base de datos según el correo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:138\n                        \n                    \n\n\n            \n                \n                        Obtiene un usuario desde la base de datos por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID numérico del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario en la base de datos.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de tipo User con los datos del nuevo usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdUser\n                        \n                    \n                \n            \n            \n                \nsetIdUser(idUser: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Guarda el ID del usuario autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID numérico del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setName\n                        \n                    \n                \n            \n            \n                \nsetName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Guarda el nombre del usuario para mostrarlo en la interfaz.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre completo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRole\n                        \n                    \n                \n            \n            \n                \nsetRole(role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Guarda el rol del usuario en localStorage para uso en frontend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Rol del usuario (ej: \"admin\", \"student\").\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(email: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevos datos del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:9090/api/usuarios'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    URL base del API de usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:24\n                        \n                    \n\n            \n                \n                    Cliente HTTP para interactuar con el backend vía API REST\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MsalService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:21\n                        \n                    \n\n            \n                \n                    Servicio MSAL para autenticación con Azure Active Directory\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userNameSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:30\n                        \n                    \n\n            \n                \n                    Observable expuesto públicamente para suscribirse al nombre del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userNameSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:27\n                        \n                    \n\n            \n                \n                    Subject que mantiene el nombre del usuario en tiempo real\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../../models/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio responsable de gestionar la información de los usuarios\n * en la plataforma ConectaDuoc, incluyendo integración con Azure AD\n * y operaciones CRUD sobre la base de datos.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  /** URL base del API de usuarios */\n  private apiUrl = 'http://localhost:9090/api/usuarios';\n  //private apiUrl = 'https://yr3rp1l7fd.execute-api.us-east-1.amazonaws.com/api/usuarios';\n\n  /** Servicio MSAL para autenticación con Azure Active Directory */\n  private msalService = inject(MsalService);\n\n  /** Cliente HTTP para interactuar con el backend vía API REST */\n  private http = inject(HttpClient);\n\n  /** Subject que mantiene el nombre del usuario en tiempo real */\n  private userNameSubject = new BehaviorSubject(null);\n\n  /** Observable expuesto públicamente para suscribirse al nombre del usuario */\n  userName$ = this.userNameSubject.asObservable();\n\n  /**\n   * Constructor del servicio.\n   * Sincroniza el nombre del usuario desde Azure AD o localStorage,\n   * y lo actualiza en el `BehaviorSubject` y almacenamiento local.\n   */\n  constructor() {\n    const account = this.msalService.instance.getActiveAccount();\n    const localName = localStorage.getItem('nombreUsuario');\n\n    if (account && !localName) {\n      const fullName = account.name || account.username || 'Desconocido';\n      this.setName(fullName); // guarda en BehaviorSubject + localStorage\n    } else if (localName) {\n      this.userNameSubject.next(localName); // sincroniza el observable\n    }\n  }\n\n  /**\n   * Obtiene los datos del usuario actualmente autenticado mediante Azure AD.\n   * @returns Objeto con email y nombre completo, o `null` si no hay sesión activa.\n   */\n  getAzureUser(): { email: string; fullName: string } | null {\n    const account = this.msalService.instance.getActiveAccount();\n    if (!account) return null;\n    return {\n      email: account.username,\n      fullName: account.name || ''\n    };\n  }\n\n  /**\n   * Verifica si un usuario con el correo indicado ya está registrado.\n   * @param email Correo institucional del usuario.\n   * @returns `true` si existe, `false` si no.\n   */\n  checkUserExists(email: string): Observable {\n    const encodedEmail = encodeURIComponent(email);\n    return this.http.get(`${this.apiUrl}/exists/${encodedEmail}`);\n  }\n\n  /**\n   * Registra un nuevo usuario en la base de datos.\n   * @param user Objeto de tipo `User` con los datos del nuevo usuario.\n   */\n  registerUser(user: User): Observable {\n    return this.http.post(this.apiUrl, user);\n  }\n\n  /**\n   * Obtiene el usuario completo desde la base de datos según el correo.\n   * @param email Correo del usuario.\n   */\n  getUser(email: string): Observable {\n    return this.http.get(`${this.apiUrl}/${email}`);\n  }\n\n  /**\n   * Guarda el rol del usuario en `localStorage` para uso en frontend.\n   * @param role Rol del usuario (ej: \"admin\", \"student\").\n   */\n  setRole(role: string) {\n    localStorage.setItem('userRole', role);\n  }\n\n  /** Obtiene el rol almacenado en `localStorage`. */\n  getRole(): string | null {\n    return localStorage.getItem('userRole');\n  }\n\n  /** Elimina el rol del usuario desde `localStorage`. */\n  clearRole() {\n    localStorage.removeItem('userRole');\n  }\n\n  /**\n   * Guarda el nombre del usuario para mostrarlo en la interfaz.\n   * @param name Nombre completo del usuario.\n   */\n  setName(name: string) {\n    this.userNameSubject.next(name);\n    localStorage.setItem('nombreUsuario', name);\n  }\n\n  /** Obtiene el nombre del usuario almacenado. */\n  getName(): string | null {\n    return localStorage.getItem('nombreUsuario');\n  }\n\n  /**\n   * Guarda el ID del usuario autenticado.\n   * @param idUser ID numérico del usuario.\n   */\n  setIdUser(idUser: number) {\n    localStorage.setItem('idUser', idUser.toString());\n  }\n\n  /** Obtiene el ID del usuario almacenado. */\n  getIdUser(): number | null {\n    const raw = localStorage.getItem('idUser');\n    return raw ? Number(raw) : null;\n  }\n\n  /**\n   * Obtiene un usuario desde la base de datos por su ID.\n   * @param idUser ID numérico del usuario.\n   */\n  getUserById(idUser: number): Observable {\n    return this.http.get(`${this.apiUrl}/id/${idUser}`);\n  }\n\n  // ----------------------\n  // Módulo de Configuraciones\n  // ----------------------\n\n  /** Obtiene todos los usuarios registrados. */\n  getAll(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  /**\n   * Actualiza los datos de un usuario.\n   * @param id ID del usuario a modificar.\n   * @param user Nuevos datos del usuario.\n   */\n  updateUser(email: string, user: User): Observable {\n    return this.http.put(`${this.apiUrl}/${email}`, user);\n  }\n\n  /**\n   * Elimina un usuario por su ID.\n   * @param id ID del usuario a eliminar.\n   */\n  deleteUser(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsuariosComponent.html":{"url":"components/UsuariosComponent.html","title":"component - UsuariosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsuariosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/configuracion/usuarios/usuarios.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente del panel de configuración para administrar usuarios.\nPermite listar, filtrar, editar y actualizar datos de usuarios registrados.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config-usuarios\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                                BreadcrumbComponent\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./usuarios.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./usuarios.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                filtroNombre\n                            \n                            \n                                sedes\n                            \n                            \n                                userForm\n                            \n                            \n                                users\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelarEdicion\n                            \n                            \n                                cargarUsuarios\n                            \n                            \n                                editar\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuariosFiltrados\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarEdicion\n                        \n                    \n                \n            \n            \n                \ncancelarEdicion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Cancela la edición del usuario y limpia el formulario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarUsuarios\n                        \n                    \n                \n            \n            \n                \ncargarUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Carga todos los usuarios desde el backend.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editar\n                        \n                    \n                \n            \n            \n                \neditar(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Prepara el formulario para editar un usuario seleccionado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario a editar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Guarda los cambios realizados al usuario actualmente en edición.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario de edición y carga los usuarios existentes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:34\n                        \n                    \n\n            \n                \n                    Usuario que está siendo editado actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:22\n                        \n                    \n\n            \n                \n                    Servicio para construir y manejar formularios reactivos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtroNombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:37\n                        \n                    \n\n            \n                \n                    Texto para filtrar usuarios por nombre\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sedes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:40\n                        \n                    \n\n            \n                \n                    Lista de sedes posibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:31\n                        \n                    \n\n            \n                \n                    Formulario para editar usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:28\n                        \n                    \n\n            \n                \n                    Lista de usuarios cargados desde el backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:25\n                        \n                    \n\n            \n                \n                    Servicio para gestionar la información del usuario en la aplicación\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuariosFiltrados\n                    \n                \n\n                \n                    \n                        getusuariosFiltrados()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/configuracion/usuarios/usuarios.component.ts:83\n                                \n                            \n                    \n                        \n                                Devuelve los usuarios filtrados por nombre.\n\n\n                                \n                                    Returns :         User[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UserService } from '../../../core/services/user.service';\nimport { User } from '../../../models/user';\nimport { BreadcrumbComponent } from '../../breadcrumb/breadcrumb.component';\n\n/**\n * Componente del panel de configuración para administrar usuarios.\n * Permite listar, filtrar, editar y actualizar datos de usuarios registrados.\n */\n@Component({\n  selector: 'app-config-usuarios',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, BreadcrumbComponent, FormsModule],\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n  /** Servicio para construir y manejar formularios reactivos */\n  private fb = inject(FormBuilder);\n\n  /** Servicio para gestionar la información del usuario en la aplicación */\n  private userService = inject(UserService);\n\n  /** Lista de usuarios cargados desde el backend */\n  users: User[] = [];\n\n  /** Formulario para editar usuario */\n  userForm!: FormGroup;\n\n  /** Usuario que está siendo editado actualmente */\n  editing: User | null = null;\n\n  /** Texto para filtrar usuarios por nombre */\n  filtroNombre: string = '';\n\n  /** Lista de sedes posibles */\n  sedes: string[] = [\n    'Modalidad online',\n    'Campus Virtual',\n    'Sede Alameda',\n    'Sede Padre Alonso de Ovalle',\n    'Sede Antonio Varas',\n    'Sede Educación Continua',\n    'Sede Maipú',\n    'Sede Melipilla',\n    'Sede Plaza Norte',\n    'Sede Plaza Oeste',\n    'Sede Plaza Vespucio',\n    'Sede Puente Alto',\n    'Sede San Bernardo',\n    'Sede San Carlos de Apoquindo',\n    'Sede San Joaquín',\n    'Sede Valparaíso',\n    'Sede Viña del Mar',\n    'Campus Arauco',\n    'Campus Nacimiento',\n    'Sede San Andrés de Concepción',\n    'Campus Villarrica',\n    'Sede Puerto Montt'\n  ];\n\n\n  /**\n   * Inicializa el formulario de edición y carga los usuarios existentes.\n   */\n  ngOnInit(): void {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      role: ['student', Validators.required],\n      center: ['', Validators.required]\n    });\n\n    this.cargarUsuarios();\n  }\n\n  /**\n   * Devuelve los usuarios filtrados por nombre.\n   */\n  get usuariosFiltrados(): User[] {\n    if (!this.filtroNombre.trim()) return this.users;\n    const filtro = this.filtroNombre.toLowerCase();\n    return this.users.filter(u => u.name?.toLowerCase().includes(filtro));\n  }\n\n  /**\n   * Carga todos los usuarios desde el backend.\n   */\n  cargarUsuarios(): void {\n    this.userService.getAll().subscribe(users => (this.users = users));\n  }\n\n  /**\n   * Prepara el formulario para editar un usuario seleccionado.\n   * @param user Usuario a editar.\n   */\n  editar(user: User): void {\n    this.editing = { ...user };\n    this.userForm.patchValue(this.editing);\n  }\n\n  /**\n   * Cancela la edición del usuario y limpia el formulario.\n   */\n  cancelarEdicion(): void {\n    this.editing = null;\n    this.userForm.reset({ role: 'student' });\n  }\n\n  /**\n   * Guarda los cambios realizados al usuario actualmente en edición.\n   */\n  guardar(): void {\n    if (this.userForm.invalid || !this.editing?.idUser) return;\n\n    const datos = {\n      ...this.userForm.value,\n      policies: 1\n    };\n\n    this.userService.updateUser(this.editing.email, datos).subscribe(() => {\n      this.userService.setName(datos.name);\n      this.cargarUsuarios();\n      this.cancelarEdicion();\n    });\n  }\n\n  /**\n   * (Comentado) Elimina un usuario del sistema.\n   * @param user Usuario a eliminar.\n   */\n  /*   \n  eliminar(user: User): void {\n      if (!user.idUser) return;\n      if (!confirm('¿Eliminar usuario?')) return;\n      this.userService.deleteUser(user.idUser).subscribe(() => {\n        this.cargarUsuarios();\n      });\n    } \n    */\n\n}\n    \n\n    \n        \n    \n    Usuarios\n    Administra los usuarios de la plataforma\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Admin\n                    Student\n                \n            \n            \n                \n                    Selecciona sede\n                    {{ sede }}\n                \n            \n            \n                Actualizar\n                Cancelar\n            \n        \n    \n\n    \n    \n        \n    \n\n    \n        \n            \n                \n                    Email\n                    Nombre\n                    Rol\n                    Sede\n                    Editar\n                \n            \n            \n                \n                    {{ u.email }}\n                    {{ u.name }}\n                    {{ u.role }}\n                    {{ u.center }}\n                    \n                        \n                         -->\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./usuarios.component.scss\n                \n                @use 'sass:color';\n@use 'styles' as *;\n\n.titulo-panel {\n    font-size: 2rem;\n    font-weight: bold;\n    color: $negro;\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        width: 60px;\n        height: 4px;\n        margin: 8px auto 0;\n        background-color: $amarillo;\n        border-radius: 2px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Usuarios    Administra los usuarios de la plataforma                                                                                                                                            Admin                    Student                                                                            Selecciona sede                    {{ sede }}                                                        Actualizar                Cancelar                                                                                                        Email                    Nombre                    Rol                    Sede                    Editar                                                                            {{ u.email }}                    {{ u.name }}                    {{ u.role }}                    {{ u.center }}                                                                     -->                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CategoriasAdminComponent', 'selector': 'app-config-categorias'},{'name': 'CategoriasComponent', 'selector': 'app-categorias'},{'name': 'ConfiguracionComponent', 'selector': 'app-configuracion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetalleComponent', 'selector': 'app-detalle'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalConfirmacionComponent', 'selector': 'app-modal-confirmacion'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificacionBannerComponent', 'selector': 'app-notificacion-banner'},{'name': 'NotificacionesComponent', 'selector': 'app-notificaciones'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'PublicacionesReportadasComponent', 'selector': 'app-publicaciones-reportadas'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReglasDeLaComunidadComponent', 'selector': 'app-reglas-de-la-comunidad'},{'name': 'UsuariosComponent', 'selector': 'app-config-usuarios'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsuariosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.routes.ts\n            \n            variable\n            reglasAceptadasGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/categorias/categorias.component.ts\n            \n            component\n            CategoriasComponent\n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                src/app/components/categorias/detalle/detalle.component.ts\n            \n            component\n            DetalleComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/categorias-admin/categorias-admin.component.ts\n            \n            component\n            CategoriasAdminComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/configuracion.component.ts\n            \n            component\n            ConfiguracionComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/notificaciones/notificaciones.component.ts\n            \n            component\n            NotificacionesComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/configuracion/usuarios/usuarios.component.ts\n            \n            component\n            UsuariosComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/notificacion-banner/notificacion-banner.component.ts\n            \n            component\n            NotificacionBannerComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/components/publicaciones-reportadas/publicaciones-reportadas.component.ts\n            \n            component\n            PublicacionesReportadasComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/reglas-de-la-comunidad/reglas-de-la-comunidad.component.ts\n            \n            component\n            ReglasDeLaComunidadComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/services/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/notificacion.service.ts\n            \n            injectable\n            NotificacionService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/post-category.service.ts\n            \n            injectable\n            PostCategoryService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/post.service.ts\n            \n            injectable\n            PostService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/services/report.service.ts\n            \n            injectable\n            ReportService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/models/notificacionGlobal.ts\n            \n            interface\n            NotificacionGlobal\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Comment\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Post\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            PostView\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Score\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/postCategory.ts\n            \n            interface\n            PostCategory\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/report.ts\n            \n            interface\n            Report\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/modal-confirmacion/modal-confirmacion.component.ts\n            \n            component\n            ModalConfirmacionComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.0.4\n        \n            @angular/common : ^20.0.4\n        \n            @angular/compiler : ^20.0.4\n        \n            @angular/core : ^20.0.4\n        \n            @angular/forms : ^20.0.4\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.4\n        \n            @angular/platform-browser-dynamic : ^20.0.4\n        \n            @angular/router : ^20.0.4\n        \n            @azure/msal-angular : ^4.0.12\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nConectaDuoc\nThis project was generated using Angular CLI version 19.0.6.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            reglasAceptadasGuard   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Configura la detección de cambios de Angular utilizando zonas.\n     * - `eventCoalescing: true`: Optimiza los eventos de cambio para evitar múltiples detecciones innecesarias.\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n\n    /**\n     * Proporciona las rutas definidas en el archivo `app.routes.ts` al enrutador global.\n     */\n    provideRouter(routes),\n\n    /**\n     * Establece el idioma global de Angular para fechas y localización.\n     */\n    { provide: LOCALE_ID, useValue: 'es-CL' }\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración principal de la aplicación Angular.\nEste archivo define los proveedores globales necesarios para el correcto funcionamiento de la aplicación,\ncomo el enrutador y la detección de cambios optimizada con zonas.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reglasAceptadasGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n    const router = inject(Router);\n    const aceptadas = localStorage.getItem('conectaReglasAceptadas') === 'true';\n\n    if (!aceptadas) {\n        router.navigate(['/reglas-de-la-comunidad']);\n        return false;\n    }\n\n    return true;\n}\n                    \n                \n\n            \n                \n                    Guard personalizado que verifica si el usuario ha aceptado las reglas de la comunidad.\nSi no lo ha hecho, redirige a la ruta /reglas-de-la-comunidad.\nSe usa en conjunto con AuthGuard para rutas protegidas.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
